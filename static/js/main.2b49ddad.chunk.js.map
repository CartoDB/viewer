{"version":3,"sources":["json sync /^/.//template/..*/.json$","../../../../src/utils/get.js","../../../../src/helpers/parse-expression-string.js","../../../../src/utils/assert.js","../../../src/syntactic-sugar.js","../../../src/json-configuration.js","../../../../src/helpers/convert-functions.js","../../../../src/helpers/instantiate-class.js","../../../src/json-converter.js","../../../../src/helpers/parse-json.js","../../../../src/utils/log.js","../../../../src/utils/typed-array-manager.js","../../../../src/utils/math-utils.js","../../../../src/lib/constants.js","../../../../src/viewports/viewport.js","../../../../src/utils/positions.js","../../../../src/utils/deep-equal.js","../../../../src/views/view.js","../../../../src/viewports/web-mercator-viewport.js","../../../../src/transitions/transition-interpolator.js","../../../../src/transitions/linear-interpolator.js","../../../../src/transitions/transition.js","../../../../src/controllers/transition-manager.js","../../../../src/controllers/controller.js","../../../../src/controllers/view-state.js","../../../../src/controllers/map-controller.js","../../../../src/views/map-view.js","../../../../../src/lib/attribute/shader-attribute.js","../../../../../src/lib/attribute/data-column.js","../../../../../src/lib/attribute/gl-utils.js","../../../../src/utils/iterable-utils.js","../../../../src/utils/flatten.js","../../../../src/utils/range.js","../../../../src/utils/array-utils.js","../../../../../src/lib/attribute/attribute-transition-utils.js","../../../../../src/lib/attribute/attribute.js","../../../../src/debug/index.js","../../../../src/transitions/gpu-interpolation-transition.js","../../../../../src/lib/attribute/attribute-transition-manager.js","../../../../src/transitions/gpu-spring-transition.js","../../../../../src/lib/attribute/attribute-manager.js","../../../../src/transitions/cpu-interpolation-transition.js","../../../../src/transitions/cpu-spring-transition.js","../../../../src/lib/uniform-transition-manager.js","../../../../src/lifecycle/constants.js","../../../../src/lifecycle/props.js","../../../../src/utils/count.js","../../../../src/utils/memoize.js","../../../../src/utils/shader.js","../../../../../src/shaderlib/project/viewport-uniforms.js","../../../../../src/shaderlib/project/project-functions.js","../../../../src/lifecycle/prop-types.js","../../../../src/lifecycle/create-props.js","../../../../src/lifecycle/component-state.js","../../../../src/lifecycle/component.js","../../../../src/lib/layer-state.js","../../../../src/lib/layer.js","../../../../src/lib/composite-layer.js","../../../../../src/shaderlib/project/project.glsl.js","../../../../../src/shaderlib/project/project.js","../../../../../src/shaderlib/project32/project32.js","../../../../../src/shaderlib/picking/picking.js","../../../../src/scatterplot-layer/scatterplot-layer.js","../../../../src/scatterplot-layer/scatterplot-layer-vertex.glsl.js","../../../../src/scatterplot-layer/scatterplot-layer-fragment.glsl.js","../../../../src/utils/tesselator.js","../../../../src/path-layer/path-tesselator.js","../../../../src/path-layer/path.js","../../../../src/path-layer/path-layer.js","../../../../src/path-layer/path-layer-vertex.glsl.js","../../../../src/path-layer/path-layer-fragment.glsl.js","../../../../src/solid-polygon-layer/polygon.js","../../../../src/solid-polygon-layer/polygon-tesselator.js","../../../../src/solid-polygon-layer/solid-polygon-layer-vertex-main.glsl.js","../../../../src/solid-polygon-layer/solid-polygon-layer-vertex-top.glsl.js","../../../../src/solid-polygon-layer/solid-polygon-layer-vertex-side.glsl.js","../../../../src/solid-polygon-layer/solid-polygon-layer.js","../../../../src/solid-polygon-layer/solid-polygon-layer-fragment.glsl.js","../../../src/utils.js","../../../../src/geojson-layer/geojson.js","../../../../src/geojson-layer/geojson-layer.js","../../../../src/tile-layer/tile-2d-header.js","../../../../src/tile-layer/tile-2d-traversal.js","../../../../src/tile-layer/utils.js","../../../../src/tile-layer/tileset-2d.js","../../../../src/tile-layer/tile-layer.js","../../../../src/lib/layer-extension.js","../../../../src/mvt-layer/clip-extension.js","../../../../src/mvt-layer/mvt-layer.js","../../../src/config.js","../../../../src/api/maps-api-client.js","../../../../src/layers/carto-layer.js","../../../../src/layers/carto-bqtiler-layer.js","../../../../src/layers/carto-sql-layer.js","../../../src/basemap.js","json/configuration.js","../../../../../src/lib/resource/resource.js","../../../../../src/lib/resource/resource-manager.js","../../../../src/shaderlib/index.js","../../../../../src/shaderlib/misc/geometry.js","../../../../src/lib/layer-manager.js","../../../../src/lib/view-manager.js","../../../../../src/effects/lighting/ambient-light.js","../../../../../src/effects/lighting/directional-light.js","../../../../src/lib/effect.js","../../../../src/passes/pass.js","../../../../src/passes/layers-pass.js","../../../../src/passes/shadow-pass.js","../../../../../src/shaderlib/shadow/shadow.js","../../../../../src/effects/lighting/lighting-effect.js","../../../../src/lib/effect-manager.js","../../../../src/passes/draw-layers-pass.js","../../../../src/passes/pick-layers-pass.js","../../../../src/lib/deck-renderer.js","../../../../../src/lib/picking/query-object.js","../../../../../src/lib/picking/pick-info.js","../../../../src/lib/deck-picker.js","../../../../src/lib/tooltip.js","../../../../src/utils/json-loader.js","../../../../src/lib/init.js","../../../../src/lib/deck.js","../../../../src/utils/inherits-from.js","../../../../src/utils/extract-jsx-layers.js","../../../../src/utils/evaluate-children.js","../../../../src/utils/position-children-under-views.js","../../../../src/utils/extract-styles.js","../../../src/deckgl.js","components/deck-with-mapbox-maps.js","../../../src/google-maps-overlay.js","components/deck-with-google-maps.js","components/map.js","components/json-editor.js","components/configurationSidebar.js","components/shareSidebar.js","components/sidebar.js","views/home.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","value","compositeKey","keyList","keyMap","Array","getKeys","key","isObject","cachedExpressionMap","object","parseExpressionString","propValue","configuration","ast","expressionEval","traverse","node","func","row","get","visitor","element","message","FUNCTION_IDENTIFIER","CONSTANT_IDENTIFIER","TYPE_KEY","JSONConfiguration","this","json","configurations","assert","convertFunction","trimFunctionIdentifier","convertFunctions","props","replacedProps","instantiateClass","type","Class","Component","log","stringProps","JSON","instantiateJavaScriptClass","React","children","instantiateReactComponent","JSONConverter","config","convertedJson","convertJSONRecursively","convertJSON","parseJSON","postProcessConvertedJson","convert","String","typeKey","Boolean","isClassInstance","convertPlainObject","convertClassInstance","string","enumVarName","enumValName","convertString","result","overAlloc","poolSize","size","padding","copy","initialize","Type","typedArray","newSize","count","ArrayBuffer","newArray","_allocate","Math","pool","byteLength","i","b","array","buffer","cameraPosition","cameraDirection","cameraUp","cameraRight","nearCenter","farCenter","a","toDoublePrecisionArray","startIndex","endIndex","Number","scratchArray","x","sourceIndex","targetIndex","j","COORDINATE_SYSTEM","DEFAULT","LNGLAT","METER_OFFSETS","LNGLAT_OFFSETS","CARTESIAN","PROJECTION_MODE","WEB_MERCATOR","GLOBE","WEB_MERCATOR_AUTO_OFFSET","IDENTITY","EVENTS","click","handler","panstart","panmove","panend","DEGREES_TO_RADIANS","ZERO_VECTOR","DEFAULT_DISTANCE_SCALES","unitsPerMeter","metersPerUnit","Viewport","opts","y","width","height","constructor","equals","bind","project","unproject","projectPosition","unprojectPosition","projectFlat","unprojectFlat","viewport","xyz","topLeft","worldPosition","coord","worldToPixels","y2","targetZ","z","targetZWorld","distanceScales","pixelsToWorld","X","Y","Z","lngLatToWorld","worldToLngLat","options","unprojectOption","topRight","bottomLeft","bottomRight","coordinateOrigin","getDistanceScales","longitude","latitude","highPrecision","_frustumPlanes","near","far","fovyRadians","aspect","position","direction","up","right","nearFarScale","widthScale","nearHeight","nearWidth","normal","distance","planes","getFrustumPlanes","orthographic","focalDistance","fovy","viewMatrix","zoom","modelMatrix","isGeospatial","scale","_getCenterInWorld","center","meterOffset","commonPosition","projectionMatrix","_createProjectionMatrix","vpm","mat4","viewMatrixInverse","eye","extractCameraVectors","viewportMatrix","pixelProjectionMatrix","PERCENT_OR_PIXELS_REGEX","parsePosition","relative","match","parseFloat","getPosition","extent","deepEqual","aValue","bValue","View","viewportInstance","view","viewState","filterViewState","viewportDimensions","getDimensions","_getViewport","newViewState","defaultOpts","ViewportType","WebMercatorViewport","pitch","bearing","nearZMultiplier","farZMultiplier","repeat","worldOffset","altitude","getProjectionParameters","fov","viewMatrixUncentered","getViewMatrix","viewOffset","viewportOpts","lngLatZ","addMetersToLngLat","lngLat","pos","fromLocation","toLocation","translate","vec2","newCenter","corners","getBounds","bounds","fitBounds","_subViewports","minOffset","maxOffset","offsetViewport","TransitionInterpolator","compare","extract","required","currentProps","nextProps","_propsToCompare","startProps","endProps","startViewStateProps","endViewStateProps","start","end","t","propName","DEFAULT_PROPS","DEFAULT_REQUIRED_PROPS","LinearInterpolator","transitionProps","lerp","noop","DEFAULT_SETTINGS","onStart","onUpdate","onInterrupt","onEnd","Transition","_handle","timeline","settings","delay","duration","getTime","isFinished","TRANSITION_EVENTS","transitionDuration","transitionEasing","transitionInterpolator","transitionInterruption","onTransitionStart","onTransitionInterrupt","onTransitionEnd","TransitionManager","_onTransitionUpdate","transitionTriggered","_shouldIgnoreViewportChange","_isTransitionEnabled","transition","interruption","propsInTransition","interpolator","arePropsEqual","_isUpdateDueToCurrentTransition","startViewstate","initialProps","easing","_onTransitionEnd","callback","time","interactionState","inTransition","oldViewState","NO_TRANSITION_PROPS","EVENT_TYPES","Controller","isDragging","handleEvent","_events","event","ControllerState","makeViewport","_onPanStart","_onPan","_onPanEnd","_onPinchStart","_onPinch","_onPinchEnd","_onDoubleTap","_onWheel","_onKeyDown","offsetCenter","inside","srcEvent","_state","eventManager","scrollZoom","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","isInteractive","eventNames","enabled","eventName","newControllerState","extraProps","changed","controllerState","getCenter","isPointInBounds","panStart","alternateMode","isFunctionKeyPressed","invertPan","_onPanMove","_onPanRotate","panEnd","isPanning","isRotating","pan","deltaX","deltaY","deltaScaleX","deltaScaleY","rotate","delta","isZooming","zoomStart","rotation","startPinchRotation","zoomEnd","isZoomOut","funcKey","customEvents","ViewState","_applyConstraints","LINEAR_TRANSITION_PROPS","MAPBOX_LIMITS","DEFAULT_STATE","MapState","maxZoom","minZoom","maxPitch","minPitch","startPanLngLat","startZoomLngLat","startBearing","startPitch","startZoom","_getUpdatedState","_unproject","startPos","_interactiveState","_calculateNewLngLat","_viewportProps","_calculateNewPitchAndBearing","_calculateNewZoom","_zoomFromCenter","_panFromCenter","fromProps","offset","clamp","normalizeViewportProps","MapController","centerY","startY","updateViewport","MapView","_getControllerProps","ShaderAttribute","source","accessor","constantValue","Float32Array","index","getStride","resolveShaderAttribute","baseAccessor","shaderAttributeOptions","stride","vertexOffset","DataColumn","logicalType","doublePrecision","defaultValue","bufferType","gl","hasFeature","FEATURES","defaultType","glType","glArrayFromType","externalBuffer","bufferAccessor","allocatedValue","constant","typedArrayManager","state","shaderAttributes","isBuffer64Bit","doubleShaderAttributeDefs","resolvedOptions","high","low","resolveDoublePrecisionShaderAttributes","shaderAttributeDef","_normalizeValue","_normalizeConstant","_areValuesEqual","byteOffset","data","startOffset","endOffset","numInstances","oldValue","ArrayType","illegalArrayType","out","value1","value2","isIndexed","target","EMPTY_ARRAY","placeholderArray","createIterable","startRow","endRow","Infinity","iterable","objectInfo","Symbol","isAsyncIterable","getAccessorFromBuffer","startIndices","nested","bytesPerElement","elementStride","elementOffset","vertexCount","flatten","filter","flattenArray","fillArray","length","total","copied","EMPTY","FULL","rangeList","range","newRangeList","len","insertPosition","range0","padArrayChunk","getData","sourceLength","targetLength","datum","DEFAULT_TRANSITION_SETTINGS","interpolation","spring","stiffness","damping","normalizeTransitionSettings","userSettings","layerSettings","getSourceBufferAttribute","attribute","divisor","normalized","getAttributeTypeFromSize","cycleBuffers","buffers","getAttributeBufferLength","multiplier","padBuffer","fromLength","fromStartIndices","precisionMultiplier","toStartIndices","hasStartIndices","toLength","isConstant","toData","srcByteOffset","getter","getMissingData","sourceStartIndices","targetStartIndices","getChunkData","n","nextSourceIndex","nextTargetIndex","padArray","Attribute","noAlloc","update","transform","lastExternalBuffer","binaryValue","binaryAccessor","needsUpdate","needsRedraw","updateRanges","clearChangedFlags","reason","dataRange","context","updated","getVertexOffset","setData","needsNormalize","shaderAttributeDefs","accessorFunc","objectValue","numVertices","item","limit","valid","layout","loggers","deckLog","GPUInterpolationTransition","attributeType","vs","defines","ATTRIBUTE_TYPE","varyings","getTransform","bufferOpts","usage","transitionSettings","padBufferOpts","enter","elementCount","currentLength","sourceBuffers","aFrom","aTo","feedbackBuffers","vCurrent","uniforms","TRANSITION_TYPES","Uint8Array","format","border","mipmaps","dataFormat","getTexture","texture","attachments","getFramebuffer","framebuffer","fs","aPrev","aCur","vNext","discard","clearRenderTarget","parameters","depthTest","blend","blendFunc","blendEquation","readPixelsToArray","AttributeTransitionManager","Transform","attributes","transitions","attributeName","animatedAttributes","isNew","TransitionType","TRACE_INVALIDATE","TRACE_UPDATE_START","TRACE_UPDATE_END","AttributeManager","stats","clearRedrawFlags","redraw","updaters","instanced","attributeNameArray","name","triggerName","invalidatedAttributes","_invalidateTrigger","debug","accessorName","transitionUpdated","attributeTransitionManager","changedAttributes","excludeAttributes","newAttributes","newAttribute","_createAttribute","triggers","CPUInterpolationTransition","fromValue","toValue","EPSILON","updateSpringElement","prev","cur","dest","velocity","distanceSquare","d","_prevValue","_currValue","nextValue","next","updateSpring","UniformTransitionManager","LIFECYCLE","PROP_SYMBOLS","COMPONENT","ASYNC_DEFAULTS","ASYNC_ORIGINAL","ASYNC_RESOLVED","propsChangedReason","compareProps","newProps","oldProps","propTypes","getPropTypes","ignoreProps","updateTriggers","extensions","dataChangedReason","dataChanged","dataComparator","_dataDiff","diffDataProps","updateTriggersChangedReason","diffUpdateTrigger","all","triggerChanged","diffUpdateTriggers","propsChanged","updateTriggersChanged","extensionsChanged","diffExtensions","transitionsChanged","diffTransitions","propType","comparePropValues","newProp","oldProp","equal","oldExtensions","newTriggers","oldTriggers","layer","LayerType","container","isPlainObject","isEqual","memoize","compute","cachedArgs","args","cachedResult","mergeShaders","mergedInjection","VECTOR_TO_POINT_MATRIX","IDENTITY_MATRIX","DEFAULT_PIXELS_PER_UNIT2","DEFAULT_COORDINATE_ORIGIN","getMemoizedViewportUniforms","devicePixelRatio","coordinateSystem","viewProjectionMatrix","projectionCenter","cameraPosCommon","getOffsetOrigin","geospatialOrigin","shaderCoordinateOrigin","positionCommonSpace","vec4","calculateMatrixAndOffset","viewportSize","project_uCoordinateSystem","project_uProjectionMode","project_uCoordinateOrigin","project_uCenter","project_uAntimeridian","project_uViewportSize","project_uDevicePixelRatio","project_uFocalDistance","project_uCommonUnitsPerMeter","project_uCommonUnitsPerWorldUnit","project_uCommonUnitsPerWorldUnit2","project_uScale","project_uViewProjectionMatrix","project_uCameraPosition","distanceScalesAtOrigin","offsetMode","getUniformsFromViewport","autoWrapLongitude","projectionMode","positionOrigin","lngLatZToWorldPosition","p","getWorldPosition","normalizedParams","fromCoordinateSystem","fromCoordinateOrigin","normalizeParameters","vec3","TYPE_DEFINITIONS","boolean","validate","number","color","isArray","arrayEqual","valueType","getTypeOf","function","array1","array2","parsePropType","propDef","normalizePropDefinition","createProps","component","propsPrototype","getPropsPrototype","propsInstance","arguments","componentClass","defaultProps","getOwnProperty","parentClass","parentDefaultProps","componentPropDefs","propDefs","deprecatedProps","parsePropTypes","parentProps","componentName","getComponentName","writable","createPropsPrototype","defaultValues","descriptors","getDescriptorForAsyncProp","addAsyncPropsToPropPrototype","enumerable","set","nameStr","newPropName","hasOwnProperty","addDeprecatedPropsToPropPrototype","createPropsPrototypeAndTypes","newValue","prop","EMPTY_PROPS","ComponentState","oldAsyncProps","asyncProp","asyncProps","isAsyncPropLoading","Promise","resolvedValues","originalValues","_didAsyncInputValueChange","fetch","loadCount","promise","onDataLoad","error","pendingLoadCount","chunk","_postProcessValue","previousValue","dataTransform","lastValue","resolvedValue","resolvedLoadCount","counter","internalState","LayerState","attributeManager","areViewportsEqual","oldViewport","pickingColorCache","Uint8ClampedArray","async","optional","resourceManager","loadOptions","inResourceManager","resourceId","persistent","onChange","consumerId","requestId","load","url","visible","pickable","opacity","min","max","onHover","onClick","onDragStart","onDrag","onDragEnd","wrapLongitude","positionFormat","colorFormat","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","Layer","className","layerName","updateObject","stateChanged","_getNeedsRedraw","shouldUpdateState","uniformTransitions","models","model","xy","info","pickingEvent","i1","shaders","extension","changeFlags","neededPickingBuffer","needPickingBuffer","pickingColors","instancePickingColors","pickingColorsAttribute","mode","viewportChanged","getNumInstances","getStartIndices","ignoreUnknownAttributes","cacheSize","newCacheSize","pickingColor","getAttributeManager","colors","decodePickingColor","stateNeedsUpdate","currentViewport","updateParams","oldModels","modelChanged","getModels","moduleParameters","offsets","setParameters","polygonOffset","withParameters","flags","flagChanged","propsOrDataChanged","somethingChanged","diffProps","setChangeFlags","validateProps","forceUpdate","encodePickingColor","attributeManagerNeedsRedraw","isFinite","calculateInstancePickingColors","_onAsyncPropUpdated","oldLayer","CompositeLayer","overridingProps","DefaultLayerClass","sourceObject","sourceObjectIndex","parent","sublayerProps","overridingSublayerProps","overridingSublayerTriggers","sublayerId","getSubLayerAccessor","passThroughProps","subLayers","shouldUpdate","getSubLayers","every","COORDINATE_SYSTEM_GLSL_CONSTANTS","PROJECTION_MODE_GLSL_CONSTANTS","INITIAL_MODULE_OPTIONS","dependencies","getUniforms","inject","order","injection","DEFAULT_COLOR","radiusUnits","radiusScale","radiusMinPixels","radiusMaxPixels","MAX_SAFE_INTEGER","lineWidthUnits","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","stroked","filled","getRadius","getFillColor","getLineColor","getLineWidth","strokeWidth","deprecatedFor","outline","getColor","ScatterplotLayer","modules","project32","instancePositions","fp64","instanceRadius","instanceFillColors","instanceLineColors","instanceLineWidths","_getModel","pointRadiusMultiplier","lineWidthMultiplier","geometry","drawMode","positions","isInstanced","Tesselator","getGeometry","geometryBuffer","normalize","getGeometryFromBuffer","instanceCount","_attributeDefs","def","indexStarts","vertexStarts","normalizedData","dataIndex","byteStride","positionSize","bufferValue","vertexEnd","PathTesselator","segmentTypes","path","gridResolution","flatPath","cutPolylineByGrid","cutPolylineByMercatorBounds","normalizePath","subPath","getGeometrySize","numPoints","getPathLength","isClosed","geometrySize","isPathClosed","vertexStart","ptIndex","lastPointIndex","widthUnits","widthMinPixels","widthMaxPixels","rounded","miterLimit","billboard","_pathType","getPath","getWidth","ATTRIBUTE_TRANSITION","PathLayer","instanceLeftPositions","instanceStartPositions","instanceEndPositions","instanceRightPositions","instanceTypes","instanceStrokeWidths","instanceColors","pathTesselator","use64bitPositions","getDashArray","loop","resolution","params","widthMultiplier","jointType","indices","Uint16Array","isFlatRingClosed","copyNestedRing","targetStartIndex","simplePolygon","p0","p1","isNestedRingClosed","copyFlatRing","srcStartIndex","srcEndIndex","srcLength","polygon","holeIndices","srcPositions","srcHoleIndices","isSimple","PolygonTesselator","IndexType","Float64Array","vertexValid","externalIndices","Polygon","cutPolygonByGrid","edgeTypes","cutPolygonByMercatorBounds","maxLatitude","subPolygon","geometryIndex","indexStart","normalizedPolygon","preproject","positionIndex","earcut","polygonPositions","extruded","wireframe","_normalize","elevationScale","getPolygon","f","getElevation","material","SolidPolygonLayer","polygonTesselator","hasFeatures","nextPositions","elevations","instanceElevations","fillColors","alias","lineColors","topModel","sideModel","renderUniforms","isWireframe","_getModels","getShaders","vertexPositions","isSideVertex","getIndex","replace","replaceStart","replaceEnd","dataLengthChanged","endChunk","separateGeojsonFeatures","features","wrapFeature","separated","pointFeatures","lineFeatures","polygonFeatures","polygonOutlineFeatures","featureIndex","feature","geometries","subGeometry","separateGeometry","sourceFeature","sourceFeatureIndex","coordinates","nestLevel","COORDINATE_NEST_LEVEL","validateGeometry","point","Point","MultiPoint","LineString","MultiLineString","MultiPolygon","defaultLineColor","lineJointRounded","lineMiterLimit","pointRadiusUnits","pointRadiusScale","pointRadiusMinPixels","pointRadiusMaxPixels","getCoordinates","GeoJsonLayer","geojson","getGeojsonFeatures","getSubLayerRow","oldFeatures","newFeatures","featuresDiff","partialFeatures","replaceInRange","lineDashJustified","getLineDashArray","PolygonFillLayer","getSubLayerClass","PolygonStrokeLayer","LineStringsLayer","PointsLayer","polygonFillLayer","shouldRenderSubLayer","getSubLayerProps","dashJustified","_getHighlightedIndex","Tile2DHeader","onTileLoad","onTileError","getTileData","requestScheduler","bbox","signal","_abortController","tile","requestToken","_isCancelled","tileData","_isLoaded","_loadData","content","OSMNode","cullingVolume","elevationBounds","minZ","maxZ","boundingVolume","getBoundingVolume","child","zRange","originX","originY","TILE_SIZE","DEFAULT_EXTENT","urlType","transformBox","transformedCoords","getURLFromTemplate","template","properties","getScale","osmTile2lngLat","lng","tile2XY","tileToBoundingBox","west","north","east","south","left","top","bottom","getIdentityTileIndices","modelMatrixInverse","getIndexingCoords","bounds0","bounds1","getBoundingBox","minX","minY","maxX","maxY","tileSize","transformedExtent","elevationMin","elevationMax","root","traversalParams","getOSMTileIndices","STRATEGY_DEFAULT","Tileset2D","maxRequests","throttleRequests","modelMatrixAsMatrix4","isModelMatrixNew","tileIndices","getTileIndices","_modelMatrixInverse","tileIndex","abortCandidates","ongoingRequestCount","_cache","isVisible","_getNearestAncestor","selectedTiles","refinementStrategy","getPlaceholderInAncestors","needsPlaceholder","getPlaceholderInChildren","maxCacheSize","maxCacheByteSize","_cacheByteSize","tileId","t1","t2","create","getTileMetadata","_minZoom","getParentIndex","_getTile","_selectedTiles","TILE_STATE_VISIBLE","renderSubLayers","onViewportLoad","onTileUnload","err","console","TileLayer","tiles","isLoaded","tileset","_onTileLoad","_onTileError","_onTileUnload","frameNumber","loadingStateChanged","tilesetChanged","getCurrentLayer","sourceLayer","layers","_offset","LayerExtension","clipBounds","shaderFunction","shaderModuleVs","injectionVs","shaderModuleFs","injectionFs","ClipExtension","clipByInstance","corner0","corner1","fetchTileJSON","MVTLayer","tileJSON","test","tileMinZoom","parseInt","tileMaxZoom","mvt","worldScale","xScale","yScale","xOffset","yOffset","uniqueIdProperty","hoveredFeatureId","hoveredFeature","newHoveredFeatureId","getFeatureUniqueId","highlightedFeatureId","isFeatureIdDefined","featureIdToHighlight","maxObjects","deck","layerIds","maxFeatures","_pickObjects","featureCache","renderedFeatures","featureId","onViewportChange","getRenderedFeatures","credentials","username","apiKey","region","mapsVersion","sqlUrl","mapsUrl","getDefaultCredentials","getMapsVersion","creds","localCreds","DEFAULT_USER_COMPONENT_IN_URL","DEFAULT_REGION_COMPONENT_IN_URL","instantiateMap","mapConfig","layergroup","buildURL","headers","Accept","response","dealWithError","cfg","encodeParameter","encodeURIComponent","tilejson","onDataError","CartoLayer","_updateTileJSON","getTileJSON","buildMapConfig","mvtLayer","CartoBQTilerLayer","version","CartoSQLLayer","bufferSize","tileExtent","sql","buffersize","vector_extent","buffer_size","tile_extent","base_url","VOYAGER","POSITRON","DARK_MATTER","VOYAGER_NOLABELS","POSITRON_NOLABELS","DARK_MATTER_NOLABELS","classes","assign","enumerations","CARTO_BASEMAP","BASEMAP","Resource","consumer","_subscribers","_error","_loader","then","loader","subscriber","ResourceManager","protocol","res","_resources","_consumers","request","resources","setTimeout","resource","consumers","DEFAULT_MODULES","SHADER_HOOKS","createProgramManager","programManager","ProgramManager","shaderModule","shaderHook","TRACE_SET_LAYERS","INITIAL_CONTEXT","layerManager","shaderCache","pickingFBO","mousePosition","userData","LayerManager","activateViewport","layerNeedsRedraw","_needsRedraw","_needsUpdate","layerId","newLayers","stage","oldLayers","oldLayerMap","generatedLayers","newLayer","sublayers","_debug","ViewManager","onViewStateChange","onInteractiveStateChange","controllers","controller","rect","_viewports","viewMap","viewOrViewId","views","find","viewId","getView","_viewportMap","viewports","pixel","_diffViews","_onViewStateChange","onStateChange","_eventCallbacks","controllerProps","_createController","oldControllers","getViewState","_updateController","newViews","oldViews","DEFAULT_LIGHT_COLOR","idCount","AmbientLight","intensity","DEFAULT_LIGHT_DIRECTION","DirectionalLight","_shadow","Effect","Pass","LayersPass","_drawLayers","onViewportActive","clearCanvas","clearGLCanvas","renderStats","viewportOrDescriptor","drawLayerParams","_getDrawLayerParams","subViewport","_drawLayersInViewport","pass","layerFilter","effects","indexResolver","layerIndexResolver","layerIndex","shouldDrawLayer","_shouldDrawLayer","layerParam","layerRenderIndex","_getModuleParameters","getLayerParameters","onError","glViewport","dimensions","pixelRatio","cssToDeviceRatio","getGLViewport","clearOpts","depth","scissorTest","scissor","clear","renderStatus","totalCount","visibleCount","compositeCount","pickableCount","layerParameters","isPicking","renderPass","overrides","pickingActive","effect","getModuleParameters","layerIndices","resolvers","resolveLayerIndex","isDrawn","indexOverride","parentId","resolver","ShadowPass","depthRange","clearColor","drawToShadowMap","getMemoizedViewportCenterPosition","getMemoizedViewProjectionMatrices","shadowMatrices","projectionMatrices","pixelUnprojectionMatrix","farZ","screenToCommonSpace","shadowMatrix","corner","DEFAULT_SHADOW_COLOR","createShadowUniforms","shadow_uDrawShadowMap","shadow_uUseShadowMap","shadow_uColor","shadow_uLightId","shadow_uLightCount","projectCenters","viewProjectionMatrices","viewProjectionMatrixCentered","shadowUniforms","shadowEnabled","DEFAULT_AMBIENT_LIGHT_PROPS","DEFAULT_DIRECTIONAL_LIGHT_PROPS","LightingEffect","lightSource","light","shadowPasses","shadowPass","shadowLightId","dummyShadowMap","shadow","shadowMaps","shadowColor","ambientLight","directionalLights","directionalLight","pointLights","pointLight","lightMatrices","DEFAULT_LIGHTING_EFFECT","EffectManager","some","DrawLayersPass","PICKING_PARAMETERS","PickLayersPass","deviceRect","redrawReason","pickZ","depthMask","colorMask","pickingAttribute","lightSources","pickParameters","blendColor","DeckRenderer","drawPickingColors","layerPass","Framebuffer","outputBuffer","lastPostProcessEffect","renderBuffers","inputBuffer","swapBuffer","NO_PICKED_OBJECT","pickedColor","pickedLayer","pickedObjectIndex","getClosestObject","pickedColors","deviceX","deviceY","deviceRadius","minSquareDistanceToCenter","closestPixelIndex","dy","dy2","col","dx","d2","pickedLayerIndex","pickedX","pickedY","getEmptyPickingInfo","pickInfo","coordinate","picked","devicePixel","processPickInfo","lastPickedInfo","affectedLayers","lastPickedObjectIndex","lastPickedLayerId","pickedLayerId","lastPickedLayer","baseInfo","infos","getLayerPickingInfo","pickingModuleParameters","pickingSelectedColor","DeckPicker","_pickClosestObject","_pickVisibleObjects","l","colorBufferFloat","isWebGL2","_pickable","pickableLayers","radius","unproject3D","_getPickable","emptyInfo","devicePixelRange","cssToDevicePixels","_getPickingRect","deviceWidth","deviceHeight","_drawAndSample","zValues","leftTop","deviceLeft","deviceTop","rightBottom","deviceRight","deviceBottom","pickInfos","uniqueColors","colorKey","getUniqueObjects","uniqueInfos","isMaxObjects","sourceX","sourceY","sourceWidth","sourceHeight","defaultStyle","zIndex","pointerEvents","backgroundColor","display","Tooltip","canvasParent","canvas","document","el","displayInfo","mimeTypes","testText","text","firstChar","lastChar","parseTextSync","parse","existingVersion","global","VERSION","_registerLoggers","handlers","registerLoaders","imagebitmap","premultiplyAlpha","pickingRadius","glOptions","useDevicePixels","touchAction","_framebuffer","_animate","_typedArrayManagerProps","onWebGLInitialized","onResize","onBeforeRender","onAfterRender","onLoad","_onMetrics","getCursor","Deck","_onEvent","_onPointerDown","_onPointerMove","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onInteractiveStateChange","getBrowser","_createCanvas","_createAnimationLoop","fps","setPropsTime","updateAttributesTime","framesRedrawn","pickTime","pickCount","gpuTime","gpuTimePerFrame","cpuTime","cpuTimePerFrame","bufferMemory","textureMemory","renderbufferMemory","gpuMemory","resolvedProps","_getViewState","getViewports","viewManagerNeedsRedraw","viewManager","layerManagerNeedsRedraw","effectManagerNeedsRedraw","effectManager","deckRendererNeedsRedraw","deckRenderer","force","_pick","resourceIds","method","statKey","deckPicker","getLayers","style","newWidth","newHeight","autoResizeDrawingBuffer","autoResizeViewport","onCreateContext","createGLContext","onInitialize","onRender","_pickRequest","pickedInfo","handled","getTooltip","instrumentGLContext","enable","copyState","polygonOffsetFill","depthFunc","events","pointerdown","pointermove","pointerleave","renderOptions","getEffects","animationProps","_metricsCounter","interactiveState","eventOptions","getLastPickedObject","layerHandler","rootHandler","pickObject","animationLoopStats","animationLoop","metrics","memoryStats","lumaStats","inheritsFrom","ParentType","wrapInView","createElement","extractJSXLayers","reactChildren","jsxLayers","jsxViews","reactElement","ElementType","reactProps","createLayer","PropTypes","deckGlobal","MAP_STYLE","evaluateChildren","childProps","componentProps","isReactMap","cloneElement","needsDeckGLViewProps","positionChildrenUnderViews","ContextProvider","defaultViewId","viewChildren","viewElement","contextValue","CANVAS_ONLY_STYLES","mixBlendMode","extractStyles","containerStyle","canvasStyle","DeckGL","DeckClass","_containerRef","_canvasRef","_customRender","childrenChanged","_parseJSX","viewsChanged","pickMultipleObjects","pickObjects","_extractJSXLayers","deckProps","_positionChildrenUnderViews","_extractStyles","ref","DeckWithMapboxMaps","maps","mapStyle","push","Map","reuseMap","data-type","onZoom","src","alt","MAX_LATITUDE","createDeckInstance","overlay","destroyDeckInstance","eventListeners","dblclick","mousemove","mouseout","getContainer","initialViewState","_googleMap","_eventListeners","evt","mockEvent","getEventPixel","handleMouseEvent","eventType","HIDE_ALL_LAYERS","GoogleMapsOverlay","google","_onAdd","_onRemove","_draw","_deck","parentElement","projection","ne","sw","nwContainerPx","nw","nwDivPx","leftOffset","topOffset","mapWidth","mapCount","centerPx","centerContainer","canSyncWithGoogleMaps","parentStyle","loadGoogleMapApi","onComplete","reject","script","addEventListener","head","appendChild","injectScript","catch","DeckWithGoogleMaps","googleMapsLoaded","window","googleMapsToken","setState","DeckOverlayWrapper","isOverlayConfigured","DeckOverlay","containerRef","createRef","lat","mapTypeId","current","setMap","setProps","prevProps","prevState","snapshot","StaticMap","JSONEditor","useState","stringify","setText","useEffect","theme","onJsonUpdated","editorProps","$blockScrolling","wrapEnabled","ConfigurationSidebar","basemap","setBasemap","showBasemapOptions","setBasemapOptions","showEditor","setEditorOptions","basemapStyle","setBasemapStyle","changeMap","onBasemapChange","currentTarget","onClose","checked","htmlFor","onStyleChange","ShareSidebar","showEmbed","setShowEmbed","showUrl","setShowUrl","urlShareRef","useRef","embedCodeRef","shareUrl","location","origin","pathname","btoa","copyTextarea","reference","select","execCommand","focus","readOnly","iframeCode","Sidebar","configurationSidebarOpen","setConfigurationSidebarOpen","shareSidebarOpen","setShareSidebarOpen","closeConfigurationSidebar","onMenuCloses","closeShareSidebar","jsonMap","DEFAULT_DATA","jsonConverter","JSON_CONVERTER_CONFIGURATION","Home","setJSON","setJSONMap","jsonProps","setJSONPros","setViewState","embedMode","setEmbedMode","useLocation","useParams","query","URLSearchParams","search","ready","atob","decodeURIComponent","colorByValue","require","parseConfig","entries","startsWith","addUpdateTriggersForAccesors","newBasemap","currentJson","newStyle","newJson","newObject","jsonText","tempJson","zoomType","dataset","currentZoom","class","href","rel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2b49ddad.chunk.js","sourcesContent":["var map = {\n\t\"./template.bigquery.json\": 203,\n\t\"./template.sql.json\": 204\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 202;","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Access properties of nested containers using dot-path notation\n * Returns `undefined` if any container is not valid, instead of throwing\n * @param {Object} container - container that supports get\n * @param {String|*} compositeKey - key to access, can be '.'-separated string\n * @return {*} - value in the final key of the nested container, or `undefined`\n */\nexport function get(container, compositeKey) {\n  // Split the key into subkeys\n  const keyList = getKeys(compositeKey);\n  // Recursively get the value of each key;\n  let value = container;\n  for (const key of keyList) {\n    // If any intermediate subfield is not an object, return undefined\n    value = isObject(value) ? value[key] : undefined;\n  }\n  return value;\n}\n\n/**\n * Checks if argument is an \"indexable\" object (not a primitive value, nor null)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a JavaScript object\n */\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n\n// Cache key to key arrays for speed\nconst keyMap = {};\n\n// Takes a string of '.' separated keys and returns an array of keys\n// - 'feature.geometry.type' => ['feature', 'geometry', 'type']\n// - 'feature' => ['feature']\nfunction getKeys(compositeKey) {\n  if (typeof compositeKey === 'string') {\n    // else assume string and split around dots\n    let keyList = keyMap[compositeKey];\n    if (!keyList) {\n      keyList = compositeKey.split('.');\n      keyMap[compositeKey] = keyList;\n    }\n    return keyList;\n  }\n  // Wrap in array if needed\n  return Array.isArray(compositeKey) ? compositeKey : [compositeKey];\n}\n","import {get} from '../utils/get';\n\n// expression-eval: Small jsep based expression parser that supports array and object indexing\nimport expressionEval from 'expression-eval';\n\nconst cachedExpressionMap = {\n  '-': object => object\n};\n\n// Calculates an accessor function from a JSON string\n// '-' : x => x\n// 'a.b.c': x => x.a.b.c\nexport default function parseExpressionString(propValue, configuration) {\n  // NOTE: Can be null which represents invalid function. Return null so that prop can be omitted\n  if (propValue in cachedExpressionMap) {\n    return cachedExpressionMap[propValue];\n  }\n\n  let func;\n  // Compile with expression-eval\n  const ast = expressionEval.parse(propValue);\n  if (!ast.right && !ast.left && ast.type === 'Identifier') {\n    func = row => {\n      return get(row, propValue);\n    };\n  } else {\n    // NOTE: To avoid security risks, the arguments passed to the\n    // compiled expression must only give access to pure data (no globals etc)\n    // We disable function call syntax\n    traverse(ast, node => {\n      if (node.type === 'CallExpression') {\n        throw new Error('Function calls not allowed in JSON expressions');\n      }\n    });\n    // TODO Something like `expressionEval.eval(ast, {row});` would be useful for unpacking arrays\n    func = row => {\n      return expressionEval.eval(ast, row);\n    };\n  }\n\n  // Cache the compiled function\n  cachedExpressionMap[propValue] = func;\n  return func;\n}\n\n// Helper function to search all nodes in AST returned by expressionEval\n// eslint-disable-next-line complexity\nfunction traverse(node, visitor) {\n  if (Array.isArray(node)) {\n    node.forEach(element => traverse(element, visitor));\n  } else if (node && typeof node === 'object') {\n    if (node.type) {\n      visitor(node);\n    }\n    for (const key in node) {\n      traverse(node[key], visitor);\n    }\n  }\n}\n","// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\nexport default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || 'deck.gl: assertion failed.');\n  }\n}\n","const FUNCTION_IDENTIFIER = '@@=';\nconst CONSTANT_IDENTIFIER = '@@#';\nconst TYPE_KEY = '@@type';\n\nexport {FUNCTION_IDENTIFIER, CONSTANT_IDENTIFIER, TYPE_KEY};\n","// TODO - default parsing code should not be part of the configuration.\nimport parseExpressionString from './helpers/parse-expression-string';\nimport assert from './utils/assert';\n\nimport {TYPE_KEY} from './syntactic-sugar';\n\nconst isObject = value => value && typeof value === 'object';\n\nexport default class JSONConfiguration {\n  constructor(...configurations) {\n    // Initialize config with default values\n    this.typeKey = TYPE_KEY;\n    this.log = console; // eslint-disable-line\n    this.classes = {};\n    this.reactComponents = {};\n    this.enumerations = {};\n    this.constants = {};\n    // TODO - this needs to be simpler, function conversion should be built in\n    this.convertFunction = convertFunction;\n    this.preProcessClassProps = (Class, props) => props;\n    this.postProcessConvertedJson = json => json;\n\n    for (const configuration of configurations) {\n      this.merge(configuration);\n    }\n  }\n\n  merge(configuration) {\n    for (const key in configuration) {\n      switch (key) {\n        // DEPRECATED = For backwards compatibility, add views and layers to classes;\n        case 'layers':\n        case 'views':\n          Object.assign(this.classes, configuration[key]);\n          break;\n        default:\n          // Store configuration as root fields (this.classes, ...)\n          if (key in this) {\n            const value = configuration[key];\n            this[key] = isObject(this[key]) ? Object.assign(this[key], value) : value;\n          }\n      }\n    }\n  }\n\n  validate(configuration) {\n    assert(!this.typeKey || typeof this.typeKey === 'string');\n    assert(isObject(this.classes));\n    return true;\n  }\n}\n\nfunction convertFunction(value, configuration) {\n  return parseExpressionString(value, configuration);\n}\n","import parseExpressionString from './parse-expression-string';\n\nimport {FUNCTION_IDENTIFIER} from '../syntactic-sugar';\n\nfunction hasFunctionIdentifier(value) {\n  return typeof value === 'string' && value.startsWith(FUNCTION_IDENTIFIER);\n}\n\nfunction trimFunctionIdentifier(value) {\n  return value.replace(FUNCTION_IDENTIFIER, '');\n}\n\n// Try to determine if any props are function valued\n// and if so convert their string values to functions\nexport default function convertFunctions(props, configuration) {\n  // Use deck.gl prop types if available.\n  const replacedProps = {};\n  for (const propName in props) {\n    let propValue = props[propName];\n\n    // Parse string valued expressions\n    const isFunction = hasFunctionIdentifier(propValue);\n\n    if (isFunction) {\n      // Parse string as \"expression\", return equivalent JavaScript function\n      propValue = trimFunctionIdentifier(propValue);\n      propValue = parseExpressionString(propValue, configuration);\n    }\n    replacedProps[propName] = propValue;\n  }\n\n  return replacedProps;\n}\n","import convertFunctions from './convert-functions';\n\n// This attempts to instantiate a class, either as a class or as a React component\nexport function instantiateClass(type, props, configuration) {\n  // Find the class\n  const Class = configuration.classes[type];\n  const Component = configuration.reactComponents[type];\n\n  // Check that the class is in the configuration.\n  if (!Class && !Component) {\n    const {log} = configuration; // eslint-disable-line\n    const stringProps = JSON.stringify(props, null, 0).slice(0, 40);\n    if (log) {\n      log.warn(`JSON converter: No registered class of type ${type}(${stringProps}...)  `);\n    }\n    return null;\n  }\n\n  if (Class) {\n    return instantiateJavaScriptClass(Class, props, configuration);\n  }\n\n  return instantiateReactComponent(Component, props, configuration);\n}\n\nfunction instantiateJavaScriptClass(Class, props, configuration) {\n  if (configuration.preProcessClassProps) {\n    props = configuration.preProcessClassProps(Class, props, configuration);\n  }\n  props = convertFunctions(props, configuration);\n  return new Class(props);\n}\n\nfunction instantiateReactComponent(Component, props, configuration) {\n  const {React} = configuration;\n  const {children = []} = props;\n  delete props.children;\n  if (configuration.preProcessClassProps) {\n    props = configuration.preProcessClassProps(Component, props, configuration);\n  }\n\n  props = convertFunctions(props, configuration);\n\n  return React.createElement(Component, props, children);\n}\n","// Converts JSON to props (\"hydrating\" classes, resolving enums and functions etc).\n// Lightly processes `json` props, transform string values, and extract `views` and `layers`\n// See: https://github.com/visgl/deck.gl/blob/master/dev-docs/RFCs/v6.1/json-layers-rfc.md\n//\n// NOTES:\n// * This is intended to provide minimal necessary processing required to support\n//   existing deck.gl props via JSON. This is not an implementation of alternate JSON schemas.\n// * Optionally, error checking could be applied, but ideally should leverage\n//   non-JSON specific mechanisms like prop types.\n\nimport assert from './utils/assert';\nimport JSONConfiguration from './json-configuration';\nimport {instantiateClass} from './helpers/instantiate-class';\n\nimport {FUNCTION_IDENTIFIER, CONSTANT_IDENTIFIER} from './syntactic-sugar';\nimport parseJSON from './helpers/parse-json';\n\nconst isObject = value => value && typeof value === 'object';\n\nexport default class JSONConverter {\n  constructor(props) {\n    this.log = console; // eslint-disable-line\n    this.configuration = {};\n    this.onJSONChange = () => {};\n    this.json = null;\n    this.convertedJson = null;\n    this.setProps(props);\n  }\n\n  finalize() {}\n\n  setProps(props) {\n    // HANDLE CONFIGURATION PROPS\n    if ('configuration' in props) {\n      // Accept object or `JSONConfiguration`\n      this.configuration =\n        props.configuration instanceof JSONConfiguration\n          ? props.configuration\n          : new JSONConfiguration(props.configuration);\n    }\n\n    if ('onJSONChange' in props) {\n      this.onJSONChange = props.onJSONChange;\n    }\n  }\n\n  mergeConfiguration(config) {\n    this.configuration.merge(config);\n  }\n\n  convert(json) {\n    // Use shallow equality to ensure we only convert same json once\n    if (!json || json === this.json) {\n      return this.convertedJson;\n    }\n    // Save json for shallow diffing\n    this.json = json;\n\n    // Accept JSON strings by parsing them\n    const parsedJSON = parseJSON(json);\n\n    // Convert the JSON\n    let convertedJson = convertJSON(parsedJSON, this.configuration);\n\n    convertedJson = this.configuration.postProcessConvertedJson(convertedJson);\n\n    this.convertedJson = convertedJson;\n    return convertedJson;\n  }\n\n  // DEPRECATED: Backwards compatibility\n  convertJson(json) {\n    return this.convert(json);\n  }\n}\n\nfunction convertJSON(json, configuration) {\n  // Fixup configuration\n  configuration = new JSONConfiguration(configuration);\n  return convertJSONRecursively(json, '', configuration);\n}\n\n// Converts JSON to props (\"hydrating\" classes, resolving enums and functions etc).\nfunction convertJSONRecursively(json, key, configuration) {\n  if (Array.isArray(json)) {\n    return json.map((element, i) => convertJSONRecursively(element, String(i), configuration));\n  }\n\n  // If object.type is in configuration, instantiate\n  if (isClassInstance(json, configuration)) {\n    return convertClassInstance(json, configuration);\n  }\n\n  if (isObject(json)) {\n    return convertPlainObject(json, configuration);\n  }\n\n  // Single value\n  if (typeof json === 'string') {\n    return convertString(json, key, configuration);\n  }\n\n  // Return unchanged (number, boolean, ...)\n  return json;\n}\n\n// Returns true if an object has a `type` field\nfunction isClassInstance(json, configuration) {\n  const {typeKey} = configuration;\n  const isClass = isObject(json) && Boolean(json[typeKey]);\n  return isClass;\n}\n\nfunction convertClassInstance(json, configuration) {\n  // Extract the class type field\n  const {typeKey} = configuration;\n  const type = json[typeKey];\n\n  // Prepare a props object and ensure all values have been converted\n  let props = {...json};\n  delete props[typeKey];\n\n  props = convertPlainObject(props, configuration);\n\n  return instantiateClass(type, props, configuration);\n}\n\n// Plain JS object, convert each key and return.\nfunction convertPlainObject(json, configuration) {\n  assert(isObject(json));\n\n  const result = {};\n  for (const key in json) {\n    const value = json[key];\n    result[key] = convertJSONRecursively(value, key, configuration);\n  }\n  return result;\n}\n\n// Convert one string value in an object\n// TODO - We could also support string syntax for hydrating other types, like regexps...\n// But no current use case\nfunction convertString(string, key, configuration) {\n  // Here the JSON value is supposed to be treated as a function\n  if (string.startsWith(FUNCTION_IDENTIFIER) && configuration.convertFunction) {\n    string = string.replace(FUNCTION_IDENTIFIER, '');\n    return configuration.convertFunction(string, configuration);\n  }\n  if (string.startsWith(CONSTANT_IDENTIFIER)) {\n    string = string.replace(CONSTANT_IDENTIFIER, '');\n    if (configuration.constants[string]) {\n      return configuration.constants[string];\n    }\n    // enum\n    const [enumVarName, enumValName] = string.split('.');\n    return configuration.enumerations[enumVarName][enumValName];\n  }\n  return string;\n}\n","// Accept JSON strings by parsing them\n// TODO - use a parser that provides meaninful error messages\nexport default function parseJSON(json) {\n  return typeof json === 'string' ? JSON.parse(json) : json;\n}\n","import {Log} from 'probe.gl';\n\nexport default new Log({id: 'deck'});\n","export class TypedArrayManager {\n  constructor(props) {\n    this._pool = [];\n    this.props = {overAlloc: 2, poolSize: 100};\n    this.setProps(props);\n  }\n\n  setProps(props) {\n    Object.assign(this.props, props);\n  }\n\n  allocate(typedArray, count, {size = 1, type, padding = 0, copy = false, initialize = false}) {\n    const Type = type || (typedArray && typedArray.constructor) || Float32Array;\n\n    const newSize = count * size + padding;\n    if (ArrayBuffer.isView(typedArray)) {\n      if (newSize <= typedArray.length) {\n        return typedArray;\n      }\n      if (newSize * typedArray.BYTES_PER_ELEMENT <= typedArray.buffer.byteLength) {\n        return new Type(typedArray.buffer, 0, newSize);\n      }\n    }\n\n    const newArray = this._allocate(Type, newSize, initialize);\n\n    if (typedArray && copy) {\n      newArray.set(typedArray);\n    } else if (!initialize) {\n      // Hack - always initialize the first 4 elements. NaNs crashe the Attribute validation\n      newArray.fill(0, 0, 4);\n    }\n\n    this._release(typedArray);\n    return newArray;\n  }\n\n  release(typedArray) {\n    this._release(typedArray);\n  }\n\n  _allocate(Type, size, initialize) {\n    // Allocate at least one element to ensure a valid buffer\n    size = Math.max(Math.ceil(size * this.props.overAlloc), 1);\n\n    // Check if available in pool\n    const pool = this._pool;\n    const byteLength = Type.BYTES_PER_ELEMENT * size;\n    const i = pool.findIndex(b => b.byteLength >= byteLength);\n    if (i >= 0) {\n      // Create a new array using an existing buffer\n      const array = new Type(pool.splice(i, 1)[0], 0, size);\n      if (initialize) {\n        // Viewing a buffer with a different type may create NaNs\n        array.fill(0);\n      }\n      return array;\n    }\n    return new Type(size);\n  }\n\n  _release(typedArray) {\n    if (!ArrayBuffer.isView(typedArray)) {\n      return;\n    }\n    const pool = this._pool;\n    const {buffer} = typedArray;\n    // Save the buffer of the released array into the pool\n    // Sort buffers by size\n    // TODO - implement binary search?\n    const {byteLength} = buffer;\n    const i = pool.findIndex(b => b.byteLength >= byteLength);\n    if (i < 0) {\n      pool.push(buffer);\n    } else if (i > 0 || pool.length < this.props.poolSize) {\n      pool.splice(i, 0, buffer);\n    }\n    if (pool.length > this.props.poolSize) {\n      // Drop the smallest one\n      pool.shift();\n    }\n  }\n}\n\nexport default new TypedArrayManager();\n","// Extensions to math.gl library. Intended to be folded back.\nimport typedArrayManager from './typed-array-manager';\nimport {Vector3} from 'math.gl';\n\n// Helper, avoids low-precision 32 bit matrices from gl-matrix mat4.create()\nexport function createMat4() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\nexport function mod(value, divisor) {\n  const modulus = value % divisor;\n  return modulus < 0 ? divisor + modulus : modulus;\n}\n\n// Extract camera vectors (move to math library?)\nexport function extractCameraVectors({viewMatrix, viewMatrixInverse}) {\n  // Read the translation from the inverse view matrix\n  return {\n    eye: [viewMatrixInverse[12], viewMatrixInverse[13], viewMatrixInverse[14]],\n    direction: [-viewMatrix[2], -viewMatrix[6], -viewMatrix[10]],\n    up: [viewMatrix[1], viewMatrix[5], viewMatrix[9]],\n    right: [viewMatrix[0], viewMatrix[4], viewMatrix[8]]\n  };\n}\n\nconst cameraPosition = new Vector3();\nconst cameraDirection = new Vector3();\nconst cameraUp = new Vector3();\nconst cameraRight = new Vector3();\nconst nearCenter = new Vector3();\nconst farCenter = new Vector3();\nconst a = new Vector3();\n\n/* eslint-disable max-statements */\n\n// Extract frustum planes in common space.\n// Note that common space is left-handed\n// (with y pointing down)\nexport function getFrustumPlanes({aspect, near, far, fovyRadians, position, direction, up, right}) {\n  cameraDirection.copy(direction);\n\n  // Account for any scaling of the z axis (e.g. in\n  // mercator view matrix)\n  const nearFarScale = 1 / cameraDirection.len();\n  cameraDirection.normalize();\n\n  cameraPosition.copy(position);\n\n  cameraUp.copy(up);\n  // Account for scaling of the xy axis\n  const widthScale = 1 / cameraUp.len();\n  cameraUp.normalize();\n  cameraRight.copy(right).normalize();\n\n  const nearHeight = 2 * Math.tan(fovyRadians / 2) * near * widthScale;\n  const nearWidth = nearHeight * aspect;\n\n  nearCenter\n    .copy(cameraDirection)\n    .scale(near * nearFarScale)\n    .add(cameraPosition);\n  farCenter\n    .copy(cameraDirection)\n    .scale(far * nearFarScale)\n    .add(cameraPosition);\n\n  let normal = cameraDirection.clone().negate();\n  let distance = normal.dot(nearCenter);\n\n  const planes = {\n    near: {\n      distance,\n      normal\n    },\n    far: {\n      distance: cameraDirection.dot(farCenter),\n      normal: cameraDirection.clone()\n    }\n  };\n\n  a.copy(cameraRight)\n    .scale(nearWidth * 0.5)\n    .add(nearCenter)\n    .subtract(cameraPosition)\n    .normalize();\n  normal = new Vector3(a).cross(cameraUp);\n  distance = cameraPosition.dot(normal);\n  planes.right = {normal, distance};\n\n  a.copy(cameraRight)\n    .scale(-nearWidth * 0.5)\n    .add(nearCenter)\n    .subtract(cameraPosition)\n    .normalize();\n  normal = new Vector3(cameraUp).cross(a);\n  distance = cameraPosition.dot(normal);\n  planes.left = {normal, distance};\n\n  a.copy(cameraUp)\n    .scale(nearHeight * 0.5)\n    .add(nearCenter)\n    .subtract(cameraPosition)\n    .normalize();\n  normal = new Vector3(cameraRight).cross(a);\n  distance = cameraPosition.dot(normal);\n  planes.top = {normal, distance};\n\n  a.copy(cameraUp)\n    .scale(-nearHeight * 0.5)\n    .add(nearCenter)\n    .subtract(cameraPosition)\n    .normalize();\n  normal = new Vector3(a).cross(cameraRight);\n  distance = cameraPosition.dot(normal);\n  planes.bottom = {normal, distance};\n\n  return planes;\n}\n\n/**\n * Calculate the low part of a WebGL 64 bit float\n * @param x {number} - the input float number\n * @returns {number} - the lower 32 bit of the number\n */\nexport function fp64LowPart(x) {\n  return x - Math.fround(x);\n}\n\nlet scratchArray;\n\n/**\n * Split a Float64Array into a double-length Float32Array\n * @param typedArray {Float64Array}\n * @param size {Number} - per attribute size\n * @param [startIndex] {Number} - start index in the source array\n * @param [endIndex] {Number} - end index in the source array\n * @returns {Float32Array} - high part, low part for each attribute:\n    [1xHi, 1yHi, 1zHi, 1xLow, 1yLow, 1zLow, 2xHi, ...]\n */\nexport function toDoublePrecisionArray(typedArray, {size = 1, startIndex = 0, endIndex}) {\n  if (!Number.isFinite(endIndex)) {\n    endIndex = typedArray.length;\n  }\n  const count = (endIndex - startIndex) / size;\n  scratchArray = typedArrayManager.allocate(scratchArray, count, {\n    type: Float32Array,\n    size: size * 2\n  });\n\n  let sourceIndex = startIndex;\n  let targetIndex = 0;\n  while (sourceIndex < endIndex) {\n    for (let j = 0; j < size; j++) {\n      const value = typedArray[sourceIndex++];\n      scratchArray[targetIndex + j] = value;\n      scratchArray[targetIndex + j + size] = fp64LowPart(value);\n    }\n    targetIndex += size * 2;\n  }\n\n  return scratchArray.subarray(0, count * size * 2);\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Note: The numeric values here are matched by shader code in the\n// \"project\" and \"project64\" shader modules. Both places need to be\n// updated.\nimport log from '../utils/log';\n\n// Describes the format of positions\nexport const COORDINATE_SYSTEM = {\n  // `LNGLAT` if rendering into a geospatial viewport, `CARTESIAN` otherwise\n  DEFAULT: -1,\n  // Positions are interpreted as [lng, lat, elevation]\n  // lng lat are degrees, elevation is meters. distances as meters.\n  LNGLAT: 1,\n\n  // Positions are interpreted as meter offsets, distances as meters\n  METER_OFFSETS: 2,\n\n  // Positions are interpreted as lng lat offsets: [deltaLng, deltaLat, elevation]\n  // deltaLng, deltaLat are delta degrees, elevation is meters.\n  // distances as meters.\n  LNGLAT_OFFSETS: 3,\n\n  // Non-geospatial\n  CARTESIAN: 0\n};\n\n// Deprecated\n/* eslint-disable accessor-pairs */\nObject.defineProperty(COORDINATE_SYSTEM, 'IDENTITY', {\n  get: () => log.deprecated('COORDINATE_SYSTEM.IDENTITY', 'COORDINATE_SYSTEM.CARTESIAN')() || 0\n});\n/* eslint-enable accessor-pairs */\n\n// Describes the common space\nexport const PROJECTION_MODE = {\n  WEB_MERCATOR: 1,\n  GLOBE: 2,\n\n  // This is automatically assigned by the project module\n  WEB_MERCATOR_AUTO_OFFSET: 4,\n\n  IDENTITY: 0\n};\n\nexport const EVENTS = {\n  click: {handler: 'onClick'},\n  panstart: {handler: 'onDragStart'},\n  panmove: {handler: 'onDrag'},\n  panend: {handler: 'onDragEnd'}\n};\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport log from '../utils/log';\nimport {createMat4, extractCameraVectors, getFrustumPlanes} from '../utils/math-utils';\n\nimport {Matrix4, Vector3, equals} from 'math.gl';\nimport * as mat4 from 'gl-matrix/mat4';\n\nimport {\n  getDistanceScales,\n  getMeterZoom,\n  lngLatToWorld,\n  worldToLngLat,\n  worldToPixels,\n  pixelsToWorld\n} from '@math.gl/web-mercator';\n\nimport {PROJECTION_MODE} from '../lib/constants';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nconst IDENTITY = createMat4();\n\nconst ZERO_VECTOR = [0, 0, 0];\n\nconst DEFAULT_ZOOM = 0;\n\nconst DEFAULT_DISTANCE_SCALES = {\n  unitsPerMeter: [1, 1, 1],\n  metersPerUnit: [1, 1, 1]\n};\n\nexport default class Viewport {\n  /**\n   * @classdesc\n   * Manages coordinate system transformations for deck.gl.\n   *\n   * Note: The Viewport is immutable in the sense that it only has accessors.\n   * A new viewport instance should be created if any parameters have changed.\n   */\n  constructor(opts = {}) {\n    const {\n      id = null,\n      // Window width/height in pixels (for pixel projection)\n      x = 0,\n      y = 0,\n      width = 1,\n      height = 1\n    } = opts;\n\n    this.id = id || this.constructor.displayName || 'viewport';\n\n    this.x = x;\n    this.y = y;\n    // Silently allow apps to send in w,h = 0,0\n    this.width = width || 1;\n    this.height = height || 1;\n    this._frustumPlanes = {};\n\n    this._initViewMatrix(opts);\n    this._initProjectionMatrix(opts);\n    this._initPixelMatrices();\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n    this.project = this.project.bind(this);\n    this.unproject = this.unproject.bind(this);\n    this.projectPosition = this.projectPosition.bind(this);\n    this.unprojectPosition = this.unprojectPosition.bind(this);\n    this.projectFlat = this.projectFlat.bind(this);\n    this.unprojectFlat = this.unprojectFlat.bind(this);\n  }\n\n  get metersPerPixel() {\n    return this.distanceScales.metersPerUnit[2] / this.scale;\n  }\n\n  get projectionMode() {\n    if (this.isGeospatial) {\n      return this.zoom < 12\n        ? PROJECTION_MODE.WEB_MERCATOR\n        : PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET;\n    }\n    return PROJECTION_MODE.IDENTITY;\n  }\n\n  // Two viewports are equal if width and height are identical, and if\n  // their view and projection matrices are (approximately) equal.\n  equals(viewport) {\n    if (!(viewport instanceof Viewport)) {\n      return false;\n    }\n    if (this === viewport) {\n      return true;\n    }\n\n    return (\n      viewport.width === this.width &&\n      viewport.height === this.height &&\n      viewport.scale === this.scale &&\n      equals(viewport.projectionMatrix, this.projectionMatrix) &&\n      equals(viewport.viewMatrix, this.viewMatrix)\n    );\n    // TODO - check distance scales?\n  }\n\n  /**\n   * Projects xyz (possibly latitude and longitude) to pixel coordinates in window\n   * using viewport projection parameters\n   * - [longitude, latitude] to [x, y]\n   * - [longitude, latitude, Z] => [x, y, z]\n   * Note: By default, returns top-left coordinates for canvas/SVG type render\n   *\n   * @param {Array} lngLatZ - [lng, lat] or [lng, lat, Z]\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether projected coords are top left\n   * @return {Array} - [x, y] or [x, y, z] in top left coords\n   */\n  project(xyz, {topLeft = true} = {}) {\n    const worldPosition = this.projectPosition(xyz);\n    const coord = worldToPixels(worldPosition, this.pixelProjectionMatrix);\n\n    const [x, y] = coord;\n    const y2 = topLeft ? y : this.height - y;\n    return xyz.length === 2 ? [x, y2] : [x, y2, coord[2]];\n  }\n\n  /**\n   * Unproject pixel coordinates on screen onto world coordinates,\n   * (possibly [lon, lat]) on map.\n   * - [x, y] => [lng, lat]\n   * - [x, y, z] => [lng, lat, Z]\n   * @param {Array} xyz -\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether origin is top left\n   * @return {Array|null} - [lng, lat, Z] or [X, Y, Z]\n   */\n  unproject(xyz, {topLeft = true, targetZ} = {}) {\n    const [x, y, z] = xyz;\n\n    const y2 = topLeft ? y : this.height - y;\n    const targetZWorld = targetZ && targetZ * this.distanceScales.unitsPerMeter[2];\n    const coord = pixelsToWorld([x, y2, z], this.pixelUnprojectionMatrix, targetZWorld);\n    const [X, Y, Z] = this.unprojectPosition(coord);\n\n    if (Number.isFinite(z)) {\n      return [X, Y, Z];\n    }\n    return Number.isFinite(targetZ) ? [X, Y, targetZ] : [X, Y];\n  }\n\n  // NON_LINEAR PROJECTION HOOKS\n  // Used for web meractor projection\n\n  projectPosition(xyz) {\n    const [X, Y] = this.projectFlat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.unitsPerMeter[2];\n    return [X, Y, Z];\n  }\n\n  unprojectPosition(xyz) {\n    const [X, Y] = this.unprojectFlat(xyz);\n    const Z = (xyz[2] || 0) * this.distanceScales.metersPerUnit[2];\n    return [X, Y, Z];\n  }\n\n  /**\n   * Project [lng,lat] on sphere onto [x,y] on 512*512 Mercator Zoom 0 tile.\n   * Performs the nonlinear part of the web mercator projection.\n   * Remaining projection is done with 4x4 matrices which also handles\n   * perspective.\n   * @param {Array} lngLat - [lng, lat] coordinates\n   *   Specifies a point on the sphere to project onto the map.\n   * @return {Array} [x,y] coordinates.\n   */\n  projectFlat(xyz) {\n    if (this.isGeospatial) {\n      return lngLatToWorld(xyz);\n    }\n    return xyz;\n  }\n\n  /**\n   * Unproject world point [x,y] on map onto {lat, lon} on sphere\n   * @param {object|Vector} xy - object with {x,y} members\n   *  representing point on projected map plane\n   * @return {GeoCoordinates} - object with {lat,lon} of point on sphere.\n   *   Has toArray method if you need a GeoJSON Array.\n   *   Per cartographic tradition, lat and lon are specified as degrees.\n   */\n  unprojectFlat(xyz) {\n    if (this.isGeospatial) {\n      return worldToLngLat(xyz);\n    }\n    return xyz;\n  }\n\n  getBounds(options = {}) {\n    const unprojectOption = {targetZ: options.z || 0};\n\n    const topLeft = this.unproject([0, 0], unprojectOption);\n    const topRight = this.unproject([this.width, 0], unprojectOption);\n    const bottomLeft = this.unproject([0, this.height], unprojectOption);\n    const bottomRight = this.unproject([this.width, this.height], unprojectOption);\n\n    return [\n      Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]),\n      Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]),\n      Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1])\n    ];\n  }\n\n  getDistanceScales(coordinateOrigin = null) {\n    if (coordinateOrigin) {\n      return getDistanceScales({\n        longitude: coordinateOrigin[0],\n        latitude: coordinateOrigin[1],\n        highPrecision: true\n      });\n    }\n    return this.distanceScales;\n  }\n\n  containsPixel({x, y, width = 1, height = 1}) {\n    return (\n      x < this.x + this.width &&\n      this.x < x + width &&\n      y < this.y + this.height &&\n      this.y < y + height\n    );\n  }\n\n  // Extract frustum planes in common space\n  getFrustumPlanes() {\n    if (this._frustumPlanes.near) {\n      return this._frustumPlanes;\n    }\n\n    const {near, far, fovyRadians, aspect} = this.projectionProps;\n\n    Object.assign(\n      this._frustumPlanes,\n      getFrustumPlanes({\n        aspect,\n        near,\n        far,\n        fovyRadians,\n        position: this.cameraPosition,\n        direction: this.cameraDirection,\n        up: this.cameraUp,\n        right: this.cameraRight\n      })\n    );\n\n    return this._frustumPlanes;\n  }\n\n  // EXPERIMENTAL METHODS\n\n  getCameraPosition() {\n    return this.cameraPosition;\n  }\n\n  getCameraDirection() {\n    return this.cameraDirection;\n  }\n\n  getCameraUp() {\n    return this.cameraUp;\n  }\n\n  // INTERNAL METHODS\n\n  _createProjectionMatrix({orthographic, fovyRadians, aspect, focalDistance, near, far}) {\n    return orthographic\n      ? new Matrix4().orthographic({fovy: fovyRadians, aspect, focalDistance, near, far})\n      : new Matrix4().perspective({fovy: fovyRadians, aspect, near, far});\n  }\n\n  /* eslint-disable complexity, max-statements */\n  _initViewMatrix(opts) {\n    const {\n      // view matrix\n      viewMatrix = IDENTITY,\n\n      longitude = null, // Anchor: lng lat zoom makes viewport work w/ geospatial coordinate systems\n      latitude = null,\n      zoom = null,\n\n      position = null, // Anchor position offset (in meters for geospatial viewports)\n      modelMatrix = null, // A model matrix to be applied to position, to match the layer props API\n      focalDistance = 1, // Only needed for orthographic views\n\n      distanceScales = null\n    } = opts;\n\n    // Check if we have a geospatial anchor\n    this.isGeospatial = Number.isFinite(latitude) && Number.isFinite(longitude);\n\n    this.zoom = zoom;\n    if (!Number.isFinite(this.zoom)) {\n      this.zoom = this.isGeospatial\n        ? getMeterZoom({latitude}) + Math.log2(focalDistance)\n        : DEFAULT_ZOOM;\n    }\n    const scale = Math.pow(2, this.zoom);\n    this.scale = scale;\n\n    // Calculate distance scales if lng/lat/zoom are provided\n    this.distanceScales = this.isGeospatial\n      ? getDistanceScales({latitude, longitude})\n      : distanceScales || DEFAULT_DISTANCE_SCALES;\n\n    this.focalDistance = focalDistance;\n\n    this.distanceScales.metersPerUnit = new Vector3(this.distanceScales.metersPerUnit);\n    this.distanceScales.unitsPerMeter = new Vector3(this.distanceScales.unitsPerMeter);\n\n    this.position = ZERO_VECTOR;\n    this.meterOffset = ZERO_VECTOR;\n    if (position) {\n      // Apply model matrix if supplied\n      this.position = position;\n      this.modelMatrix = modelMatrix;\n      this.meterOffset = modelMatrix ? modelMatrix.transformVector(position) : position;\n    }\n\n    if (this.isGeospatial) {\n      // Determine camera center\n      this.longitude = longitude;\n      this.latitude = latitude;\n      this.center = this._getCenterInWorld({longitude, latitude});\n    } else {\n      this.center = position ? this.projectPosition(position) : [0, 0, 0];\n    }\n    this.viewMatrixUncentered = viewMatrix;\n    // Make a centered version of the matrix for projection modes without an offset\n    this.viewMatrix = new Matrix4()\n      // Apply the uncentered view matrix\n      .multiplyRight(this.viewMatrixUncentered)\n      // And center it\n      .translate(new Vector3(this.center || ZERO_VECTOR).negate());\n  }\n  /* eslint-enable complexity, max-statements */\n\n  _getCenterInWorld({longitude, latitude}) {\n    const {meterOffset, distanceScales} = this;\n\n    // Make a centered version of the matrix for projection modes without an offset\n    const center = new Vector3(this.projectPosition([longitude, latitude, 0]));\n\n    if (meterOffset) {\n      const commonPosition = new Vector3(meterOffset)\n        // Convert to pixels in current zoom\n        .scale(distanceScales.unitsPerMeter);\n      center.add(commonPosition);\n    }\n\n    return center;\n  }\n\n  _initProjectionMatrix(opts) {\n    const {\n      // Projection matrix\n      projectionMatrix = null,\n\n      // Projection matrix parameters, used if projectionMatrix not supplied\n      orthographic = false,\n      fovyRadians,\n      fovy = 75,\n      near = 0.1, // Distance of near clipping plane\n      far = 1000, // Distance of far clipping plane\n      focalDistance = 1\n    } = opts;\n\n    this.projectionProps = {\n      orthographic,\n      fovyRadians: fovyRadians || fovy * DEGREES_TO_RADIANS,\n      aspect: this.width / this.height,\n      focalDistance,\n      near,\n      far\n    };\n\n    this.projectionMatrix = projectionMatrix || this._createProjectionMatrix(this.projectionProps);\n  }\n\n  _initPixelMatrices() {\n    // Note: As usual, matrix operations should be applied in \"reverse\" order\n    // since vectors will be multiplied in from the right during transformation\n    const vpm = createMat4();\n    mat4.multiply(vpm, vpm, this.projectionMatrix);\n    mat4.multiply(vpm, vpm, this.viewMatrix);\n    this.viewProjectionMatrix = vpm;\n\n    // console.log('VPM', this.viewMatrix, this.projectionMatrix, this.viewProjectionMatrix);\n\n    // Calculate inverse view matrix\n    this.viewMatrixInverse = mat4.invert([], this.viewMatrix) || this.viewMatrix;\n\n    // Decompose camera directions\n    const {eye, direction, up, right} = extractCameraVectors({\n      viewMatrix: this.viewMatrix,\n      viewMatrixInverse: this.viewMatrixInverse\n    });\n    this.cameraPosition = eye;\n    this.cameraDirection = direction;\n    this.cameraUp = up;\n    this.cameraRight = right;\n\n    // console.log(this.cameraPosition, this.cameraDirection, this.cameraUp);\n\n    /*\n     * Builds matrices that converts preprojected lngLats to screen pixels\n     * and vice versa.\n     * Note: Currently returns bottom-left coordinates!\n     * Note: Starts with the GL projection matrix and adds steps to the\n     *       scale and translate that matrix onto the window.\n     * Note: WebGL controls clip space to screen projection with gl.viewport\n     *       and does not need this step.\n     */\n\n    // matrix for conversion from world location to screen (pixel) coordinates\n    const viewportMatrix = createMat4(); // matrix from NDC to viewport.\n    const pixelProjectionMatrix = createMat4(); // matrix from world space to viewport.\n    mat4.scale(viewportMatrix, viewportMatrix, [this.width / 2, -this.height / 2, 1]);\n    mat4.translate(viewportMatrix, viewportMatrix, [1, -1, 0]);\n    mat4.multiply(pixelProjectionMatrix, viewportMatrix, this.viewProjectionMatrix);\n    this.pixelProjectionMatrix = pixelProjectionMatrix;\n    this.viewportMatrix = viewportMatrix;\n\n    this.pixelUnprojectionMatrix = mat4.invert(createMat4(), this.pixelProjectionMatrix);\n    if (!this.pixelUnprojectionMatrix) {\n      log.warn('Pixel project matrix not invertible')();\n      // throw new Error('Pixel project matrix not invertible');\n    }\n  }\n}\n\nViewport.displayName = 'Viewport';\n","const PERCENT_OR_PIXELS_REGEX = /([0-9]+\\.?[0-9]*)(%|px)/;\n\n// Takes a number or a string of formats `50%`, `33.3%` or `200px`\nexport function parsePosition(value) {\n  switch (typeof value) {\n    case 'number':\n      return {\n        position: value,\n        relative: false\n      };\n\n    case 'string':\n      const match = value.match(PERCENT_OR_PIXELS_REGEX);\n      if (match && match.length >= 3) {\n        const relative = match[2] === '%';\n        const position = parseFloat(match[1]);\n        return {\n          position: relative ? position / 100 : position,\n          relative\n        };\n      }\n    // fallthrough\n\n    default:\n      // eslint-disable-line\n      throw new Error(`Could not parse position string ${value}`);\n  }\n}\n\nexport function getPosition(position, extent) {\n  return position.relative ? Math.round(position.position * extent) : position.position;\n}\n","// Partial deep equal (only recursive on arrays)\nexport function deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  for (const key in a) {\n    const aValue = a[key];\n    const bValue = b[key];\n    const equals =\n      aValue === bValue ||\n      (Array.isArray(aValue) && Array.isArray(bValue) && deepEqual(aValue, bValue));\n    if (!equals) {\n      return false;\n    }\n  }\n  return true;\n}\n","import Viewport from '../viewports/viewport';\nimport {parsePosition, getPosition} from '../utils/positions';\nimport {deepEqual} from '../utils/deep-equal';\nimport assert from '../utils/assert';\n\nexport default class View {\n  constructor(props = {}) {\n    const {\n      id = null,\n\n      // Window width/height in pixels (for pixel projection)\n      x = 0,\n      y = 0,\n      width = '100%',\n      height = '100%',\n\n      // Viewport Options\n      projectionMatrix = null, // Projection matrix\n      fovy = 50, // Perspective projection parameters, used if projectionMatrix not supplied\n      near = 0.1, // Distance of near clipping plane\n      far = 1000, // Distance of far clipping plane\n      modelMatrix = null, // A model matrix to be applied to position, to match the layer props API\n\n      // A View can be a wrapper for a viewport instance\n      viewportInstance = null,\n\n      // Internal: Viewport Type\n      type = Viewport // TODO - default to WebMercator?\n    } = props;\n\n    assert(!viewportInstance || viewportInstance instanceof Viewport);\n    this.viewportInstance = viewportInstance;\n\n    // Id\n    this.id = id || this.constructor.displayName || 'view';\n    this.type = type;\n\n    this.props = Object.assign({}, props, {\n      id: this.id,\n      projectionMatrix,\n      fovy,\n      near,\n      far,\n      modelMatrix\n    });\n\n    // Extents\n    this._parseDimensions({x, y, width, height});\n\n    // Bind methods for easy access\n    this.equals = this.equals.bind(this);\n\n    Object.seal(this);\n  }\n\n  equals(view) {\n    if (this === view) {\n      return true;\n    }\n\n    // if `viewportInstance` is set, it is the only prop that is used\n    // Delegate to `Viewport.equals`\n    if (this.viewportInstance) {\n      return view.viewportInstance && this.viewportInstance.equals(view.viewportInstance);\n    }\n\n    const viewChanged = deepEqual(this.props, view.props);\n\n    return viewChanged;\n  }\n\n  // Build a `Viewport` from a view descriptor\n  // TODO - add support for autosizing viewports using width and height\n  makeViewport({width, height, viewState}) {\n    if (this.viewportInstance) {\n      return this.viewportInstance;\n    }\n\n    viewState = this.filterViewState(viewState);\n\n    // Resolve relative viewport dimensions\n    const viewportDimensions = this.getDimensions({width, height});\n    const props = {...viewState, ...this.props, ...viewportDimensions};\n    return this._getViewport(props);\n  }\n\n  getViewStateId() {\n    switch (typeof this.props.viewState) {\n      case 'string':\n        // if View.viewState is a string, return it\n        return this.props.viewState;\n\n      case 'object':\n        // If it is an object, return its id component\n        return this.props.viewState && this.props.viewState.id;\n\n      default:\n        return this.id;\n    }\n  }\n\n  // Allows view to override (or completely define) viewState\n  filterViewState(viewState) {\n    if (this.props.viewState && typeof this.props.viewState === 'object') {\n      // If we have specified an id, then intent is to override,\n      // If not, completely specify the view state\n      if (!this.props.viewState.id) {\n        return this.props.viewState;\n      }\n\n      // Merge in all props from View's viewState, except id\n      const newViewState = Object.assign({}, viewState);\n      for (const key in this.props.viewState) {\n        if (key !== 'id') {\n          newViewState[key] = this.props.viewState[key];\n        }\n      }\n      return newViewState;\n    }\n\n    return viewState;\n  }\n\n  // Resolve relative viewport dimensions into actual dimensions (y='50%', width=800 => y=400)\n  getDimensions({width, height}) {\n    return {\n      x: getPosition(this._x, width),\n      y: getPosition(this._y, height),\n      width: getPosition(this._width, width),\n      height: getPosition(this._height, height)\n    };\n  }\n\n  // Used by sub classes to resolve controller props\n  _getControllerProps(defaultOpts) {\n    let opts = this.props.controller;\n\n    if (!opts) {\n      return null;\n    }\n    if (opts === true) {\n      return defaultOpts;\n    }\n    if (typeof opts === 'function') {\n      opts = {type: opts};\n    }\n    return Object.assign({}, defaultOpts, opts);\n  }\n\n  // Overridable method\n  _getViewport(props) {\n    // Get the type of the viewport\n    const {type: ViewportType} = this;\n    return new ViewportType(props);\n  }\n\n  // Parse relative viewport dimension descriptors (e.g {y: '50%', height: '50%'})\n  _parseDimensions({x, y, width, height}) {\n    this._x = parsePosition(x);\n    this._y = parsePosition(y);\n    this._width = parsePosition(width);\n    this._height = parsePosition(height);\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// View and Projection Matrix calculations for mapbox-js style\n// map view properties\nimport Viewport from './viewport';\n\nimport {\n  pixelsToWorld,\n  getViewMatrix,\n  addMetersToLngLat,\n  getProjectionParameters,\n  fitBounds,\n  getBounds\n} from '@math.gl/web-mercator';\n\n// TODO - import from math.gl\nimport * as vec2 from 'gl-matrix/vec2';\nimport {Matrix4} from 'math.gl';\n\nexport default class WebMercatorViewport extends Viewport {\n  /**\n   * @classdesc\n   * Creates view/projection matrices from mercator params\n   * Note: The Viewport is immutable in the sense that it only has accessors.\n   * A new viewport instance should be created if any parameters have changed.\n   */\n  /* eslint-disable complexity, max-statements */\n  constructor(opts = {}) {\n    const {\n      latitude = 0,\n      longitude = 0,\n      zoom = 11,\n      pitch = 0,\n      bearing = 0,\n      nearZMultiplier = 0.1,\n      farZMultiplier = 1.01,\n      orthographic = false,\n\n      repeat = false,\n      worldOffset = 0\n    } = opts;\n\n    let {width, height, altitude = 1.5} = opts;\n    const scale = Math.pow(2, zoom);\n\n    // Silently allow apps to send in 0,0 to facilitate isomorphic render etc\n    width = width || 1;\n    height = height || 1;\n\n    // Altitude - prevent division by 0\n    // TODO - just throw an Error instead?\n    altitude = Math.max(0.75, altitude);\n\n    const {fov, aspect, focalDistance, near, far} = getProjectionParameters({\n      width,\n      height,\n      pitch,\n      altitude,\n      nearZMultiplier,\n      farZMultiplier\n    });\n\n    // The uncentered matrix allows us two move the center addition to the\n    // shader (cheap) which gives a coordinate system that has its center in\n    // the layer's center position. This makes rotations and other modelMatrx\n    // transforms much more useful.\n    let viewMatrixUncentered = getViewMatrix({\n      height,\n      pitch,\n      bearing,\n      scale,\n      altitude\n    });\n\n    if (worldOffset) {\n      const viewOffset = new Matrix4().translate([512 * worldOffset, 0, 0]);\n      viewMatrixUncentered = viewOffset.multiplyLeft(viewMatrixUncentered);\n    }\n\n    const viewportOpts = Object.assign({}, opts, {\n      // x, y,\n      width,\n      height,\n\n      // view matrix\n      viewMatrix: viewMatrixUncentered,\n      longitude,\n      latitude,\n      zoom,\n\n      // projection matrix parameters\n      orthographic,\n      fovyRadians: fov,\n      aspect,\n      // TODO Viewport is already carefully set up to \"focus\" on ground, so can't use focal distance\n      focalDistance: orthographic ? focalDistance : 1,\n      near,\n      far\n    });\n\n    super(viewportOpts);\n\n    // Save parameters\n    this.latitude = latitude;\n    this.longitude = longitude;\n    this.zoom = zoom;\n    this.pitch = pitch;\n    this.bearing = bearing;\n    this.altitude = altitude;\n\n    this.orthographic = orthographic;\n\n    this._subViewports = repeat ? [] : null;\n\n    Object.freeze(this);\n  }\n  /* eslint-enable complexity, max-statements */\n\n  get subViewports() {\n    if (this._subViewports && !this._subViewports.length) {\n      // Cache sub viewports so that we only calculate them once\n      const bounds = this.getBounds();\n\n      const minOffset = Math.floor((bounds[0] + 180) / 360);\n      const maxOffset = Math.ceil((bounds[2] - 180) / 360);\n\n      for (let x = minOffset; x <= maxOffset; x++) {\n        const offsetViewport = x\n          ? new WebMercatorViewport({\n              ...this,\n              worldOffset: x\n            })\n          : this;\n        this._subViewports.push(offsetViewport);\n      }\n    }\n    return this._subViewports;\n  }\n\n  /**\n   * Add a meter delta to a base lnglat coordinate, returning a new lnglat array\n   *\n   * Note: Uses simple linear approximation around the viewport center\n   * Error increases with size of offset (roughly 1% per 100km)\n   *\n   * @param {[Number,Number]|[Number,Number,Number]) lngLatZ - base coordinate\n   * @param {[Number,Number]|[Number,Number,Number]) xyz - array of meter deltas\n   * @return {[Number,Number]|[Number,Number,Number]) array of [lng,lat,z] deltas\n   */\n  addMetersToLngLat(lngLatZ, xyz) {\n    return addMetersToLngLat(lngLatZ, xyz);\n  }\n\n  /**\n   * Get the map center that place a given [lng, lat] coordinate at screen\n   * point [x, y]\n   *\n   * @param {Array} lngLat - [lng,lat] coordinates\n   *   Specifies a point on the sphere.\n   * @param {Array} pos - [x,y] coordinates\n   *   Specifies a point on the screen.\n   * @return {Array} [lng,lat] new map center.\n   */\n  getMapCenterByLngLatPosition({lngLat, pos}) {\n    const fromLocation = pixelsToWorld(pos, this.pixelUnprojectionMatrix);\n    const toLocation = this.projectFlat(lngLat);\n\n    const translate = vec2.add([], toLocation, vec2.negate([], fromLocation));\n    const newCenter = vec2.add([], this.center, translate);\n\n    return this.unprojectFlat(newCenter);\n  }\n\n  getBounds(options = {}) {\n    const corners = getBounds(this, options.z || 0);\n\n    return [\n      Math.min(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.min(corners[0][1], corners[1][1], corners[2][1], corners[3][1]),\n      Math.max(corners[0][0], corners[1][0], corners[2][0], corners[3][0]),\n      Math.max(corners[0][1], corners[1][1], corners[2][1], corners[3][1])\n    ];\n  }\n\n  /**\n   * Returns a new viewport that fit around the given rectangle.\n   * Only supports non-perspective mode.\n   * @param {Array} bounds - [[lon, lat], [lon, lat]]\n   * @param {Number} [options.padding] - The amount of padding in pixels to add to the given bounds.\n   * @param {Array} [options.offset] - The center of the given bounds relative to the map's center,\n   *    [x, y] measured in pixels.\n   * @returns {WebMercatorViewport}\n   */\n  fitBounds(bounds, options = {}) {\n    const {width, height} = this;\n    const {longitude, latitude, zoom} = fitBounds(Object.assign({width, height, bounds}, options));\n    return new WebMercatorViewport({width, height, longitude, latitude, zoom});\n  }\n}\n\nWebMercatorViewport.displayName = 'WebMercatorViewport';\n","import {equals} from 'math.gl';\nimport assert from '../utils/assert';\n\nexport default class TransitionInterpolator {\n  /**\n   * @param opts {array|object}\n   * @param opts.compare {array} - prop names used in equality check\n   * @param opts.extract {array} - prop names needed for interpolation\n   * @param opts.required {array} - prop names that must be supplied\n   * alternatively, supply one list of prop names as `opts` if all of the above are the same.\n   */\n  constructor(opts = {}) {\n    if (Array.isArray(opts)) {\n      opts = {\n        compare: opts,\n        extract: opts,\n        required: opts\n      };\n    }\n    const {compare, extract, required} = opts;\n\n    this._propsToCompare = compare;\n    this._propsToExtract = extract;\n    this._requiredProps = required;\n  }\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {bool} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps, nextProps) {\n    for (const key of this._propsToCompare || Object.keys(nextProps)) {\n      if (\n        !(key in currentProps) ||\n        !(key in nextProps) ||\n        !equals(currentProps[key], nextProps[key])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(startProps, endProps) {\n    let result;\n\n    if (this._propsToExtract) {\n      const startViewStateProps = {};\n      const endViewStateProps = {};\n\n      for (const key of this._propsToExtract) {\n        startViewStateProps[key] = startProps[key];\n        endViewStateProps[key] = endProps[key];\n      }\n      result = {start: startViewStateProps, end: endViewStateProps};\n    } else {\n      result = {start: startProps, end: endProps};\n    }\n\n    this._checkRequiredProps(result.start);\n    this._checkRequiredProps(result.end);\n\n    return result;\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  interpolateProps(startProps, endProps, t) {\n    return endProps;\n  }\n\n  /**\n   * Returns transition duration\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Number} - transition duration in milliseconds\n   */\n  getDuration(startProps, endProps) {\n    return endProps.transitionDuration;\n  }\n\n  _checkRequiredProps(props) {\n    if (!this._requiredProps) {\n      return;\n    }\n\n    this._requiredProps.forEach(propName => {\n      const value = props[propName];\n      assert(\n        Number.isFinite(value) || Array.isArray(value),\n        `${propName} is required for transition`\n      );\n    });\n  }\n}\n","import TransitionInterpolator from './transition-interpolator';\nimport {lerp} from 'math.gl';\n\nconst DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  /**\n   * @param {Array} transitionProps - list of props to apply linear transition to.\n   */\n  constructor(transitionProps) {\n    super(\n      transitionProps || {\n        compare: DEFAULT_PROPS,\n        extract: DEFAULT_PROPS,\n        required: DEFAULT_REQUIRED_PROPS\n      }\n    );\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key in endProps) {\n      viewport[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n    }\n    return viewport;\n  }\n}\n","function noop() {}\n\nconst DEFAULT_SETTINGS = {\n  onStart: noop,\n  onUpdate: noop,\n  onInterrupt: noop,\n  onEnd: noop\n};\n\nexport default class Transition {\n  /**\n   * @params timeline {Timeline}\n   */\n  constructor(timeline) {\n    this._inProgress = false;\n    this._handle = null;\n    this.timeline = timeline;\n\n    // Defaults\n    this.settings = {};\n  }\n\n  /* Public API */\n  get inProgress() {\n    return this._inProgress;\n  }\n\n  /**\n   * (re)start this transition.\n   * @params props {object} - optional overriding props. see constructor\n   */\n  start(props) {\n    this.cancel();\n    this.settings = Object.assign({}, DEFAULT_SETTINGS, props);\n    this._inProgress = true;\n    this.settings.onStart(this);\n  }\n\n  /**\n   * end this transition if it is in progress.\n   */\n  end() {\n    if (this._inProgress) {\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd(this);\n    }\n  }\n\n  /**\n   * cancel this transition if it is in progress.\n   */\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt(this);\n      this.timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  /**\n   * update this transition. Returns `true` if updated.\n   */\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    // It is important to initialize the handle during `update` instead of `start`.\n    // The CPU time that the `start` frame takes should not be counted towards the duration.\n    // On the other hand, `update` always happens during a render cycle. The clock starts when the\n    // transition is rendered for the first time.\n    if (this._handle === null) {\n      const {timeline, settings} = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this.timeline.getTime(this._handle);\n    // Call subclass method\n    this._onUpdate();\n    // Call user callback\n    this.settings.onUpdate(this);\n\n    // This only works if `settings.duration` is set\n    // Spring transition must call `end` manually\n    if (this.timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n\n  /* Private API */\n\n  _onUpdate() {\n    // for subclass override\n  }\n}\n","import LinearInterpolator from '../transitions/linear-interpolator';\nimport Transition from '../transitions/transition';\n\nconst noop = () => {};\n\nexport const TRANSITION_EVENTS = {\n  BREAK: 1,\n  SNAP_TO_END: 2,\n  IGNORE: 3\n};\n\nconst DEFAULT_PROPS = {\n  transitionDuration: 0,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK,\n  onTransitionStart: noop,\n  onTransitionInterrupt: noop,\n  onTransitionEnd: noop\n};\n\nexport default class TransitionManager {\n  constructor(ControllerState, props = {}) {\n    this.ControllerState = ControllerState;\n    this.props = Object.assign({}, DEFAULT_PROPS, props);\n    this.propsInTransition = null;\n    this.transition = new Transition(props.timeline);\n\n    this.onViewStateChange = props.onViewStateChange;\n\n    this._onTransitionUpdate = this._onTransitionUpdate.bind(this);\n  }\n\n  finalize() {\n    this.transition.cancel();\n  }\n\n  // Returns current transitioned viewport.\n  getViewportInTransition() {\n    return this.propsInTransition;\n  }\n\n  // Process the vewiport change, either ignore or trigger a new transition.\n  // Return true if a new transition is triggered, false otherwise.\n  processViewStateChange(nextProps) {\n    let transitionTriggered = false;\n    const currentProps = this.props;\n    // Set this.props here as '_triggerTransition' calls '_updateViewport' that uses this.props.\n    nextProps = Object.assign({}, DEFAULT_PROPS, nextProps);\n    this.props = nextProps;\n\n    // NOTE: Be cautious re-ordering statements in this function.\n    if (this._shouldIgnoreViewportChange(currentProps, nextProps)) {\n      return transitionTriggered;\n    }\n\n    if (this._isTransitionEnabled(nextProps)) {\n      const {interruption, endProps} = this.transition.settings;\n      const startProps = Object.assign(\n        {},\n        currentProps,\n        interruption === TRANSITION_EVENTS.SNAP_TO_END\n          ? endProps\n          : this.propsInTransition || currentProps\n      );\n\n      this._triggerTransition(startProps, nextProps);\n\n      transitionTriggered = true;\n    } else {\n      this.transition.cancel();\n    }\n\n    return transitionTriggered;\n  }\n\n  updateTransition() {\n    this.transition.update();\n  }\n\n  // Helper methods\n\n  _isTransitionEnabled(props) {\n    const {transitionDuration, transitionInterpolator} = props;\n    return (\n      (transitionDuration > 0 || transitionDuration === 'auto') && Boolean(transitionInterpolator)\n    );\n  }\n\n  _isUpdateDueToCurrentTransition(props) {\n    if (this.transition.inProgress) {\n      return this.transition.settings.interpolator.arePropsEqual(props, this.propsInTransition);\n    }\n    return false;\n  }\n\n  _shouldIgnoreViewportChange(currentProps, nextProps) {\n    if (this.transition.inProgress) {\n      // Ignore update if it is requested to be ignored\n      return (\n        this.transition.settings.interruption === TRANSITION_EVENTS.IGNORE ||\n        // Ignore update if it is due to current active transition.\n        this._isUpdateDueToCurrentTransition(nextProps)\n      );\n    } else if (this._isTransitionEnabled(nextProps)) {\n      // Ignore if none of the viewport props changed.\n      return nextProps.transitionInterpolator.arePropsEqual(currentProps, nextProps);\n    }\n    return true;\n  }\n\n  _triggerTransition(startProps, endProps) {\n    const startViewstate = new this.ControllerState(startProps);\n    const endViewStateProps = new this.ControllerState(endProps).shortestPathFrom(startViewstate);\n\n    // update transitionDuration for 'auto' mode\n    const {transitionInterpolator} = endProps;\n    const duration = transitionInterpolator.getDuration\n      ? transitionInterpolator.getDuration(startProps, endProps)\n      : endProps.transitionDuration;\n\n    if (duration === 0) {\n      return;\n    }\n\n    const initialProps = endProps.transitionInterpolator.initializeProps(\n      startProps,\n      endViewStateProps\n    );\n\n    this.propsInTransition = {};\n    this.duration = duration;\n    this.transition.start({\n      duration,\n      easing: endProps.transitionEasing,\n      interpolator: endProps.transitionInterpolator,\n      interruption: endProps.transitionInterruption,\n\n      startProps: initialProps.start,\n      endProps: initialProps.end,\n\n      onStart: endProps.onTransitionStart,\n      onUpdate: this._onTransitionUpdate,\n      onInterrupt: this._onTransitionEnd(endProps.onTransitionInterrupt),\n      onEnd: this._onTransitionEnd(endProps.onTransitionEnd)\n    });\n    this.updateTransition();\n  }\n\n  _onTransitionEnd(callback) {\n    return transition => {\n      this.propsInTransition = null;\n      callback(transition);\n    };\n  }\n\n  _onTransitionUpdate(transition) {\n    // NOTE: Be cautious re-ordering statements in this function.\n    const {\n      time,\n      settings: {interpolator, startProps, endProps, duration, easing}\n    } = transition;\n    const t = easing(time / duration);\n    const viewport = interpolator.interpolateProps(startProps, endProps, t);\n\n    // This gurantees all props (e.g. bearing, longitude) are normalized\n    // So when viewports are compared they are in same range.\n    this.propsInTransition = new this.ControllerState(\n      Object.assign({}, this.props, viewport)\n    ).getViewportProps();\n\n    if (this.onViewStateChange) {\n      this.onViewStateChange({\n        viewState: this.propsInTransition,\n        interactionState: {inTransition: true},\n        oldViewState: this.props\n      });\n    }\n  }\n}\n\nTransitionManager.defaultProps = DEFAULT_PROPS;\n","// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport TransitionManager from './transition-manager';\nimport assert from '../utils/assert';\n\nconst NO_TRANSITION_PROPS = {\n  transitionDuration: 0\n};\n\n// EVENT HANDLING PARAMETERS\nconst ZOOM_ACCEL = 0.01;\n\nconst EVENT_TYPES = {\n  WHEEL: ['wheel'],\n  PAN: ['panstart', 'panmove', 'panend'],\n  PINCH: ['pinchstart', 'pinchmove', 'pinchend'],\n  DOUBLE_TAP: ['doubletap'],\n  KEYBOARD: ['keydown']\n};\n\nexport default class Controller {\n  constructor(ControllerState, options = {}) {\n    assert(ControllerState);\n    this.ControllerState = ControllerState;\n    this.controllerState = null;\n    this.controllerStateProps = null;\n    this.eventManager = null;\n    this.transitionManager = new TransitionManager(ControllerState, options);\n    this._events = null;\n    this._state = {\n      isDragging: false\n    };\n    this._customEvents = [];\n    this.onViewStateChange = null;\n    this.onStateChange = null;\n    this.invertPan = false;\n\n    this.handleEvent = this.handleEvent.bind(this);\n\n    this.setProps(options);\n  }\n\n  set events(customEvents) {\n    this.toggleEvents(this._customEvents, false);\n    this.toggleEvents(customEvents, true);\n    this._customEvents = customEvents;\n    // Make sure default events are not overwritten\n    this.setProps(this.controllerStateProps);\n  }\n\n  finalize() {\n    for (const eventName in this._events) {\n      if (this._events[eventName]) {\n        this.eventManager.off(eventName, this.handleEvent);\n      }\n    }\n    this.transitionManager.finalize();\n  }\n\n  /**\n   * Callback for events\n   * @param {hammer.Event} event\n   */\n  handleEvent(event) {\n    const {ControllerState} = this;\n    this.controllerState = new ControllerState({\n      makeViewport: this.makeViewport,\n      ...this.controllerStateProps,\n      ...this._state\n    });\n\n    switch (event.type) {\n      case 'panstart':\n        return this._onPanStart(event);\n      case 'panmove':\n        return this._onPan(event);\n      case 'panend':\n        return this._onPanEnd(event);\n      case 'pinchstart':\n        return this._onPinchStart(event);\n      case 'pinchmove':\n        return this._onPinch(event);\n      case 'pinchend':\n        return this._onPinchEnd(event);\n      case 'doubletap':\n        return this._onDoubleTap(event);\n      case 'wheel':\n        return this._onWheel(event);\n      case 'keydown':\n        return this._onKeyDown(event);\n      default:\n        return false;\n    }\n  }\n\n  /* Event utils */\n  // Event object: http://hammerjs.github.io/api/#event-object\n  getCenter(event) {\n    const {x, y} = this.controllerStateProps;\n    const {offsetCenter} = event;\n    return [offsetCenter.x - x, offsetCenter.y - y];\n  }\n\n  isPointInBounds(pos, event) {\n    const {width, height} = this.controllerStateProps;\n    if (event && event.handled) {\n      return false;\n    }\n\n    const inside = pos[0] >= 0 && pos[0] <= width && pos[1] >= 0 && pos[1] <= height;\n    if (inside && event) {\n      event.stopPropagation();\n    }\n    return inside;\n  }\n\n  isFunctionKeyPressed(event) {\n    const {srcEvent} = event;\n    return Boolean(srcEvent.metaKey || srcEvent.altKey || srcEvent.ctrlKey || srcEvent.shiftKey);\n  }\n\n  isDragging() {\n    return this._state.isDragging;\n  }\n\n  /**\n   * Extract interactivity options\n   */\n  /* eslint-disable complexity, max-statements */\n  setProps(props) {\n    if ('onViewStateChange' in props) {\n      this.onViewStateChange = props.onViewStateChange;\n    }\n    if ('onStateChange' in props) {\n      this.onStateChange = props.onStateChange;\n    }\n    if ('makeViewport' in props) {\n      this.makeViewport = props.makeViewport;\n    }\n    this.controllerStateProps = props;\n\n    if ('eventManager' in props && this.eventManager !== props.eventManager) {\n      // EventManager has changed\n      this.eventManager = props.eventManager;\n      this._events = {};\n      this.toggleEvents(this._customEvents, true);\n    }\n\n    this.transitionManager.processViewStateChange(this.controllerStateProps);\n\n    // TODO - make sure these are not reset on every setProps\n    const {\n      scrollZoom = true,\n      dragPan = true,\n      dragRotate = true,\n      doubleClickZoom = true,\n      touchZoom = true,\n      touchRotate = false,\n      keyboard = true\n    } = props;\n\n    // Register/unregister events\n    const isInteractive = Boolean(this.onViewStateChange);\n    this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && scrollZoom);\n    this.toggleEvents(EVENT_TYPES.PAN, isInteractive && (dragPan || dragRotate));\n    this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && (touchZoom || touchRotate));\n    this.toggleEvents(EVENT_TYPES.DOUBLE_TAP, isInteractive && doubleClickZoom);\n    this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && keyboard);\n\n    // Interaction toggles\n    this.scrollZoom = scrollZoom;\n    this.dragPan = dragPan;\n    this.dragRotate = dragRotate;\n    this.doubleClickZoom = doubleClickZoom;\n    this.touchZoom = touchZoom;\n    this.touchRotate = touchRotate;\n    this.keyboard = keyboard;\n  }\n  /* eslint-enable complexity, max-statements */\n\n  updateTransition() {\n    this.transitionManager.updateTransition();\n  }\n\n  toggleEvents(eventNames, enabled) {\n    if (this.eventManager) {\n      eventNames.forEach(eventName => {\n        if (this._events[eventName] !== enabled) {\n          this._events[eventName] = enabled;\n          if (enabled) {\n            this.eventManager.on(eventName, this.handleEvent);\n          } else {\n            this.eventManager.off(eventName, this.handleEvent);\n          }\n        }\n      });\n    }\n  }\n\n  // Private Methods\n\n  /* Callback util */\n  // formats map state and invokes callback function\n  updateViewport(newControllerState, extraProps = {}, interactionState = {}) {\n    const viewState = Object.assign({}, newControllerState.getViewportProps(), extraProps);\n\n    // TODO - to restore diffing, we need to include interactionState\n    const changed = this.controllerState !== newControllerState;\n    // const oldViewState = this.controllerState.getViewportProps();\n    // const changed = Object.keys(viewState).some(key => oldViewState[key] !== viewState[key]);\n\n    if (changed) {\n      const oldViewState = this.controllerState ? this.controllerState.getViewportProps() : null;\n      if (this.onViewStateChange) {\n        this.onViewStateChange({viewState, interactionState, oldViewState});\n      }\n    }\n\n    Object.assign(this._state, newControllerState.getInteractiveState(), interactionState);\n\n    if (this.onStateChange) {\n      this.onStateChange(this._state);\n    }\n  }\n\n  /* Event handlers */\n  // Default handler for the `panstart` event.\n  _onPanStart(event) {\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n    const newControllerState = this.controllerState.panStart({pos}).rotateStart({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `panmove` event.\n  _onPan(event) {\n    if (!this.isDragging()) {\n      return false;\n    }\n    let alternateMode = this.isFunctionKeyPressed(event) || event.rightButton;\n    alternateMode = this.invertPan ? !alternateMode : alternateMode;\n    return alternateMode ? this._onPanMove(event) : this._onPanRotate(event);\n  }\n\n  // Default handler for the `panend` event.\n  _onPanEnd(event) {\n    const newControllerState = this.controllerState.panEnd().rotateEnd();\n    this.updateViewport(newControllerState, null, {\n      isDragging: false,\n      isPanning: false,\n      isRotating: false\n    });\n    return true;\n  }\n\n  // Default handler for panning to move.\n  // Called by `_onPan` when panning without function key pressed.\n  _onPanMove(event) {\n    if (!this.dragPan) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const newControllerState = this.controllerState.pan({pos});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isPanning: true\n    });\n    return true;\n  }\n\n  // Default handler for panning to rotate.\n  // Called by `_onPan` when panning with function key pressed.\n  _onPanRotate(event) {\n    if (!this.dragRotate) {\n      return false;\n    }\n\n    const {deltaX, deltaY} = event;\n    const {width, height} = this.controllerState.getViewportProps();\n\n    const deltaScaleX = deltaX / width;\n    const deltaScaleY = deltaY / height;\n\n    const newControllerState = this.controllerState.rotate({deltaScaleX, deltaScaleY});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isRotating: true\n    });\n    return true;\n  }\n\n  // Default handler for the `wheel` event.\n  _onWheel(event) {\n    if (!this.scrollZoom) {\n      return false;\n    }\n    event.preventDefault();\n\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n\n    const {delta} = event;\n\n    // Map wheel delta to relative scale\n    let scale = 2 / (1 + Math.exp(-Math.abs(delta * ZOOM_ACCEL)));\n    if (delta < 0 && scale !== 0) {\n      scale = 1 / scale;\n    }\n\n    const newControllerState = this.controllerState.zoom({pos, scale});\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isZooming: true,\n      isPanning: true\n    });\n    return true;\n  }\n\n  // Default handler for the `pinchstart` event.\n  _onPinchStart(event) {\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n\n    const newControllerState = this.controllerState.zoomStart({pos}).rotateStart({pos});\n    // hack - hammer's `rotation` field doesn't seem to produce the correct angle\n    this._state.startPinchRotation = event.rotation;\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {isDragging: true});\n    return true;\n  }\n\n  // Default handler for the `pinch` event.\n  _onPinch(event) {\n    if (!this.touchZoom && !this.touchRotate) {\n      return false;\n    }\n    if (!this.isDragging()) {\n      return false;\n    }\n\n    let newControllerState = this.controllerState;\n    if (this.touchZoom) {\n      const {scale} = event;\n      const pos = this.getCenter(event);\n      newControllerState = newControllerState.zoom({pos, scale});\n    }\n    if (this.touchRotate) {\n      const {rotation} = event;\n      const {startPinchRotation} = this._state;\n      newControllerState = newControllerState.rotate({\n        deltaScaleX: -(rotation - startPinchRotation) / 180\n      });\n    }\n\n    this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isPanning: this.touchZoom,\n      isZooming: this.touchZoom,\n      isRotating: this.touchRotate\n    });\n    return true;\n  }\n\n  // Default handler for the `pinchend` event.\n  _onPinchEnd(event) {\n    const newControllerState = this.controllerState.zoomEnd().rotateEnd();\n    this._state.startPinchRotation = 0;\n    this.updateViewport(newControllerState, null, {\n      isDragging: false,\n      isPanning: false,\n      isZooming: false,\n      isRotating: false\n    });\n    return true;\n  }\n\n  // Default handler for the `doubletap` event.\n  _onDoubleTap(event) {\n    if (!this.doubleClickZoom) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    if (!this.isPointInBounds(pos, event)) {\n      return false;\n    }\n\n    const isZoomOut = this.isFunctionKeyPressed(event);\n\n    const newControllerState = this.controllerState.zoom({pos, scale: isZoomOut ? 0.5 : 2});\n    this.updateViewport(newControllerState, this._getTransitionProps(), {\n      isZooming: true,\n      isPanning: true\n    });\n    return true;\n  }\n\n  /* eslint-disable complexity, max-statements */\n  // Default handler for the `keydown` event\n  _onKeyDown(event) {\n    if (!this.keyboard) {\n      return false;\n    }\n    const funcKey = this.isFunctionKeyPressed(event);\n    const {controllerState} = this;\n    let newControllerState;\n    const interactionState = {};\n\n    switch (event.srcEvent.code) {\n      case 'Minus':\n        newControllerState = funcKey\n          ? controllerState.zoomOut().zoomOut()\n          : controllerState.zoomOut();\n        interactionState.isZooming = true;\n        break;\n      case 'Equal':\n        newControllerState = funcKey ? controllerState.zoomIn().zoomIn() : controllerState.zoomIn();\n        interactionState.isZooming = true;\n        break;\n      case 'ArrowLeft':\n        if (funcKey) {\n          newControllerState = controllerState.rotateLeft();\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveLeft();\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowRight':\n        if (funcKey) {\n          newControllerState = controllerState.rotateRight();\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveRight();\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowUp':\n        if (funcKey) {\n          newControllerState = controllerState.rotateUp();\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveUp();\n          interactionState.isPanning = true;\n        }\n        break;\n      case 'ArrowDown':\n        if (funcKey) {\n          newControllerState = controllerState.rotateDown();\n          interactionState.isRotating = true;\n        } else {\n          newControllerState = controllerState.moveDown();\n          interactionState.isPanning = true;\n        }\n        break;\n      default:\n        return false;\n    }\n    this.updateViewport(newControllerState, this._getTransitionProps(), interactionState);\n    return true;\n  }\n  /* eslint-enable complexity */\n\n  _getTransitionProps() {\n    // Transitions on double-tap and key-down are only supported by MapController\n    return NO_TRANSITION_PROPS;\n  }\n}\n","import assert from '../utils/assert';\n\n/* Helpers */\n\nexport default class ViewState {\n  constructor(opts) {\n    assert(Number.isFinite(opts.width), '`width` must be supplied');\n    assert(Number.isFinite(opts.height), '`height` must be supplied');\n\n    this._viewportProps = this._applyConstraints(opts);\n  }\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  shortestPathFrom(viewState) {\n    return this._viewportProps;\n  }\n\n  // Redefined by subclass\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    return props;\n  }\n}\n","import {clamp} from 'math.gl';\nimport Controller from './controller';\nimport ViewState from './view-state';\nimport {normalizeViewportProps} from '@math.gl/web-mercator';\nimport assert from '../utils/assert';\nimport LinearInterpolator from '../transitions/linear-interpolator';\nimport {TRANSITION_EVENTS} from './transition-manager';\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\n\nconst LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\nconst NO_TRANSITION_PROPS = {\n  transitionDuration: 0\n};\n\n// MAPBOX LIMITS\nexport const MAPBOX_LIMITS = {\n  minZoom: 0,\n  maxZoom: 20,\n  minPitch: 0,\n  maxPitch: 60\n};\n\nconst DEFAULT_STATE = {\n  pitch: 0,\n  bearing: 0,\n  altitude: 1.5\n};\n\n/* Utils */\n\nexport class MapState extends ViewState {\n  constructor({\n    makeViewport,\n\n    /** Mapbox viewport properties */\n    /** The width of the viewport */\n    width,\n    /** The height of the viewport */\n    height,\n    /** The latitude at the center of the viewport */\n    latitude,\n    /** The longitude at the center of the viewport */\n    longitude,\n    /** The tile zoom level of the map. */\n    zoom,\n    /** The bearing of the viewport in degrees */\n    bearing = DEFAULT_STATE.bearing,\n    /** The pitch of the viewport in degrees */\n    pitch = DEFAULT_STATE.pitch,\n    /**\n     * Specify the altitude of the viewport camera\n     * Unit: map heights, default 1.5\n     * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n     */\n    altitude = DEFAULT_STATE.altitude,\n\n    /** Viewport constraints */\n    maxZoom = MAPBOX_LIMITS.maxZoom,\n    minZoom = MAPBOX_LIMITS.minZoom,\n    maxPitch = MAPBOX_LIMITS.maxPitch,\n    minPitch = MAPBOX_LIMITS.minPitch,\n\n    /** Interaction states, required to calculate change during transform */\n    /* The point on map being grabbed when the operation first started */\n    startPanLngLat,\n    /* Center of the zoom when the operation first started */\n    startZoomLngLat,\n    /** Bearing when current perspective rotate operation started */\n    startBearing,\n    /** Pitch when current perspective rotate operation started */\n    startPitch,\n    /** Zoom when current zoom operation started */\n    startZoom\n  } = {}) {\n    assert(Number.isFinite(longitude), '`longitude` must be supplied');\n    assert(Number.isFinite(latitude), '`latitude` must be supplied');\n    assert(Number.isFinite(zoom), '`zoom` must be supplied');\n\n    super({\n      width,\n      height,\n      latitude,\n      longitude,\n      zoom,\n      bearing,\n      pitch,\n      altitude,\n      maxZoom,\n      minZoom,\n      maxPitch,\n      minPitch\n    });\n\n    this._interactiveState = {\n      startPanLngLat,\n      startZoomLngLat,\n      startBearing,\n      startPitch,\n      startZoom\n    };\n\n    this.makeViewport = makeViewport;\n  }\n\n  /* Public API */\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  getInteractiveState() {\n    return this._interactiveState;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}) {\n    return this._getUpdatedState({\n      startPanLngLat: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   * @param {[Number, Number], optional} startPos - where the pointer grabbed at\n   *   the start of the operation. Must be supplied of `panStart()` was not called\n   */\n  pan({pos, startPos}) {\n    const startPanLngLat = this._interactiveState.startPanLngLat || this._unproject(startPos);\n\n    if (!startPanLngLat) {\n      return this;\n    }\n\n    const [longitude, latitude] = this._calculateNewLngLat({startPanLngLat, pos});\n\n    return this._getUpdatedState({\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd() {\n    return this._getUpdatedState({\n      startPanLngLat: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  rotateStart({pos}) {\n    return this._getUpdatedState({\n      startBearing: this._viewportProps.bearing,\n      startPitch: this._viewportProps.pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {Number} deltaScaleX - a number between [-1, 1] specifying the\n   *   change to bearing.\n   * @param {Number} deltaScaleY - a number between [-1, 1] specifying the\n   *   change to pitch. -1 sets to minPitch and 1 sets to maxPitch.\n   */\n  rotate({deltaScaleX = 0, deltaScaleY = 0}) {\n    const {startBearing, startPitch} = this._interactiveState;\n\n    if (!Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\n      return this;\n    }\n\n    const {pitch, bearing} = this._calculateNewPitchAndBearing({\n      deltaScaleX,\n      deltaScaleY,\n      startBearing,\n      startPitch\n    });\n\n    return this._getUpdatedState({\n      bearing,\n      pitch\n    });\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd() {\n    return this._getUpdatedState({\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the center is\n   */\n  zoomStart({pos}) {\n    return this._getUpdatedState({\n      startZoomLngLat: this._unproject(pos),\n      startZoom: this._viewportProps.zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({pos, startPos, scale}) {\n    // Make sure we zoom around the current mouse position rather than map center\n    let {startZoom, startZoomLngLat} = this._interactiveState;\n\n    if (!Number.isFinite(startZoom)) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this._viewportProps.zoom;\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n    }\n\n    const zoom = this._calculateNewZoom({scale, startZoom});\n\n    const zoomedViewport = this.makeViewport({...this._viewportProps, zoom});\n    const [longitude, latitude] = zoomedViewport.getMapCenterByLngLatPosition({\n      lngLat: startZoomLngLat,\n      pos\n    });\n\n    return this._getUpdatedState({\n      zoom,\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd() {\n    return this._getUpdatedState({\n      startZoomLngLat: null,\n      startZoom: null\n    });\n  }\n\n  zoomIn() {\n    return this._zoomFromCenter(2);\n  }\n\n  zoomOut() {\n    return this._zoomFromCenter(0.5);\n  }\n\n  moveLeft() {\n    return this._panFromCenter([100, 0]);\n  }\n\n  moveRight() {\n    return this._panFromCenter([-100, 0]);\n  }\n\n  moveUp() {\n    return this._panFromCenter([0, 100]);\n  }\n\n  moveDown() {\n    return this._panFromCenter([0, -100]);\n  }\n\n  rotateLeft() {\n    return this._getUpdatedState({\n      bearing: this._viewportProps.bearing - 15\n    });\n  }\n\n  rotateRight() {\n    return this._getUpdatedState({\n      bearing: this._viewportProps.bearing + 15\n    });\n  }\n\n  rotateUp() {\n    return this._getUpdatedState({\n      pitch: this._viewportProps.pitch + 10\n    });\n  }\n\n  rotateDown() {\n    return this._getUpdatedState({\n      pitch: this._viewportProps.pitch - 10\n    });\n  }\n\n  shortestPathFrom(viewState) {\n    // const endViewStateProps = new this.ControllerState(endProps).shortestPathFrom(startViewstate);\n    const fromProps = viewState.getViewportProps();\n    const props = Object.assign({}, this._viewportProps);\n    const {bearing, longitude} = props;\n\n    if (Math.abs(bearing - fromProps.bearing) > 180) {\n      props.bearing = bearing < 0 ? bearing + 360 : bearing - 360;\n    }\n    if (Math.abs(longitude - fromProps.longitude) > 180) {\n      props.longitude = longitude < 0 ? longitude + 360 : longitude - 360;\n    }\n    return props;\n  }\n\n  /* Private methods */\n\n  _zoomFromCenter(scale) {\n    const {width, height} = this._viewportProps;\n    return this.zoom({\n      pos: [width / 2, height / 2],\n      scale\n    });\n  }\n\n  _panFromCenter(offset) {\n    const {width, height} = this._viewportProps;\n    return this.pan({\n      startPos: [width / 2, height / 2],\n      pos: [width / 2 + offset[0], height / 2 + offset[1]]\n    });\n  }\n\n  _getUpdatedState(newProps) {\n    // Update _viewportProps\n    return new this.constructor({\n      makeViewport: this.makeViewport,\n      ...this._viewportProps,\n      ...this._interactiveState,\n      ...newProps\n    });\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    // Ensure pitch is within specified range\n    const {maxPitch, minPitch, pitch} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    Object.assign(props, normalizeViewportProps(props));\n\n    return props;\n  }\n\n  _unproject(pos) {\n    const viewport = this.makeViewport(this._viewportProps);\n    return pos && viewport.unproject(pos);\n  }\n\n  // Calculate a new lnglat based on pixel dragging position\n  _calculateNewLngLat({startPanLngLat, pos}) {\n    const viewport = this.makeViewport(this._viewportProps);\n    return viewport.getMapCenterByLngLatPosition({lngLat: startPanLngLat, pos});\n  }\n\n  // Calculates new zoom\n  _calculateNewZoom({scale, startZoom}) {\n    const {maxZoom, minZoom} = this._viewportProps;\n    const zoom = startZoom + Math.log2(scale);\n    return clamp(zoom, minZoom, maxZoom);\n  }\n\n  // Calculates a new pitch and bearing from a position (coming from an event)\n  _calculateNewPitchAndBearing({deltaScaleX, deltaScaleY, startBearing, startPitch}) {\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\n\n    const {minPitch, maxPitch} = this._viewportProps;\n\n    const bearing = startBearing + 180 * deltaScaleX;\n    let pitch = startPitch;\n    if (deltaScaleY > 0) {\n      // Gradually increase pitch\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n    } else if (deltaScaleY < 0) {\n      // Gradually decrease pitch\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n    }\n\n    return {\n      pitch,\n      bearing\n    };\n  }\n}\n\nexport default class MapController extends Controller {\n  constructor(props) {\n    super(MapState, props);\n    this.invertPan = true;\n  }\n\n  _getTransitionProps() {\n    // Enables Transitions on double-tap and key-down events.\n    return LINEAR_TRANSITION_PROPS;\n  }\n\n  _onPanRotate(event) {\n    if (!this.dragRotate) {\n      return false;\n    }\n\n    const {deltaX, deltaY} = event;\n    const [, centerY] = this.getCenter(event);\n    const startY = centerY - deltaY;\n    const {width, height} = this.controllerState.getViewportProps();\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\n\n    const newControllerState = this.controllerState.rotate({deltaScaleX, deltaScaleY});\n    return this.updateViewport(newControllerState, NO_TRANSITION_PROPS, {\n      isDragging: true,\n      isRotating: true\n    });\n  }\n}\n","import View from './view';\nimport WebMercatorViewport from '../viewports/web-mercator-viewport';\nimport MapController from '../controllers/map-controller';\n\nexport default class MapView extends View {\n  constructor(props) {\n    super(\n      Object.assign({}, props, {\n        type: WebMercatorViewport\n      })\n    );\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: MapController\n    });\n  }\n}\n\nMapView.displayName = 'MapView';\n","/* eslint-disable complexity */\n\n/* This class creates a luma.gl-compatible \"view\" on top of a DataColumn instance */\nexport default class ShaderAttribute {\n  constructor(dataColumn, opts) {\n    // Options that cannot be changed later\n    this.opts = opts;\n    this.source = dataColumn;\n  }\n\n  get value() {\n    return this.source.value;\n  }\n\n  getValue() {\n    const buffer = this.source.getBuffer();\n    const accessor = this.getAccessor();\n    if (buffer) {\n      return [buffer, accessor];\n    }\n\n    const {value} = this.source;\n    const {size} = accessor;\n    let constantValue = value;\n\n    if (value && value.length !== size) {\n      constantValue = new Float32Array(size);\n      // initiate offset values\n      const index = accessor.elementOffset || 0; // element offset\n      for (let i = 0; i < size; ++i) {\n        constantValue[i] = value[index + i];\n      }\n    }\n\n    return constantValue;\n  }\n\n  getAccessor() {\n    return {\n      // source data accessor\n      ...this.source.getAccessor(),\n      // shader attribute overrides\n      ...this.opts\n    };\n  }\n}\n","/* eslint-disable complexity */\nimport GL from '@luma.gl/constants';\nimport {hasFeature, FEATURES, Buffer} from '@luma.gl/core';\nimport ShaderAttribute from './shader-attribute';\nimport {glArrayFromType} from './gl-utils';\nimport typedArrayManager from '../../utils/typed-array-manager';\nimport {toDoublePrecisionArray} from '../../utils/math-utils';\nimport log from '../../utils/log';\n\nfunction getStride(accessor) {\n  return accessor.stride || accessor.size * accessor.bytesPerElement;\n}\n\nfunction resolveShaderAttribute(baseAccessor, shaderAttributeOptions) {\n  if (shaderAttributeOptions.offset) {\n    log.removed('shaderAttribute.offset', 'vertexOffset, elementOffset')();\n  }\n\n  // All shader attributes share the parent's stride\n  const stride = getStride(baseAccessor);\n  // `vertexOffset` is used to access the neighboring vertex's value\n  // e.g. `nextPositions` in polygon\n  const vertexOffset =\n    'vertexOffset' in shaderAttributeOptions\n      ? shaderAttributeOptions.vertexOffset\n      : baseAccessor.vertexOffset || 0;\n  // `elementOffset` is defined when shader attribute's size is smaller than the parent's\n  // e.g. `translations` in transform matrix\n  const elementOffset = shaderAttributeOptions.elementOffset || 0;\n  const offset =\n    // offsets defined by the attribute\n    vertexOffset * stride +\n    elementOffset * baseAccessor.bytesPerElement +\n    // offsets defined by external buffers if any\n    (baseAccessor.offset || 0);\n\n  return {\n    ...shaderAttributeOptions,\n    offset,\n    stride\n  };\n}\n\nfunction resolveDoublePrecisionShaderAttributes(baseAccessor, shaderAttributeOptions) {\n  const resolvedOptions = resolveShaderAttribute(baseAccessor, shaderAttributeOptions);\n\n  return {\n    high: resolvedOptions,\n    low: {\n      ...resolvedOptions,\n      offset: resolvedOptions.offset + baseAccessor.size * 4\n    }\n  };\n}\n\nexport default class DataColumn {\n  /* eslint-disable max-statements */\n  constructor(gl, opts) {\n    this.gl = gl;\n    this.id = opts.id;\n    this.size = opts.size;\n\n    const logicalType = opts.logicalType || opts.type;\n    const doublePrecision = logicalType === GL.DOUBLE;\n\n    let {defaultValue} = opts;\n    defaultValue = Number.isFinite(defaultValue)\n      ? [defaultValue]\n      : defaultValue || new Array(this.size).fill(0);\n    opts.defaultValue = defaultValue;\n\n    let bufferType = logicalType;\n    if (doublePrecision) {\n      bufferType = GL.FLOAT;\n    } else if (!bufferType && opts.isIndexed) {\n      bufferType =\n        gl && hasFeature(gl, FEATURES.ELEMENT_INDEX_UINT32) ? GL.UNSIGNED_INT : GL.UNSIGNED_SHORT;\n    } else if (!bufferType) {\n      bufferType = GL.FLOAT;\n    }\n    opts.logicalType = logicalType;\n    opts.type = bufferType;\n\n    // This is the attribute type defined by the layer\n    // If an external buffer is provided, this.type may be overwritten\n    // But we always want to use defaultType for allocation\n    let defaultType = glArrayFromType(logicalType || bufferType || GL.FLOAT);\n    this.shaderAttributes = {};\n    this.doublePrecision = doublePrecision;\n\n    // `fp64: false` tells a double-precision attribute to allocate Float32Arrays\n    // by default when using auto-packing. This is more efficient in use cases where\n    // high precision is unnecessary, but the `64Low` attribute is still required\n    // by the shader.\n    if (doublePrecision && opts.fp64 === false) {\n      defaultType = Float32Array;\n    }\n    opts.bytesPerElement = defaultType.BYTES_PER_ELEMENT;\n\n    this.defaultType = defaultType;\n    this.value = null;\n    this.settings = opts;\n    this.state = {\n      externalBuffer: null,\n      bufferAccessor: opts,\n      allocatedValue: null,\n      constant: false\n    };\n    this._buffer = null;\n\n    this.setData(opts);\n  }\n  /* eslint-enable max-statements */\n\n  get buffer() {\n    if (!this._buffer) {\n      const {isIndexed, type} = this.settings;\n      this._buffer = new Buffer(this.gl, {\n        id: this.id,\n        target: isIndexed ? GL.ELEMENT_ARRAY_BUFFER : GL.ARRAY_BUFFER,\n        accessor: {type}\n      });\n    }\n    return this._buffer;\n  }\n\n  get byteOffset() {\n    const accessor = this.getAccessor();\n    if (accessor.vertexOffset) {\n      return accessor.vertexOffset * getStride(accessor);\n    }\n    return 0;\n  }\n\n  delete() {\n    if (this._buffer) {\n      this._buffer.delete();\n      this._buffer = null;\n    }\n    typedArrayManager.release(this.state.allocatedValue);\n  }\n\n  getShaderAttributes(id, options) {\n    if (this.doublePrecision) {\n      const shaderAttributes = {};\n      const isBuffer64Bit = this.value instanceof Float64Array;\n\n      const doubleShaderAttributeDefs = resolveDoublePrecisionShaderAttributes(\n        this.getAccessor(),\n        options || {}\n      );\n\n      shaderAttributes[id] = new ShaderAttribute(this, doubleShaderAttributeDefs.high);\n      shaderAttributes[`${id}64Low`] = isBuffer64Bit\n        ? new ShaderAttribute(this, doubleShaderAttributeDefs.low)\n        : new Float32Array(this.size); // use constant for low part if buffer is 32-bit\n      return shaderAttributes;\n    }\n    if (options) {\n      const shaderAttributeDef = resolveShaderAttribute(this.getAccessor(), options);\n      return {[id]: new ShaderAttribute(this, shaderAttributeDef)};\n    }\n    return {[id]: this};\n  }\n\n  getBuffer() {\n    if (this.state.constant) {\n      return null;\n    }\n    return this.state.externalBuffer || this._buffer;\n  }\n\n  getValue() {\n    if (this.state.constant) {\n      return this.value;\n    }\n    return [this.getBuffer(), this.getAccessor()];\n  }\n\n  getAccessor() {\n    return this.state.bufferAccessor;\n  }\n\n  // returns true if success\n  // eslint-disable-next-line max-statements\n  setData(opts) {\n    const {state} = this;\n    if (ArrayBuffer.isView(opts)) {\n      opts = {value: opts};\n    } else if (opts instanceof Buffer) {\n      opts = {buffer: opts};\n    }\n\n    const accessor = {...this.settings, ...opts};\n    state.bufferAccessor = accessor;\n\n    if (opts.constant) {\n      // set constant\n      let value = opts.value;\n      value = this._normalizeValue(value, [], 0);\n      if (this.settings.normalized) {\n        value = this._normalizeConstant(value);\n      }\n      const hasChanged = !state.constant || !this._areValuesEqual(value, this.value);\n\n      if (!hasChanged) {\n        return false;\n      }\n      state.externalBuffer = null;\n      state.constant = true;\n      this.value = value;\n    } else if (opts.buffer) {\n      const buffer = opts.buffer;\n      state.externalBuffer = buffer;\n      state.constant = false;\n      this.value = opts.value;\n      const isBuffer64Bit = opts.value instanceof Float64Array;\n\n      // Copy the type of the buffer into the accessor\n      accessor.type = opts.type || buffer.accessor.type;\n      accessor.bytesPerElement = buffer.accessor.BYTES_PER_ELEMENT * (isBuffer64Bit ? 2 : 1);\n      accessor.stride = getStride(accessor);\n    } else if (opts.value) {\n      this._checkExternalBuffer(opts);\n\n      let value = opts.value;\n      state.externalBuffer = null;\n      state.constant = false;\n      this.value = value;\n\n      accessor.bytesPerElement = value.BYTES_PER_ELEMENT;\n      accessor.stride = getStride(accessor);\n\n      const {buffer, byteOffset} = this;\n\n      if (this.doublePrecision && value instanceof Float64Array) {\n        value = toDoublePrecisionArray(value, accessor);\n      }\n      // TODO: support offset in buffer.setData?\n      if (buffer.byteLength < value.byteLength + byteOffset) {\n        // Over allocation is required because shader attributes may have bigger offsets\n        buffer.reallocate((value.byteLength + byteOffset) * 2);\n      }\n      // Hack: force Buffer to infer data type\n      buffer.setAccessor(null);\n      buffer.subData({data: value, offset: byteOffset});\n      accessor.type = opts.type || buffer.accessor.type;\n    }\n\n    return true;\n  }\n\n  updateSubBuffer(opts = {}) {\n    const {value} = this;\n    const {startOffset = 0, endOffset} = opts;\n    this.buffer.subData({\n      data:\n        this.doublePrecision && value instanceof Float64Array\n          ? toDoublePrecisionArray(value, {\n              size: this.size,\n              startIndex: startOffset,\n              endIndex: endOffset\n            })\n          : value.subarray(startOffset, endOffset),\n      offset: startOffset * value.BYTES_PER_ELEMENT + this.byteOffset\n    });\n  }\n\n  allocate({numInstances, copy = false}) {\n    const {state} = this;\n    const oldValue = state.allocatedValue;\n\n    // Allocate at least one element to ensure a valid buffer\n    const value = typedArrayManager.allocate(oldValue, numInstances + 1, {\n      size: this.size,\n      type: this.defaultType,\n      copy\n    });\n\n    this.value = value;\n\n    const {buffer, byteOffset} = this;\n\n    if (buffer.byteLength < value.byteLength + byteOffset) {\n      buffer.reallocate(value.byteLength + byteOffset);\n\n      if (copy && oldValue) {\n        // Upload the full existing attribute value to the GPU, so that updateBuffer\n        // can choose to only update a partial range.\n        // TODO - copy old buffer to new buffer on the GPU\n        buffer.subData({\n          data:\n            oldValue instanceof Float64Array ? toDoublePrecisionArray(oldValue, this) : oldValue,\n          offset: byteOffset\n        });\n      }\n    }\n\n    state.allocatedValue = value;\n    state.constant = false;\n    state.externalBuffer = null;\n    state.bufferAccessor = this.settings;\n    return true;\n  }\n\n  // PRIVATE HELPER METHODS\n  _checkExternalBuffer(opts) {\n    const {value} = opts;\n    if (!opts.constant && value) {\n      const ArrayType = this.defaultType;\n\n      let illegalArrayType = false;\n      if (this.doublePrecision) {\n        // not 32bit or 64bit\n        illegalArrayType = value.BYTES_PER_ELEMENT < 4;\n      }\n      if (illegalArrayType) {\n        throw new Error(`Attribute ${this.id} does not support ${value.constructor.name}`);\n      }\n      if (!(value instanceof ArrayType) && this.settings.normalized && !('normalized' in opts)) {\n        log.warn(`Attribute ${this.id} is normalized`)();\n      }\n    }\n  }\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\n  _normalizeConstant(value) {\n    switch (this.settings.type) {\n      case GL.BYTE:\n        // normalize [-128, 127] to [-1, 1]\n        return new Float32Array(value).map(x => ((x + 128) / 255) * 2 - 1);\n\n      case GL.SHORT:\n        // normalize [-32768, 32767] to [-1, 1]\n        return new Float32Array(value).map(x => ((x + 32768) / 65535) * 2 - 1);\n\n      case GL.UNSIGNED_BYTE:\n        // normalize [0, 255] to [0, 1]\n        return new Float32Array(value).map(x => x / 255);\n\n      case GL.UNSIGNED_SHORT:\n        // normalize [0, 65535] to [0, 1]\n        return new Float32Array(value).map(x => x / 65535);\n\n      default:\n        // No normalization for gl.FLOAT and gl.HALF_FLOAT\n        return value;\n    }\n  }\n\n  /* check user supplied values and apply fallback */\n  _normalizeValue(value, out, start) {\n    const {defaultValue, size} = this.settings;\n\n    if (Number.isFinite(value)) {\n      out[start] = value;\n      return out;\n    }\n    if (!value) {\n      out[start] = defaultValue[0];\n      return out;\n    }\n\n    // Important - switch cases are 5x more performant than a for loop!\n    /* eslint-disable no-fallthrough, default-case */\n    switch (size) {\n      case 4:\n        out[start + 3] = Number.isFinite(value[3]) ? value[3] : defaultValue[3];\n      case 3:\n        out[start + 2] = Number.isFinite(value[2]) ? value[2] : defaultValue[2];\n      case 2:\n        out[start + 1] = Number.isFinite(value[1]) ? value[1] : defaultValue[1];\n      case 1:\n        out[start + 0] = Number.isFinite(value[0]) ? value[0] : defaultValue[0];\n        break;\n\n      default:\n        // In the rare case where the attribute size > 4, do it the slow way\n        // This is used for e.g. transform matrices\n        let i = size;\n        while (--i >= 0) {\n          out[start + i] = Number.isFinite(value[i]) ? value[i] : defaultValue[i];\n        }\n    }\n\n    return out;\n  }\n\n  _areValuesEqual(value1, value2) {\n    if (!value1 || !value2) {\n      return false;\n    }\n    const {size} = this;\n    for (let i = 0; i < size; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","import GL from '@luma.gl/constants';\n\n/* eslint-disable complexity */\nexport function glArrayFromType(glType) {\n  // Sorted in some order of likelihood to reduce amount of comparisons\n  switch (glType) {\n    case GL.FLOAT:\n      return Float32Array;\n    case GL.DOUBLE:\n      return Float64Array;\n    case GL.UNSIGNED_SHORT:\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return Uint16Array;\n    case GL.UNSIGNED_INT:\n      return Uint32Array;\n    case GL.UNSIGNED_BYTE:\n      return Uint8ClampedArray;\n    case GL.BYTE:\n      return Int8Array;\n    case GL.SHORT:\n      return Int16Array;\n    case GL.INT:\n      return Int32Array;\n    default:\n      throw new Error('Unknown GL type');\n  }\n}\n/* eslint-enable complexity */\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst EMPTY_ARRAY = [];\nconst placeholderArray = [];\n\n/*\n * Create an Iterable\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n * and a \"context\" tracker from the given data\n */\nexport function createIterable(data, startRow = 0, endRow = Infinity) {\n  let iterable = EMPTY_ARRAY;\n\n  const objectInfo = {\n    index: -1,\n    data,\n    // visitor can optionally utilize this to avoid constructing a new array for every object\n    target: []\n  };\n\n  if (!data) {\n    iterable = EMPTY_ARRAY;\n  } else if (typeof data[Symbol.iterator] === 'function') {\n    // data is already an iterable\n    iterable = data;\n  } else if (data.length > 0) {\n    placeholderArray.length = data.length;\n    iterable = placeholderArray;\n  }\n\n  if (startRow > 0 || Number.isFinite(endRow)) {\n    iterable = (Array.isArray(iterable) ? iterable : Array.from(iterable)).slice(startRow, endRow);\n    objectInfo.index = startRow - 1;\n  }\n\n  return {iterable, objectInfo};\n}\n\n/*\n * Returns true if data is an async iterable object\n */\nexport function isAsyncIterable(data) {\n  return data && data[Symbol.asyncIterator];\n}\n\n/*\n * Create an accessor function from a flat buffer that yields the value at each object index\n */\nexport function getAccessorFromBuffer(typedArray, {size, stride, offset, startIndices, nested}) {\n  const bytesPerElement = typedArray.BYTES_PER_ELEMENT;\n  const elementStride = stride ? stride / bytesPerElement : size;\n  const elementOffset = offset ? offset / bytesPerElement : 0;\n  const vertexCount = Math.floor((typedArray.length - elementOffset) / elementStride);\n\n  return (_, {index, target}) => {\n    if (!startIndices) {\n      const sourceIndex = index * elementStride + elementOffset;\n      for (let j = 0; j < size; j++) {\n        target[j] = typedArray[sourceIndex + j];\n      }\n      return target;\n    }\n    const startIndex = startIndices[index];\n    const endIndex = startIndices[index + 1] || vertexCount;\n    let result;\n\n    if (nested) {\n      result = new Array(endIndex - startIndex);\n      for (let i = startIndex; i < endIndex; i++) {\n        const sourceIndex = i * elementStride + elementOffset;\n        target = new Array(size);\n        for (let j = 0; j < size; j++) {\n          target[j] = typedArray[sourceIndex + j];\n        }\n        result[i - startIndex] = target;\n      }\n    } else if (elementStride === size) {\n      result = typedArray.subarray(\n        startIndex * size + elementOffset,\n        endIndex * size + elementOffset\n      );\n    } else {\n      result = new typedArray.constructor((endIndex - startIndex) * size);\n      let targetIndex = 0;\n      for (let i = startIndex; i < endIndex; i++) {\n        const sourceIndex = i * elementStride + elementOffset;\n        for (let j = 0; j < size; j++) {\n          result[targetIndex++] = typedArray[sourceIndex + j];\n        }\n      }\n    }\n\n    return result;\n  };\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Flattens a nested array into a single level array,\n * or a single value into an array with one value\n * @example flatten([[1, [2]], [3], 4]) => [1, 2, 3, 4]\n * @example flatten(1) => [1]\n * @param {Array} array The array to flatten.\n * @param {Function} filter= - Optional predicate called on each `value` to\n *   determine if it should be included (pushed onto) the resulting array.\n * @param {Function} map= - Optional transform applied to each array elements.\n * @param {Array} result=[] - Optional array to push value into\n * @return {Array} Returns the new flattened array (new array or `result` if provided)\n */\nexport function flatten(array, filter = () => true) {\n  // Wrap single object in array\n  if (!Array.isArray(array)) {\n    return filter(array) ? [array] : [];\n  }\n  // Deep flatten and filter the array\n  return flattenArray(array, filter, []);\n}\n\n// Deep flattens an array. Helper to `flatten`, see its parameters\nfunction flattenArray(array, filter, result) {\n  let index = -1;\n  while (++index < array.length) {\n    const value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, result);\n    } else if (filter(value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n// Uses copyWithin to significantly speed up typed array value filling\nexport function fillArray({target, source, start = 0, count = 1}) {\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return target;\n}\n","/* \n * range (Array)\n *   + start (Number) - the start index (incl.)\n *   + end (Number) - the end index (excl.)\n * rangeList (Array) - array of sorted, combined ranges\n */\nexport const EMPTY = [];\nexport const FULL = [[0, Infinity]];\n\n// Insert a range into a range collection\nexport function add(rangeList, range) {\n  // Noop if range collection already covers all\n  if (rangeList === FULL) {\n    return rangeList;\n  }\n\n  // Validate the input range\n  if (range[0] < 0) {\n    range[0] = 0;\n  }\n  if (range[0] >= range[1]) {\n    return rangeList;\n  }\n\n  // TODO - split off to tree-shakable Range class\n  const newRangeList = [];\n  const len = rangeList.length;\n  let insertPosition = 0;\n\n  for (let i = 0; i < len; i++) {\n    const range0 = rangeList[i];\n\n    if (range0[1] < range[0]) {\n      // the current range is to the left of the new range\n      newRangeList.push(range0);\n      insertPosition = i + 1;\n    } else if (range0[0] > range[1]) {\n      // the current range is to the right of the new range\n      newRangeList.push(range0);\n    } else {\n      range = [Math.min(range0[0], range[0]), Math.max(range0[1], range[1])];\n    }\n  }\n  newRangeList.splice(insertPosition, 0, range);\n  return newRangeList;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/*\n * Helper function for padArray\n */\nfunction padArrayChunk({source, target, start = 0, end, getData}) {\n  end = end || target.length;\n\n  const sourceLength = source.length;\n  const targetLength = end - start;\n\n  if (sourceLength > targetLength) {\n    target.set(source.subarray(0, targetLength), start);\n    return;\n  }\n\n  target.set(source, start);\n\n  if (!getData) {\n    return;\n  }\n\n  // source is not large enough to fill target space, call `getData` to get filler data\n  let i = sourceLength;\n  while (i < targetLength) {\n    const datum = getData(i, source);\n    for (let j = 0; j < datum.length; j++) {\n      target[start + i] = datum[j];\n      i++;\n    }\n  }\n}\n\n/*\n * The padArray function stretches a source array to the size of a target array.\n   The arrays can have internal structures (like the attributes of PathLayer and\n   SolidPolygonLayer), defined by the optional sourceStartIndices and targetStartIndices parameters.\n   If the target array is larger, the getData callback is used to fill in the blanks.\n * @params {TypedArray} source - original data\n * @params {TypedArray} target - output data\n * @params {Number} size - length per datum\n * @params {Function} getData - callback to get new data when source is short\n * @params {Array<Number>} [sourceStartIndices] - subdivision of the original data in [object0StartIndex, object1StartIndex, ...]\n * @params {Array<Number>} [targetStartIndices] - subdivision of the output data in [object0StartIndex, object1StartIndex, ...]\n */\nexport function padArray({source, target, size, getData, sourceStartIndices, targetStartIndices}) {\n  if (!Array.isArray(targetStartIndices)) {\n    // Flat arrays\n    padArrayChunk({\n      source,\n      target,\n      getData\n    });\n    return target;\n  }\n\n  // Arrays have internal structure\n  let sourceIndex = 0;\n  let targetIndex = 0;\n  const getChunkData = getData && ((i, chunk) => getData(i + targetIndex, chunk));\n\n  const n = Math.min(sourceStartIndices.length, targetStartIndices.length);\n\n  for (let i = 1; i < n; i++) {\n    const nextSourceIndex = sourceStartIndices[i] * size;\n    const nextTargetIndex = targetStartIndices[i] * size;\n\n    padArrayChunk({\n      source: source.subarray(sourceIndex, nextSourceIndex),\n      target,\n      start: targetIndex,\n      end: nextTargetIndex,\n      getData: getChunkData\n    });\n\n    sourceIndex = nextSourceIndex;\n    targetIndex = nextTargetIndex;\n  }\n\n  if (targetIndex < target.length) {\n    padArrayChunk({\n      source: [],\n      target,\n      start: targetIndex,\n      getData: getChunkData\n    });\n  }\n\n  return target;\n}\n","import {padArray} from '../../utils/array-utils';\n\nconst DEFAULT_TRANSITION_SETTINGS = {\n  interpolation: {\n    duration: 0,\n    easing: t => t\n  },\n  spring: {\n    stiffness: 0.05,\n    damping: 0.5\n  }\n};\n\nexport function normalizeTransitionSettings(userSettings, layerSettings) {\n  if (!userSettings) {\n    return null;\n  }\n  if (Number.isFinite(userSettings)) {\n    userSettings = {duration: userSettings};\n  }\n  userSettings.type = userSettings.type || 'interpolation';\n  return Object.assign(\n    {},\n    DEFAULT_TRANSITION_SETTINGS[userSettings.type],\n    layerSettings,\n    userSettings\n  );\n}\n\n// NOTE: NOT COPYING OVER OFFSET OR STRIDE HERE BECAUSE:\n// (1) WE DON'T SUPPORT INTERLEAVED BUFFERS FOR TRANSITIONS\n// (2) BUFFERS WITH OFFSETS ALWAYS CONTAIN VALUES OF THE SAME SIZE\n// (3) THE OPERATIONS IN THE SHADER ARE PER-COMPONENT (addition and scaling)\nexport function getSourceBufferAttribute(gl, attribute) {\n  // The Attribute we pass to Transform as a sourceBuffer must have {divisor: 0}\n  // so we create a copy of the attribute (with divisor=0) to use when running\n  // transform feedback\n  const buffer = attribute.getBuffer();\n  if (buffer) {\n    return [\n      attribute.getBuffer(),\n      {\n        divisor: 0,\n        size: attribute.size,\n        normalized: attribute.settings.normalized\n      }\n    ];\n  }\n  // constant\n  // don't pass normalized here because the `value` from a normalized attribute is\n  // already normalized\n  return attribute.value;\n}\n\nexport function getAttributeTypeFromSize(size) {\n  switch (size) {\n    case 1:\n      return 'float';\n    case 2:\n      return 'vec2';\n    case 3:\n      return 'vec3';\n    case 4:\n      return 'vec4';\n    default:\n      throw new Error(`No defined attribute type for size \"${size}\"`);\n  }\n}\n\nexport function cycleBuffers(buffers) {\n  buffers.push(buffers.shift());\n}\n\nexport function getAttributeBufferLength(attribute, numInstances) {\n  const {doublePrecision, settings, value, size} = attribute;\n  const multiplier = doublePrecision ? 2 : 1;\n  return (settings.noAlloc ? value.length : numInstances * size) * multiplier;\n}\n\n// This helper is used when transitioning attributes from a set of values in one buffer layout\n// to a set of values in a different buffer layout. (Buffer layouts are used when attribute values\n// within a buffer should be grouped for drawElements, like the Polygon layer.) For example, a\n// buffer layout of [3, 4] might have data [A1, A2, A3, B1, B2, B3, B4]. If it needs to transition\n// to a buffer layout of [4, 2], it should produce a buffer, using the transition setting's `enter`\n// function, that looks like this: [A1, A2, A3, A4 (user `enter` fn), B1, B2, 0]. Note: the final\n// 0 in this buffer is because we never shrink buffers, only grow them, for performance reasons.\nexport function padBuffer({\n  buffer,\n  numInstances,\n  attribute,\n  fromLength,\n  fromStartIndices,\n  getData = x => x\n}) {\n  // TODO: move the precisionMultiplier logic to the attribute when retrieving\n  // its `size` and `elementOffset`?\n  const precisionMultiplier = attribute.doublePrecision ? 2 : 1;\n  const size = attribute.size * precisionMultiplier;\n  const byteOffset = attribute.byteOffset;\n  const toStartIndices = attribute.startIndices;\n  const hasStartIndices = fromStartIndices && toStartIndices;\n  const toLength = getAttributeBufferLength(attribute, numInstances);\n  const isConstant = attribute.state.constant;\n\n  // check if buffer needs to be padded\n  if (!hasStartIndices && fromLength >= toLength) {\n    return;\n  }\n\n  const toData = isConstant\n    ? attribute.value\n    : attribute.getBuffer().getData({srcByteOffset: byteOffset});\n  if (attribute.settings.normalized && !isConstant) {\n    const getter = getData;\n    getData = (value, chunk) => attribute._normalizeConstant(getter(value, chunk));\n  }\n\n  const getMissingData = isConstant\n    ? (i, chunk) => getData(toData, chunk)\n    : (i, chunk) => getData(toData.subarray(i, i + size), chunk);\n\n  const source = buffer.getData({length: fromLength});\n  const data = new Float32Array(toLength);\n  padArray({\n    source,\n    target: data,\n    sourceStartIndices: fromStartIndices,\n    targetStartIndices: toStartIndices,\n    size,\n    getData: getMissingData\n  });\n\n  // TODO: support offset in buffer.setData?\n  if (buffer.byteLength < data.byteLength + byteOffset) {\n    buffer.reallocate(data.byteLength + byteOffset);\n  }\n  buffer.subData({data, offset: byteOffset});\n}\n","/* eslint-disable complexity */\nimport DataColumn from './data-column';\nimport assert from '../../utils/assert';\nimport {createIterable, getAccessorFromBuffer} from '../../utils/iterable-utils';\nimport {fillArray} from '../../utils/flatten';\nimport * as range from '../../utils/range';\nimport {normalizeTransitionSettings} from './attribute-transition-utils';\n\nexport default class Attribute extends DataColumn {\n  constructor(gl, opts = {}) {\n    super(gl, opts);\n\n    const {\n      // deck.gl fields\n      transition = false,\n      noAlloc = false,\n      update = null,\n      accessor = null,\n      transform = null,\n      startIndices = null\n    } = opts;\n\n    Object.assign(this.settings, {\n      transition,\n      noAlloc,\n      update: update || (accessor && this._autoUpdater),\n      accessor,\n      transform\n    });\n\n    Object.assign(this.state, {\n      lastExternalBuffer: null,\n      binaryValue: null,\n      binaryAccessor: null,\n      needsUpdate: true,\n      needsRedraw: false,\n      updateRanges: range.FULL,\n      startIndices\n    });\n\n    Object.seal(this.settings);\n    Object.seal(this.state);\n\n    // Check all fields and generate helpful error messages\n    this._validateAttributeUpdaters();\n  }\n\n  get startIndices() {\n    return this.state.startIndices;\n  }\n\n  set startIndices(layout) {\n    this.state.startIndices = layout;\n  }\n\n  needsUpdate() {\n    return this.state.needsUpdate;\n  }\n\n  needsRedraw({clearChangedFlags = false} = {}) {\n    const needsRedraw = this.state.needsRedraw;\n    this.state.needsRedraw = needsRedraw && !clearChangedFlags;\n    return needsRedraw;\n  }\n\n  getUpdateTriggers() {\n    const {accessor} = this.settings;\n\n    // Backards compatibility: allow attribute name to be used as update trigger key\n    return [this.id].concat((typeof accessor !== 'function' && accessor) || []);\n  }\n\n  supportsTransition() {\n    return Boolean(this.settings.transition);\n  }\n\n  // Resolve transition settings object if transition is enabled, otherwise `null`\n  getTransitionSetting(opts) {\n    const {accessor} = this.settings;\n    // TODO: have the layer resolve these transition settings itself?\n    const layerSettings = this.settings.transition;\n    if (!this.supportsTransition()) {\n      return null;\n    }\n    // these are the transition settings passed in by the user\n    const userSettings = Array.isArray(accessor)\n      ? opts[accessor.find(a => opts[a])]\n      : opts[accessor];\n\n    // Shorthand: use duration instead of parameter object\n    return normalizeTransitionSettings(userSettings, layerSettings);\n  }\n\n  setNeedsUpdate(reason = this.id, dataRange) {\n    this.state.needsUpdate = this.state.needsUpdate || reason;\n    this.setNeedsRedraw(reason);\n    if (dataRange) {\n      const {startRow = 0, endRow = Infinity} = dataRange;\n      this.state.updateRanges = range.add(this.state.updateRanges, [startRow, endRow]);\n    } else {\n      this.state.updateRanges = range.FULL;\n    }\n  }\n\n  clearNeedsUpdate() {\n    this.state.needsUpdate = false;\n    this.state.updateRanges = range.EMPTY;\n  }\n\n  setNeedsRedraw(reason = this.id) {\n    this.state.needsRedraw = this.state.needsRedraw || reason;\n  }\n\n  update(opts) {\n    // backward compatibility\n    this.setData(opts);\n  }\n\n  allocate(numInstances) {\n    const {state, settings} = this;\n\n    if (settings.noAlloc) {\n      // Data is provided through a Buffer object.\n      return false;\n    }\n\n    if (settings.update) {\n      assert(Number.isFinite(numInstances));\n      super.allocate({\n        numInstances,\n        copy: state.updateRanges !== range.FULL\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  updateBuffer({numInstances, data, props, context}) {\n    if (!this.needsUpdate()) {\n      return false;\n    }\n\n    const {\n      state: {updateRanges},\n      settings: {update, noAlloc}\n    } = this;\n\n    let updated = true;\n    if (update) {\n      // Custom updater - typically for non-instanced layers\n      for (const [startRow, endRow] of updateRanges) {\n        update.call(context, this, {data, startRow, endRow, props, numInstances});\n      }\n      if (!this.value) {\n        // no value was assigned during update\n      } else if (\n        this.constant ||\n        this.buffer.byteLength < this.value.byteLength + this.byteOffset\n      ) {\n        this.setData({\n          value: this.value,\n          constant: this.constant\n        });\n      } else {\n        for (const [startRow, endRow] of updateRanges) {\n          const startOffset = Number.isFinite(startRow) ? this.getVertexOffset(startRow) : 0;\n          const endOffset = Number.isFinite(endRow)\n            ? this.getVertexOffset(endRow)\n            : noAlloc || !Number.isFinite(numInstances)\n              ? this.value.length\n              : numInstances * this.size;\n\n          super.updateSubBuffer({startOffset, endOffset});\n        }\n      }\n      this._checkAttributeArray();\n    } else {\n      updated = false;\n    }\n\n    this.clearNeedsUpdate();\n    this.setNeedsRedraw();\n\n    return updated;\n  }\n\n  // Use generic value\n  // Returns true if successful\n  setConstantValue(value) {\n    if (value === undefined || typeof value === 'function') {\n      return false;\n    }\n\n    const hasChanged = this.setData({constant: true, value});\n\n    if (hasChanged) {\n      this.setNeedsRedraw();\n    }\n    this.clearNeedsUpdate();\n    return true;\n  }\n\n  // Use external buffer\n  // Returns true if successful\n  // eslint-disable-next-line max-statements\n  setExternalBuffer(buffer) {\n    const {state} = this;\n\n    if (!buffer) {\n      state.lastExternalBuffer = null;\n      return false;\n    }\n\n    this.clearNeedsUpdate();\n\n    if (state.lastExternalBuffer === buffer) {\n      return true;\n    }\n    state.lastExternalBuffer = buffer;\n    this.setNeedsRedraw();\n    this.setData(buffer);\n    return true;\n  }\n\n  // Binary value is a typed array packed from mapping the source data with the accessor\n  // If the returned value from the accessor is the same as the attribute value, set it directly\n  // Otherwise use the auto updater for transform/normalization\n  setBinaryValue(buffer, startIndices = null) {\n    const {state, settings} = this;\n\n    if (!buffer) {\n      state.binaryValue = null;\n      state.binaryAccessor = null;\n      return false;\n    }\n\n    if (settings.noAlloc) {\n      // Let the layer handle this\n      return false;\n    }\n\n    if (state.binaryValue === buffer) {\n      this.clearNeedsUpdate();\n      return true;\n    }\n    state.binaryValue = buffer;\n    this.setNeedsRedraw();\n\n    if (ArrayBuffer.isView(buffer)) {\n      buffer = {value: buffer};\n    }\n    const needsUpdate = settings.transform || startIndices !== this.startIndices;\n\n    if (needsUpdate) {\n      assert(ArrayBuffer.isView(buffer.value), `invalid ${settings.accessor}`);\n      const needsNormalize = buffer.size && buffer.size !== this.size;\n\n      state.binaryAccessor = getAccessorFromBuffer(buffer.value, {\n        size: buffer.size || this.size,\n        stride: buffer.stride,\n        offset: buffer.offset,\n        startIndices,\n        nested: needsNormalize\n      });\n      // Fall through to auto updater\n      return false;\n    }\n\n    this.clearNeedsUpdate();\n    this.setData(buffer);\n    return true;\n  }\n\n  getVertexOffset(row) {\n    const {startIndices} = this;\n    const vertexIndex = startIndices ? startIndices[row] : row;\n    return vertexIndex * this.size;\n  }\n\n  getShaderAttributes() {\n    const shaderAttributeDefs = this.settings.shaderAttributes || {[this.id]: null};\n    const shaderAttributes = {};\n\n    for (const shaderAttributeName in shaderAttributeDefs) {\n      Object.assign(\n        shaderAttributes,\n        super.getShaderAttributes(shaderAttributeName, shaderAttributeDefs[shaderAttributeName])\n      );\n    }\n\n    return shaderAttributes;\n  }\n\n  /* eslint-disable max-depth, max-statements */\n  _autoUpdater(attribute, {data, startRow, endRow, props, numInstances}) {\n    if (attribute.constant) {\n      return;\n    }\n    const {settings, state, value, size, startIndices} = attribute;\n\n    const {accessor, transform} = settings;\n    const accessorFunc =\n      state.binaryAccessor || (typeof accessor === 'function' ? accessor : props[accessor]);\n\n    assert(typeof accessorFunc === 'function', `accessor \"${accessor}\" is not a function`);\n\n    let i = attribute.getVertexOffset(startRow);\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n\n      let objectValue = accessorFunc(object, objectInfo);\n      if (transform) {\n        // transform callbacks could be bound to a particular layer instance.\n        // always point `this` to the current layer.\n        objectValue = transform.call(this, objectValue);\n      }\n\n      if (startIndices) {\n        const numVertices =\n          (objectInfo.index < startIndices.length - 1\n            ? startIndices[objectInfo.index + 1]\n            : numInstances) - startIndices[objectInfo.index];\n        if (objectValue && Array.isArray(objectValue[0])) {\n          let startIndex = i;\n          for (const item of objectValue) {\n            attribute._normalizeValue(item, value, startIndex);\n            startIndex += size;\n          }\n        } else if (objectValue && objectValue.length > size) {\n          value.set(objectValue, i);\n        } else {\n          attribute._normalizeValue(objectValue, objectInfo.target, 0);\n          fillArray({\n            target: value,\n            source: objectInfo.target,\n            start: i,\n            count: numVertices\n          });\n        }\n        i += numVertices * size;\n      } else {\n        attribute._normalizeValue(objectValue, value, i);\n        i += size;\n      }\n    }\n  }\n  /* eslint-enable max-depth, max-statements */\n\n  // Validate deck.gl level fields\n  _validateAttributeUpdaters() {\n    const {settings} = this;\n\n    // Check that 'update' is a valid function\n    const hasUpdater = settings.noAlloc || typeof settings.update === 'function';\n    if (!hasUpdater) {\n      throw new Error(`Attribute ${this.id} missing update or accessor`);\n    }\n  }\n\n  // check that the first few elements of the attribute are reasonable\n  /* eslint-disable no-fallthrough */\n  _checkAttributeArray() {\n    const {value} = this;\n    const limit = Math.min(4, this.size);\n    if (value && value.length >= limit) {\n      let valid = true;\n      switch (limit) {\n        case 4:\n          valid = valid && Number.isFinite(value[3]);\n        case 3:\n          valid = valid && Number.isFinite(value[2]);\n        case 2:\n          valid = valid && Number.isFinite(value[1]);\n        case 1:\n          valid = valid && Number.isFinite(value[0]);\n          break;\n        default:\n          valid = false;\n      }\n\n      if (!valid) {\n        throw new Error(`Illegal attribute generated for ${this.id}`);\n      }\n    }\n  }\n  /* eslint-enable no-fallthrough */\n}\n","import deckLog from '../utils/log';\nimport {getLoggers} from './loggers';\n\n/* debug utility */\n\nlet loggers = {};\n\n// Conditionally load default loggers in development mode\n// eslint-disable-next-line\nif (process.env.NODE_ENV !== 'production') {\n  loggers = getLoggers(deckLog);\n}\n\nexport function register(handlers) {\n  loggers = handlers;\n}\n\nexport default function debug(eventType) {\n  if (deckLog.level > 0 && loggers[eventType]) {\n    // Not using ...args to defeat perf hit from array construction\n    loggers[eventType].call(...arguments);\n  }\n}\n","import GL from '@luma.gl/constants';\nimport {Buffer, Transform} from '@luma.gl/core';\nimport Attribute from '../lib/attribute/attribute';\nimport {\n  padBuffer,\n  getAttributeTypeFromSize,\n  getSourceBufferAttribute,\n  getAttributeBufferLength,\n  cycleBuffers\n} from '../lib/attribute/attribute-transition-utils';\nimport Transition from './transition';\n\nexport default class GPUInterpolationTransition {\n  constructor({gl, attribute, timeline}) {\n    this.gl = gl;\n    this.type = 'interpolation';\n    this.transition = new Transition(timeline);\n    this.attribute = attribute;\n    // this is the attribute we return during the transition - note: if it is a constant\n    // attribute, it will be converted and returned as a regular attribute\n    // `attribute.userData` is the original options passed when constructing the attribute.\n    // This ensures that we set the proper `doublePrecision` flag and shader attributes.\n    this.attributeInTransition = new Attribute(gl, attribute.settings);\n    this.currentStartIndices = attribute.startIndices;\n    // storing currentLength because this.buffer may be larger than the actual length we want to use\n    // this is because we only reallocate buffers when they grow, not when they shrink,\n    // due to performance costs\n    this.currentLength = 0;\n    this.transform = getTransform(gl, attribute);\n    const bufferOpts = {\n      byteLength: 0,\n      usage: GL.DYNAMIC_COPY\n    };\n    this.buffers = [\n      new Buffer(gl, bufferOpts), // from\n      new Buffer(gl, bufferOpts) // current\n    ];\n  }\n\n  get inProgress() {\n    return this.transition.inProgress;\n  }\n\n  // this is called when an attribute's values have changed and\n  // we need to start animating towards the new values\n  // this also correctly resizes / pads the transform's buffers\n  // in case the attribute's buffer has changed in length or in\n  // startIndices\n  start(transitionSettings, numInstances) {\n    if (transitionSettings.duration <= 0) {\n      this.transition.cancel();\n      return;\n    }\n\n    const {gl, buffers, attribute} = this;\n    // Alternate between two buffers when new transitions start.\n    // Last destination buffer is used as an attribute (from state),\n    // And the other buffer is now the current buffer.\n    cycleBuffers(buffers);\n\n    const padBufferOpts = {\n      numInstances,\n      attribute,\n      fromLength: this.currentLength,\n      fromStartIndices: this.currentStartIndices,\n      getData: transitionSettings.enter\n    };\n\n    for (const buffer of buffers) {\n      padBuffer({buffer, ...padBufferOpts});\n    }\n\n    this.currentStartIndices = attribute.startIndices;\n    this.currentLength = getAttributeBufferLength(attribute, numInstances);\n    this.attributeInTransition.update({\n      buffer: buffers[1],\n      // Hack: Float64Array is required for double-precision attributes\n      // to generate correct shader attributes\n      value: attribute.value\n    });\n\n    this.transition.start(transitionSettings);\n\n    this.transform.update({\n      elementCount: Math.floor(this.currentLength / attribute.size),\n      sourceBuffers: {\n        aFrom: buffers[0],\n        aTo: getSourceBufferAttribute(gl, attribute)\n      },\n      feedbackBuffers: {\n        vCurrent: buffers[1]\n      }\n    });\n  }\n\n  update() {\n    const updated = this.transition.update();\n    if (updated) {\n      const {\n        time,\n        settings: {duration, easing}\n      } = this.transition;\n      const t = easing(time / duration);\n      this.transform.run({\n        uniforms: {time: t}\n      });\n    }\n    return updated;\n  }\n\n  cancel() {\n    this.transition.cancel();\n    this.transform.delete();\n    while (this.buffers.length) {\n      this.buffers.pop().delete();\n    }\n  }\n}\n\nconst vs = `\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nuniform float time;\nattribute ATTRIBUTE_TYPE aFrom;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, time);\n  gl_Position = vec4(0.0);\n}\n`;\n\nfunction getTransform(gl, attribute) {\n  const attributeType = getAttributeTypeFromSize(attribute.size);\n  return new Transform(gl, {\n    vs,\n    defines: {\n      ATTRIBUTE_TYPE: attributeType\n    },\n    varyings: ['vCurrent']\n  });\n}\n","import {Transform} from '@luma.gl/core';\nimport GPUInterpolationTransition from '../../transitions/gpu-interpolation-transition';\nimport GPUSpringTransition from '../../transitions/gpu-spring-transition';\nimport log from '../../utils/log';\n\nconst TRANSITION_TYPES = {\n  interpolation: GPUInterpolationTransition,\n  spring: GPUSpringTransition\n};\n\nexport default class AttributeTransitionManager {\n  constructor(gl, {id, timeline}) {\n    this.id = id;\n    this.gl = gl;\n    this.timeline = timeline;\n\n    this.transitions = {};\n    this.needsRedraw = false;\n    this.numInstances = 1;\n\n    if (Transform.isSupported(gl)) {\n      this.isSupported = true;\n    } else if (gl) {\n      // This class may be instantiated without a WebGL context (e.g. web worker)\n      log.warn('WebGL2 not supported by this browser. Transition animation is disabled.')();\n    }\n  }\n\n  finalize() {\n    for (const attributeName in this.transitions) {\n      this._removeTransition(attributeName);\n    }\n  }\n\n  /* Public methods */\n\n  // Called when attribute manager updates\n  // Check the latest attributes for updates.\n  update({attributes, transitions = {}, numInstances}) {\n    // Transform class will crash if elementCount is 0\n    this.numInstances = numInstances || 1;\n\n    if (!this.isSupported) {\n      return;\n    }\n\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      const settings = attribute.getTransitionSetting(transitions);\n\n      // this attribute might not support transitions?\n      if (!settings) continue; // eslint-disable-line no-continue\n      this._updateAttribute(attributeName, attribute, settings);\n    }\n\n    for (const attributeName in this.transitions) {\n      const attribute = attributes[attributeName];\n      if (!attribute || !attribute.getTransitionSetting(transitions)) {\n        // Animated attribute has been removed\n        this._removeTransition(attributeName);\n      }\n    }\n  }\n\n  // Returns `true` if attribute is transition-enabled\n  hasAttribute(attributeName) {\n    const transition = this.transitions[attributeName];\n    return transition && transition.inProgress;\n  }\n\n  // Get all the animated attributes\n  getAttributes() {\n    const animatedAttributes = {};\n\n    for (const attributeName in this.transitions) {\n      const transition = this.transitions[attributeName];\n      if (transition.inProgress) {\n        animatedAttributes[attributeName] = transition.attributeInTransition;\n      }\n    }\n\n    return animatedAttributes;\n  }\n\n  /* eslint-disable max-statements */\n  // Called every render cycle, run transform feedback\n  // Returns `true` if anything changes\n  run() {\n    if (!this.isSupported || this.numInstances === 0) {\n      return false;\n    }\n\n    for (const attributeName in this.transitions) {\n      const updated = this.transitions[attributeName].update();\n      if (updated) {\n        this.needsRedraw = true;\n      }\n    }\n\n    const needsRedraw = this.needsRedraw;\n    this.needsRedraw = false;\n    return needsRedraw;\n  }\n  /* eslint-enable max-statements */\n\n  /* Private methods */\n  _removeTransition(attributeName) {\n    this.transitions[attributeName].cancel();\n    delete this.transitions[attributeName];\n  }\n\n  // Check an attributes for updates\n  // Returns a transition object if a new transition is triggered.\n  _updateAttribute(attributeName, attribute, settings) {\n    const transition = this.transitions[attributeName];\n    // an attribute can change transition type when it updates\n    // let's remove the transition when that happens so we can create the new transition type\n    // TODO: when switching transition types, make sure to carry over the attribute's\n    // previous buffers, currentLength, startIndices, etc, to be used as the starting point\n    // for the next transition\n    let isNew = !transition || transition.type !== settings.type;\n    if (isNew) {\n      if (transition) {\n        this._removeTransition(attributeName);\n      }\n\n      const TransitionType = TRANSITION_TYPES[settings.type];\n      if (TransitionType) {\n        this.transitions[attributeName] = new TransitionType({\n          attribute,\n          timeline: this.timeline,\n          gl: this.gl\n        });\n      } else {\n        log.error(`unsupported transition type '${settings.type}'`)();\n        isNew = false;\n      }\n    }\n\n    if (isNew || attribute.needsRedraw()) {\n      this.needsRedraw = true;\n      this.transitions[attributeName].start(settings, this.numInstances);\n    }\n  }\n}\n","/* eslint-disable complexity, max-statements, max-params */\nimport GL from '@luma.gl/constants';\nimport {Buffer, Transform, Framebuffer, Texture2D, readPixelsToArray} from '@luma.gl/core';\nimport {\n  padBuffer,\n  getAttributeTypeFromSize,\n  getSourceBufferAttribute,\n  getAttributeBufferLength,\n  cycleBuffers\n} from '../lib/attribute/attribute-transition-utils';\nimport Attribute from '../lib/attribute/attribute';\nimport Transition from './transition';\n\nexport default class GPUSpringTransition {\n  constructor({gl, attribute, timeline}) {\n    this.gl = gl;\n    this.type = 'spring';\n    this.transition = new Transition(timeline);\n    this.attribute = attribute;\n    // this is the attribute we return during the transition - note: if it is a constant\n    // attribute, it will be converted and returned as a regular attribute\n    // `attribute.userData` is the original options passed when constructing the attribute.\n    // This ensures that we set the proper `doublePrecision` flag and shader attributes.\n    this.attributeInTransition = new Attribute(\n      gl,\n      Object.assign({}, attribute.settings, {normalized: false})\n    );\n    this.currentStartIndices = attribute.startIndices;\n    // storing currentLength because this.buffer may be larger than the actual length we want to use\n    // this is because we only reallocate buffers when they grow, not when they shrink,\n    // due to performance costs\n    this.currentLength = 0;\n    this.texture = getTexture(gl);\n    this.framebuffer = getFramebuffer(gl, this.texture);\n    this.transform = getTransform(gl, attribute, this.framebuffer);\n    const bufferOpts = {\n      byteLength: 0,\n      usage: GL.DYNAMIC_COPY\n    };\n    this.buffers = [\n      new Buffer(gl, bufferOpts), // previous\n      new Buffer(gl, bufferOpts), // current\n      new Buffer(gl, bufferOpts) // next\n    ];\n  }\n\n  get inProgress() {\n    return this.transition.inProgress;\n  }\n\n  // this is called when an attribute's values have changed and\n  // we need to start animating towards the new values\n  // this also correctly resizes / pads the transform's buffers\n  // in case the attribute's buffer has changed in length or in\n  // startIndices\n  start(transitionSettings, numInstances) {\n    const {gl, buffers, attribute} = this;\n    const padBufferOpts = {\n      numInstances,\n      attribute,\n      fromLength: this.currentLength,\n      fromStartIndices: this.currentStartIndices,\n      getData: transitionSettings.enter\n    };\n\n    for (const buffer of buffers) {\n      padBuffer({buffer, ...padBufferOpts});\n    }\n\n    this.currentStartIndices = attribute.startIndices;\n    this.currentLength = getAttributeBufferLength(attribute, numInstances);\n    this.attributeInTransition.update({\n      buffer: buffers[1],\n      // Hack: Float64Array is required for double-precision attributes\n      // to generate correct shader attributes\n      value: attribute.value\n    });\n\n    // when an attribute changes values, a new transition is started. These\n    // are properties that we have to store on this.transition but can change\n    // when new transitions are started, so we have to keep them up-to-date.\n    // this.transition.start() takes the latest settings and updates them.\n    this.transition.start(transitionSettings);\n\n    this.transform.update({\n      elementCount: Math.floor(this.currentLength / attribute.size),\n      sourceBuffers: {\n        aTo: getSourceBufferAttribute(gl, attribute)\n      }\n    });\n  }\n\n  update() {\n    const {buffers, transform, framebuffer, transition} = this;\n    const updated = transition.update();\n    if (!updated) {\n      return false;\n    }\n\n    transform.update({\n      sourceBuffers: {\n        aPrev: buffers[0],\n        aCur: buffers[1]\n      },\n      feedbackBuffers: {\n        vNext: buffers[2]\n      }\n    });\n    transform.run({\n      framebuffer,\n      discard: false,\n      clearRenderTarget: true,\n      uniforms: {\n        stiffness: transition.settings.stiffness,\n        damping: transition.settings.damping\n      },\n      parameters: {\n        depthTest: false,\n        blend: true,\n        viewport: [0, 0, 1, 1],\n        blendFunc: [GL.ONE, GL.ONE],\n        blendEquation: [GL.MAX, GL.MAX]\n      }\n    });\n\n    cycleBuffers(buffers);\n    this.attributeInTransition.update({\n      buffer: buffers[1],\n      // Hack: Float64Array is required for double-precision attributes\n      // to generate correct shader attributes\n      value: this.attribute.value\n    });\n\n    const isTransitioning = readPixelsToArray(framebuffer)[0] > 0;\n\n    if (!isTransitioning) {\n      transition.end();\n    }\n\n    return true;\n  }\n\n  cancel() {\n    this.transition.cancel();\n    this.transform.delete();\n    while (this.buffers.length) {\n      this.buffers.pop().delete();\n    }\n    this.texture.delete();\n    this.texture = null;\n    this.framebuffer.delete();\n    this.framebuffer = null;\n  }\n}\n\nfunction getTransform(gl, attribute, framebuffer) {\n  const attributeType = getAttributeTypeFromSize(attribute.size);\n  return new Transform(gl, {\n    framebuffer,\n    vs: `\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nuniform float stiffness;\nuniform float damping;\nattribute ATTRIBUTE_TYPE aPrev;\nattribute ATTRIBUTE_TYPE aCur;\nattribute ATTRIBUTE_TYPE aTo;\nvarying ATTRIBUTE_TYPE vNext;\nvarying float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE spring = delta * stiffness;\n  ATTRIBUTE_TYPE damper = velocity * -1.0 * damping;\n  return spring + damper + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n`,\n    fs: `\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nvarying float vIsTransitioningFlag;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  gl_FragColor = vec4(1.0);\n}`,\n    defines: {\n      ATTRIBUTE_TYPE: attributeType\n    },\n    varyings: ['vNext']\n  });\n}\n\nfunction getTexture(gl) {\n  return new Texture2D(gl, {\n    data: new Uint8Array(4),\n    format: GL.RGBA,\n    type: GL.UNSIGNED_BYTE,\n    border: 0,\n    mipmaps: false,\n    dataFormat: GL.RGBA,\n    width: 1,\n    height: 1\n  });\n}\n\nfunction getFramebuffer(gl, texture) {\n  return new Framebuffer(gl, {\n    id: 'spring-transition-is-transitioning-framebuffer',\n    width: 1,\n    height: 1,\n    attachments: {\n      [GL.COLOR_ATTACHMENT0]: texture\n    }\n  });\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable guard-for-in */\nimport Attribute from './attribute';\nimport log from '../../utils/log';\nimport debug from '../../debug';\n\nimport AttributeTransitionManager from './attribute-transition-manager';\n\nconst TRACE_INVALIDATE = 'attributeManager.invalidate';\nconst TRACE_UPDATE_START = 'attributeManager.updateStart';\nconst TRACE_UPDATE_END = 'attributeManager.updateEnd';\nconst TRACE_ATTRIBUTE_UPDATE_START = 'attribute.updateStart';\nconst TRACE_ATTRIBUTE_ALLOCATE = 'attribute.allocate';\nconst TRACE_ATTRIBUTE_UPDATE_END = 'attribute.updateEnd';\n\nexport default class AttributeManager {\n  /**\n   * @classdesc\n   * Automated attribute generation and management. Suitable when a set of\n   * vertex shader attributes are generated by iteration over a data array,\n   * and updates to these attributes are needed either when the data itself\n   * changes, or when other data relevant to the calculations change.\n   *\n   * - First the application registers descriptions of its dynamic vertex\n   *   attributes using AttributeManager.add().\n   * - Then, when any change that affects attributes is detected by the\n   *   application, the app will call AttributeManager.invalidate().\n   * - Finally before it renders, it calls AttributeManager.update() to\n   *   ensure that attributes are automatically rebuilt if anything has been\n   *   invalidated.\n   *\n   * The application provided update functions describe how attributes\n   * should be updated from a data array and are expected to traverse\n   * that data array (or iterable) and fill in the attribute's typed array.\n   *\n   * Note that the attribute manager intentionally does not do advanced\n   * change detection, but instead makes it easy to build such detection\n   * by offering the ability to \"invalidate\" each attribute separately.\n   */\n  constructor(gl, {id = 'attribute-manager', stats, timeline} = {}) {\n    this.id = id;\n    this.gl = gl;\n\n    this.attributes = {};\n\n    this.updateTriggers = {};\n    this.accessors = {};\n    this.needsRedraw = true;\n\n    this.userData = {};\n    this.stats = stats;\n\n    this.attributeTransitionManager = new AttributeTransitionManager(gl, {\n      id: `${id}-transitions`,\n      timeline\n    });\n\n    // For debugging sanity, prevent uninitialized members\n    Object.seal(this);\n  }\n\n  finalize() {\n    for (const attributeName in this.attributes) {\n      this.attributes[attributeName].delete();\n    }\n    this.attributeTransitionManager.finalize();\n  }\n\n  // Returns the redraw flag, optionally clearing it.\n  // Redraw flag will be set if any attributes attributes changed since\n  // flag was last cleared.\n  //\n  // @param {String} [clearRedrawFlags=false] - whether to clear the flag\n  // @return {false|String} - reason a redraw is needed.\n  getNeedsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this.needsRedraw;\n    this.needsRedraw = this.needsRedraw && !opts.clearRedrawFlags;\n    return redraw && this.id;\n  }\n\n  // Sets the redraw flag.\n  // @param {Boolean} redraw=true\n  // @return {AttributeManager} - for chaining\n  setNeedsRedraw(redraw = true) {\n    this.needsRedraw = true;\n    return this;\n  }\n\n  // Adds attributes\n  add(attributes, updaters) {\n    this._add(attributes, updaters);\n  }\n\n  // Adds attributes\n  addInstanced(attributes, updaters) {\n    this._add(attributes, updaters, {instanced: 1});\n  }\n\n  /**\n   * Removes attributes\n   * Takes an array of attribute names and delete them from\n   * the attribute map if they exists\n   *\n   * @example\n   * attributeManager.remove(['position']);\n   *\n   * @param {Object} attributeNameArray - attribute name array (see above)\n   */\n  remove(attributeNameArray) {\n    for (let i = 0; i < attributeNameArray.length; i++) {\n      const name = attributeNameArray[i];\n      if (this.attributes[name] !== undefined) {\n        this.attributes[name].delete();\n        delete this.attributes[name];\n      }\n    }\n  }\n\n  // Marks an attribute for update\n  invalidate(triggerName, dataRange) {\n    const invalidatedAttributes = this._invalidateTrigger(triggerName, dataRange);\n    // For performance tuning\n    debug(TRACE_INVALIDATE, this, triggerName, invalidatedAttributes);\n  }\n\n  invalidateAll(dataRange) {\n    for (const attributeName in this.attributes) {\n      this.attributes[attributeName].setNeedsUpdate(attributeName, dataRange);\n    }\n    // For performance tuning\n    debug(TRACE_INVALIDATE, this, 'all');\n  }\n\n  // Ensure all attribute buffers are updated from props or data.\n  update({\n    data,\n    numInstances,\n    startIndices = null,\n    transitions,\n    props = {},\n    buffers = {},\n    context = {}\n  } = {}) {\n    // keep track of whether some attributes are updated\n    let updated = false;\n\n    debug(TRACE_UPDATE_START, this);\n    if (this.stats) {\n      this.stats.get('Update Attributes').timeStart();\n    }\n\n    for (const attributeName in this.attributes) {\n      const attribute = this.attributes[attributeName];\n      const accessorName = attribute.settings.accessor;\n      attribute.startIndices = startIndices;\n\n      if (props[attributeName]) {\n        log.removed(`props.${attributeName}`, `data.attributes.${attributeName}`)();\n      }\n\n      if (attribute.setExternalBuffer(buffers[attributeName])) {\n        // Step 1: try update attribute directly from external buffers\n      } else if (attribute.setBinaryValue(buffers[accessorName], data.startIndices)) {\n        // Step 2: try set packed value from external typed array\n      } else if (!buffers[accessorName] && attribute.setConstantValue(props[accessorName])) {\n        // Step 3: try set constant value from props\n        // Note: if buffers[accessorName] is supplied, ignore props[accessorName]\n        // This may happen when setBinaryValue falls through to use the auto updater\n      } else if (attribute.needsUpdate()) {\n        // Step 4: update via updater callback\n        updated = true;\n        this._updateAttribute({\n          attribute,\n          numInstances,\n          data,\n          props,\n          context\n        });\n      }\n\n      this.needsRedraw |= attribute.needsRedraw();\n    }\n\n    if (updated) {\n      // Only initiate alloc/update (and logging) if actually needed\n      debug(TRACE_UPDATE_END, this, numInstances);\n    }\n\n    if (this.stats) {\n      this.stats.get('Update Attributes').timeEnd();\n    }\n\n    this.attributeTransitionManager.update({\n      attributes: this.attributes,\n      numInstances,\n      transitions\n    });\n  }\n\n  // Update attribute transition to the current timestamp\n  // Returns `true` if any transition is in progress\n  updateTransition() {\n    const {attributeTransitionManager} = this;\n    const transitionUpdated = attributeTransitionManager.run();\n    this.needsRedraw = this.needsRedraw || transitionUpdated;\n    return transitionUpdated;\n  }\n\n  /**\n   * Returns all attribute descriptors\n   * Note: Format matches luma.gl Model/Program.setAttributes()\n   * @return {Object} attributes - descriptors\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * Returns changed attribute descriptors\n   * This indicates which WebGLBuffers need to be updated\n   * @return {Object} attributes - descriptors\n   */\n  getChangedAttributes(opts = {clearChangedFlags: false}) {\n    const {attributes, attributeTransitionManager} = this;\n\n    const changedAttributes = Object.assign({}, attributeTransitionManager.getAttributes());\n\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n      if (attribute.needsRedraw(opts) && !attributeTransitionManager.hasAttribute(attributeName)) {\n        changedAttributes[attributeName] = attribute;\n      }\n    }\n\n    return changedAttributes;\n  }\n\n  // Returns shader attributes\n  getShaderAttributes(attributes, excludeAttributes = {}) {\n    if (!attributes) {\n      attributes = this.getAttributes();\n    }\n    const shaderAttributes = {};\n    for (const attributeName in attributes) {\n      if (!excludeAttributes[attributeName]) {\n        Object.assign(shaderAttributes, attributes[attributeName].getShaderAttributes());\n      }\n    }\n    return shaderAttributes;\n  }\n\n  // PROTECTED METHODS - Only to be used by collaborating classes, not by apps\n\n  // Returns object containing all accessors as keys, with non-null values\n  // @return {Object} - accessors object\n  getAccessors() {\n    return this.updateTriggers;\n  }\n\n  // PRIVATE METHODS\n\n  // Used to register an attribute\n  _add(attributes, updaters, extraProps = {}) {\n    if (updaters) {\n      log.warn('AttributeManager.add({updaters}) - updater map no longer supported')();\n    }\n\n    const newAttributes = {};\n\n    for (const attributeName in attributes) {\n      const attribute = attributes[attributeName];\n\n      // Initialize the attribute descriptor, with WebGL and metadata fields\n      const newAttribute = this._createAttribute(attributeName, attribute, extraProps);\n\n      newAttributes[attributeName] = newAttribute;\n    }\n\n    Object.assign(this.attributes, newAttributes);\n\n    this._mapUpdateTriggersToAttributes();\n  }\n  /* eslint-enable max-statements */\n\n  _createAttribute(name, attribute, extraProps) {\n    const props = {\n      id: name,\n      // Luma fields\n      constant: attribute.constant || false,\n      isIndexed: attribute.isIndexed || attribute.elements,\n      size: (attribute.elements && 1) || attribute.size,\n      value: attribute.value || null,\n      divisor: attribute.instanced || extraProps.instanced ? 1 : attribute.divisor\n    };\n\n    return new Attribute(this.gl, Object.assign({}, attribute, props));\n  }\n\n  // build updateTrigger name to attribute name mapping\n  _mapUpdateTriggersToAttributes() {\n    const triggers = {};\n\n    for (const attributeName in this.attributes) {\n      const attribute = this.attributes[attributeName];\n      attribute.getUpdateTriggers().forEach(triggerName => {\n        if (!triggers[triggerName]) {\n          triggers[triggerName] = [];\n        }\n        triggers[triggerName].push(attributeName);\n      });\n    }\n\n    this.updateTriggers = triggers;\n  }\n\n  _invalidateTrigger(triggerName, dataRange) {\n    const {attributes, updateTriggers} = this;\n    const invalidatedAttributes = updateTriggers[triggerName];\n\n    if (invalidatedAttributes) {\n      invalidatedAttributes.forEach(name => {\n        const attribute = attributes[name];\n        if (attribute) {\n          attribute.setNeedsUpdate(attribute.id, dataRange);\n        }\n      });\n    }\n    return invalidatedAttributes;\n  }\n\n  _updateAttribute(opts) {\n    const {attribute, numInstances} = opts;\n    debug(TRACE_ATTRIBUTE_UPDATE_START, attribute);\n\n    if (attribute.allocate(numInstances)) {\n      debug(TRACE_ATTRIBUTE_ALLOCATE, attribute, numInstances);\n    }\n\n    // Calls update on any buffers that need update\n    const updated = attribute.updateBuffer(opts);\n    if (updated) {\n      this.needsRedraw = true;\n      debug(TRACE_ATTRIBUTE_UPDATE_END, attribute, numInstances);\n    }\n  }\n}\n","import {lerp} from 'math.gl';\nimport Transition from './transition';\n\nexport default class CPUInterpolationTransition extends Transition {\n  get value() {\n    return this._value;\n  }\n\n  _onUpdate() {\n    const {\n      time,\n      settings: {fromValue, toValue, duration, easing}\n    } = this;\n    const t = easing(time / duration);\n    this._value = lerp(fromValue, toValue, t);\n  }\n}\n","import Transition from './transition';\n\nconst EPSILON = 1e-5;\n\n/*\n * Calculate the next value in the spring transition\n * @param prev {Number} - previous value\n * @param cur {Number} - current value\n * @param dest {Number} - destination value\n * @param damping {Number}\n * @param stiffness {Number}\n */\nfunction updateSpringElement(prev, cur, dest, damping, stiffness) {\n  const velocity = cur - prev;\n  const delta = dest - cur;\n  const spring = delta * stiffness;\n  const damper = -velocity * damping;\n  return spring + damper + velocity + cur;\n}\n\n/*\n * Calculate the next value in the spring transition\n * @param prev {Number|Array} - previous value\n * @param cur {Number|Array} - current value\n * @param dest {Number|Array} - destination value\n * @param damping {Number}\n * @param stiffness {Number}\n */\nfunction updateSpring(prev, cur, dest, damping, stiffness) {\n  if (Array.isArray(dest)) {\n    const next = [];\n    for (let i = 0; i < dest.length; i++) {\n      next[i] = updateSpringElement(prev[i], cur[i], dest[i], damping, stiffness);\n    }\n    return next;\n  }\n  return updateSpringElement(prev, cur, dest, damping, stiffness);\n}\n\n/*\n * Calculate the distance between two numbers or two vectors\n */\nfunction distance(value1, value2) {\n  if (Array.isArray(value1)) {\n    let distanceSquare = 0;\n    for (let i = 0; i < value1.length; i++) {\n      const d = value1[i] - value2[i];\n      distanceSquare += d * d;\n    }\n    return Math.sqrt(distanceSquare);\n  }\n  return Math.abs(value1 - value2);\n}\n\nexport default class CPUSpringTransition extends Transition {\n  get value() {\n    return this._currValue;\n  }\n\n  _onUpdate() {\n    // TODO - use timeline\n    // const {time} = this;\n\n    const {fromValue, toValue, damping, stiffness} = this.settings;\n    const {_prevValue = fromValue, _currValue = fromValue} = this;\n    let nextValue = updateSpring(_prevValue, _currValue, toValue, damping, stiffness);\n    const delta = distance(nextValue, toValue);\n    const velocity = distance(nextValue, _currValue);\n\n    if (delta < EPSILON && velocity < EPSILON) {\n      nextValue = toValue;\n      this.end();\n    }\n\n    this._prevValue = _currValue;\n    this._currValue = nextValue;\n  }\n}\n","import {normalizeTransitionSettings} from './attribute/attribute-transition-utils';\nimport CPUInterpolationTransition from '../transitions/cpu-interpolation-transition';\nimport CPUSpringTransition from '../transitions/cpu-spring-transition';\nimport log from '../utils/log';\n\nconst TRANSITION_TYPES = {\n  interpolation: CPUInterpolationTransition,\n  spring: CPUSpringTransition\n};\n\nexport default class UniformTransitionManager {\n  constructor(timeline) {\n    this.transitions = new Map();\n    this.timeline = timeline;\n  }\n\n  get active() {\n    return this.transitions.size > 0;\n  }\n\n  add(key, fromValue, toValue, settings) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      const transition = transitions.get(key);\n      // value may not be available if `update()` has not been called. Fallback to `fromValue`\n      const {value = transition.settings.fromValue} = transition;\n      // start from interrupted position\n      fromValue = value;\n      this.remove(key);\n    }\n\n    settings = normalizeTransitionSettings(settings);\n    if (!settings) {\n      return;\n    }\n\n    const TransitionType = TRANSITION_TYPES[settings.type];\n    if (!TransitionType) {\n      log.error(`unsupported transition type '${settings.type}'`)();\n      return;\n    }\n    const transition = new TransitionType(this.timeline);\n    transition.start({\n      ...settings,\n      fromValue,\n      toValue\n    });\n    transitions.set(key, transition);\n  }\n\n  remove(key) {\n    const {transitions} = this;\n    if (transitions.has(key)) {\n      transitions.get(key).cancel();\n      transitions.delete(key);\n    }\n  }\n\n  update() {\n    const propsInTransition = {};\n\n    for (const [key, transition] of this.transitions) {\n      transition.update();\n      propsInTransition[key] = transition.value;\n      if (!transition.inProgress) {\n        // transition ended\n        this.remove(key);\n      }\n    }\n\n    return propsInTransition;\n  }\n\n  clear() {\n    for (const key of this.transitions.keys()) {\n      this.remove(key);\n    }\n  }\n}\n","export const LIFECYCLE = {\n  NO_STATE: 'Awaiting state',\n  MATCHED: 'Matched. State transferred from previous layer',\n  INITIALIZED: 'Initialized',\n  AWAITING_GC: 'Discarded. Awaiting garbage collection',\n  AWAITING_FINALIZATION: 'No longer matched. Awaiting garbage collection',\n  FINALIZED: 'Finalized! Awaiting garbage collection'\n};\n\n/* Secret props keys */\n// Symbols are non-enumerable by default, does not show in for...in or Object.keys\n// but are copied with Object.assign ¯\\_(ツ)_/¯\n// Supported everywhere except IE11, can be polyfilled with core-js\nexport const PROP_SYMBOLS = {\n  COMPONENT: Symbol.for('component'),\n  ASYNC_DEFAULTS: Symbol.for('asyncPropDefaults'),\n  ASYNC_ORIGINAL: Symbol.for('asyncPropOriginal'),\n  ASYNC_RESOLVED: Symbol.for('asyncPropResolved')\n};\n","import {PROP_SYMBOLS} from './constants';\n\nconst {COMPONENT} = PROP_SYMBOLS;\n\nexport function validateProps(props) {\n  const propTypes = getPropTypes(props);\n\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {validate} = propType;\n    if (validate && !validate(props[propName], propType)) {\n      throw new Error(`Invalid prop ${propName}: ${props[propName]}`);\n    }\n  }\n}\n\n// Returns an object with \"change flags\", either false or strings indicating reason for change\nexport function diffProps(props, oldProps) {\n  // First check if any props have changed (ignore props that will be examined separately)\n  const propsChangedReason = compareProps({\n    newProps: props,\n    oldProps,\n    propTypes: getPropTypes(props),\n    ignoreProps: {data: null, updateTriggers: null, extensions: null, transitions: null}\n  });\n\n  // Now check if any data related props have changed\n  const dataChangedReason = diffDataProps(props, oldProps);\n\n  // Check update triggers to determine if any attributes need regeneration\n  // Note - if data has changed, all attributes will need regeneration, so skip this step\n  let updateTriggersChangedReason = false;\n  if (!dataChangedReason) {\n    updateTriggersChangedReason = diffUpdateTriggers(props, oldProps);\n  }\n\n  return {\n    dataChanged: dataChangedReason,\n    propsChanged: propsChangedReason,\n    updateTriggersChanged: updateTriggersChangedReason,\n    extensionsChanged: diffExtensions(props, oldProps),\n    transitionsChanged: diffTransitions(props, oldProps)\n  };\n}\n\nfunction diffTransitions(props, oldProps) {\n  if (!props.transitions) {\n    return null;\n  }\n  const result = {};\n  const propTypes = getPropTypes(props);\n\n  for (const key in props.transitions) {\n    const propType = propTypes[key];\n    const type = propType && propType.type;\n    const isTransitionable = type === 'number' || type === 'color' || type === 'array';\n    if (isTransitionable && comparePropValues(props[key], oldProps[key], propType)) {\n      result[key] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * @param {Object} opt.oldProps - object with old key/value pairs\n * @param {Object} opt.newProps - object with new key/value pairs\n * @param {Object} opt.ignoreProps={} - object, keys that should not be compared\n * @returns {null|String} - null when values of all keys are strictly equal.\n *   if unequal, returns a string explaining what changed.\n */\n/* eslint-disable max-statements, max-depth, complexity */\n/*\n * Note: for better performance, this function assumes that both oldProps and newProps\n   inherit the same prototype (defaultProps). That is, if neither object contains own\n   property <key>, assume `oldProps.<key>` and `newProps.<key>` are equal.\n */\nexport function compareProps({\n  newProps,\n  oldProps,\n  ignoreProps = {},\n  propTypes = {},\n  triggerName = 'props'\n} = {}) {\n  // shallow equality => deep equality\n  if (oldProps === newProps) {\n    return null;\n  }\n\n  // TODO - do we need these checks? Should never happen...\n  if (typeof newProps !== 'object' || newProps === null) {\n    return `${triggerName} changed shallowly`;\n  }\n\n  if (typeof oldProps !== 'object' || oldProps === null) {\n    return `${triggerName} changed shallowly`;\n  }\n\n  // Compare explicitly defined new props against old/default values\n  for (const key of Object.keys(newProps)) {\n    if (!(key in ignoreProps)) {\n      if (!(key in oldProps)) {\n        return `${triggerName}.${key} added`;\n      }\n      const changed = comparePropValues(newProps[key], oldProps[key], propTypes[key]);\n      if (changed) {\n        return `${triggerName}.${key} ${changed}`;\n      }\n    }\n  }\n\n  // Test if any old props have been dropped\n  for (const key of Object.keys(oldProps)) {\n    if (!(key in ignoreProps)) {\n      if (!(key in newProps)) {\n        return `${triggerName}.${key} dropped`;\n      }\n      if (!Object.hasOwnProperty.call(newProps, key)) {\n        // Compare dropped old prop against default value\n        const changed = comparePropValues(newProps[key], oldProps[key], propTypes[key]);\n        if (changed) {\n          return `${triggerName}.${key} ${changed}`;\n        }\n      }\n    }\n  }\n\n  return null;\n}\n/* eslint-enable max-statements, max-depth, complexity */\n\n// HELPERS\nfunction comparePropValues(newProp, oldProp, propType) {\n  // If prop type has an equal function, invoke it\n  let equal = propType && propType.equal;\n  if (equal && !equal(newProp, oldProp, propType)) {\n    return 'changed deeply';\n  }\n\n  if (!equal) {\n    // If object has an equals function, invoke it\n    equal = newProp && oldProp && newProp.equals;\n    if (equal && !equal.call(newProp, oldProp)) {\n      return 'changed deeply';\n    }\n  }\n\n  if (!equal && oldProp !== newProp) {\n    return 'changed shallowly';\n  }\n\n  return null;\n}\n\n// The comparison of the data prop requires special handling\n// the dataComparator should be used if supplied\nfunction diffDataProps(props, oldProps) {\n  if (oldProps === null) {\n    return 'oldProps is null, initial diff';\n  }\n\n  let dataChanged = null;\n  // Support optional app defined comparison of data\n  const {dataComparator, _dataDiff} = props;\n  if (dataComparator) {\n    if (!dataComparator(props.data, oldProps.data)) {\n      dataChanged = 'Data comparator detected a change';\n    }\n    // Otherwise, do a shallow equal on props\n  } else if (props.data !== oldProps.data) {\n    dataChanged = 'A new data container was supplied';\n  }\n  if (dataChanged && _dataDiff) {\n    dataChanged = _dataDiff(props.data, oldProps.data) || dataChanged;\n  }\n\n  return dataChanged;\n}\n\n// Checks if any update triggers have changed\n// also calls callback to invalidate attributes accordingly.\nfunction diffUpdateTriggers(props, oldProps) {\n  if (oldProps === null) {\n    return 'oldProps is null, initial diff';\n  }\n\n  // If the 'all' updateTrigger fires, ignore testing others\n  if ('all' in props.updateTriggers) {\n    const diffReason = diffUpdateTrigger(props, oldProps, 'all');\n    if (diffReason) {\n      return {all: true};\n    }\n  }\n\n  const triggerChanged = {};\n  let reason = false;\n  // If the 'all' updateTrigger didn't fire, need to check all others\n  for (const triggerName in props.updateTriggers) {\n    if (triggerName !== 'all') {\n      const diffReason = diffUpdateTrigger(props, oldProps, triggerName);\n      if (diffReason) {\n        triggerChanged[triggerName] = true;\n        reason = triggerChanged;\n      }\n    }\n  }\n\n  return reason;\n}\n\n// Returns true if any extensions have changed\nfunction diffExtensions(props, oldProps) {\n  if (oldProps === null) {\n    return 'oldProps is null, initial diff';\n  }\n\n  const oldExtensions = oldProps.extensions;\n  const {extensions} = props;\n\n  if (extensions === oldExtensions) {\n    return false;\n  }\n  if (extensions.length !== oldExtensions.length) {\n    return true;\n  }\n  for (let i = 0; i < extensions.length; i++) {\n    if (!extensions[i].equals(oldExtensions[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction diffUpdateTrigger(props, oldProps, triggerName) {\n  let newTriggers = props.updateTriggers[triggerName];\n  newTriggers = newTriggers === undefined || newTriggers === null ? {} : newTriggers;\n  let oldTriggers = oldProps.updateTriggers[triggerName];\n  oldTriggers = oldTriggers === undefined || oldTriggers === null ? {} : oldTriggers;\n  const diffReason = compareProps({\n    oldProps: oldTriggers,\n    newProps: newTriggers,\n    triggerName\n  });\n  return diffReason;\n}\n\nfunction getPropTypes(props) {\n  const layer = props[COMPONENT];\n  const LayerType = layer && layer.constructor;\n  return LayerType ? LayerType._propTypes : {};\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst ERR_NOT_OBJECT = 'count(): argument not an object';\nconst ERR_NOT_CONTAINER = 'count(): argument not a container';\n\n/**\n * Deduces numer of elements in a JavaScript container.\n * - Auto-deduction for ES6 containers that define a count() method\n * - Auto-deduction for ES6 containers that define a size member\n * - Auto-deduction for Classic Arrays via the built-in length attribute\n * - Also handles objects, although note that this an O(N) operation\n */\nexport function count(container) {\n  if (!isObject(container)) {\n    throw new Error(ERR_NOT_OBJECT);\n  }\n\n  // Check if ES6 collection \"count\" function is available\n  if (typeof container.count === 'function') {\n    return container.count();\n  }\n\n  // Check if ES6 collection \"size\" attribute is set\n  if (Number.isFinite(container.size)) {\n    return container.size;\n  }\n\n  // Check if array length attribute is set\n  // Note: checking this last since some ES6 collections (Immutable.js)\n  // emit profuse warnings when trying to access `length` attribute\n  if (Number.isFinite(container.length)) {\n    return container.length;\n  }\n\n  // Note that getting the count of an object is O(N)\n  if (isPlainObject(container)) {\n    return Object.keys(container).length;\n  }\n\n  throw new Error(ERR_NOT_CONTAINER);\n}\n\n/**\n * Checks if argument is a plain object (not a class or array etc)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a plain JavaScript object\n */\nfunction isPlainObject(value) {\n  return value !== null && typeof value === 'object' && value.constructor === Object;\n}\n\n/**\n * Checks if argument is an indexable object (not a primitive value, nor null)\n * @param {*} value - JavaScript value to be tested\n * @return {Boolean} - true if argument is a JavaScript object\n */\nfunction isObject(value) {\n  return value !== null && typeof value === 'object';\n}\n","function isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param {function} compute - the function to be memoized\n */\nexport default function memoize(compute) {\n  let cachedArgs = {};\n  let cachedResult;\n\n  return args => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Merge two luma.gl shader descriptors\nexport function mergeShaders(target, source) {\n  if (!source) {\n    return target;\n  }\n  const result = Object.assign({}, target, source);\n\n  if ('defines' in source) {\n    result.defines = Object.assign({}, target.defines, source.defines);\n  }\n  if ('modules' in source) {\n    result.modules = (target.modules || []).concat(source.modules);\n\n    // Hack: prject32 and project64 cannot co-exist\n    if (source.modules.some(module => module.name === 'project64')) {\n      const index = result.modules.findIndex(module => module.name === 'project32');\n      if (index >= 0) {\n        result.modules.splice(index, 1);\n      }\n    }\n  }\n  if ('inject' in source) {\n    if (!target.inject) {\n      result.inject = source.inject;\n    } else {\n      const mergedInjection = {...target.inject};\n      for (const key in source.inject) {\n        mergedInjection[key] = (mergedInjection[key] || '') + source.inject[key];\n      }\n      result.inject = mergedInjection;\n    }\n  }\n  return result;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable complexity */\n\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec4 from 'gl-matrix/vec4';\n\nimport {COORDINATE_SYSTEM, PROJECTION_MODE} from '../../lib/constants';\n\nimport memoize from '../../utils/memoize';\nimport assert from '../../utils/assert';\n\n// To quickly set a vector to zero\nconst ZERO_VECTOR = [0, 0, 0, 0];\n// 4x4 matrix that drops 4th component of vector\nconst VECTOR_TO_POINT_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\nconst IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nconst DEFAULT_PIXELS_PER_UNIT2 = [0, 0, 0];\nconst DEFAULT_COORDINATE_ORIGIN = [0, 0, 0];\n\nconst getMemoizedViewportUniforms = memoize(calculateViewportUniforms);\n\nexport function getOffsetOrigin(\n  viewport,\n  coordinateSystem,\n  coordinateOrigin = DEFAULT_COORDINATE_ORIGIN\n) {\n  let shaderCoordinateOrigin = coordinateOrigin;\n  let geospatialOrigin;\n  let offsetMode = true;\n\n  if (\n    coordinateSystem === COORDINATE_SYSTEM.LNGLAT_OFFSETS ||\n    coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS\n  ) {\n    geospatialOrigin = coordinateOrigin;\n  } else {\n    geospatialOrigin = viewport.isGeospatial\n      ? [Math.fround(viewport.longitude), Math.fround(viewport.latitude), 0]\n      : null;\n  }\n\n  switch (viewport.projectionMode) {\n    case PROJECTION_MODE.WEB_MERCATOR:\n      if (\n        coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n        coordinateSystem === COORDINATE_SYSTEM.CARTESIAN\n      ) {\n        offsetMode = false;\n      }\n      break;\n\n    case PROJECTION_MODE.WEB_MERCATOR_AUTO_OFFSET:\n      if (coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n        // viewport center in world space\n        shaderCoordinateOrigin = geospatialOrigin;\n      } else if (coordinateSystem === COORDINATE_SYSTEM.CARTESIAN) {\n        // viewport center in common space\n        shaderCoordinateOrigin = [\n          Math.fround(viewport.center[0]),\n          Math.fround(viewport.center[1]),\n          0\n        ];\n        // Geospatial origin (wgs84) must match shaderCoordinateOrigin (common)\n        geospatialOrigin = viewport.unprojectPosition(shaderCoordinateOrigin);\n        shaderCoordinateOrigin[0] -= coordinateOrigin[0];\n        shaderCoordinateOrigin[1] -= coordinateOrigin[1];\n        shaderCoordinateOrigin[2] -= coordinateOrigin[2];\n      }\n      break;\n\n    case PROJECTION_MODE.IDENTITY:\n      shaderCoordinateOrigin = viewport.position.map(Math.fround);\n      break;\n\n    case PROJECTION_MODE.GLOBE:\n      offsetMode = false;\n      geospatialOrigin = null;\n      break;\n\n    default:\n      // Unknown projection mode\n      offsetMode = false;\n  }\n\n  shaderCoordinateOrigin[2] = shaderCoordinateOrigin[2] || 0;\n\n  return {geospatialOrigin, shaderCoordinateOrigin, offsetMode};\n}\n\n// The code that utilizes Matrix4 does the same calculation as their mat4 counterparts,\n// has lower performance but provides error checking.\nfunction calculateMatrixAndOffset(viewport, coordinateSystem, coordinateOrigin) {\n  const {viewMatrixUncentered, projectionMatrix} = viewport;\n  let {viewMatrix, viewProjectionMatrix} = viewport;\n\n  let projectionCenter = ZERO_VECTOR;\n  let cameraPosCommon = viewport.cameraPosition;\n  const {geospatialOrigin, shaderCoordinateOrigin, offsetMode} = getOffsetOrigin(\n    viewport,\n    coordinateSystem,\n    coordinateOrigin\n  );\n\n  if (offsetMode) {\n    // Calculate transformed projectionCenter (using 64 bit precision JS)\n    // This is the key to offset mode precision\n    // (avoids doing this addition in 32 bit precision in GLSL)\n    const positionCommonSpace = viewport.projectPosition(\n      geospatialOrigin || shaderCoordinateOrigin\n    );\n\n    cameraPosCommon = [\n      cameraPosCommon[0] - positionCommonSpace[0],\n      cameraPosCommon[1] - positionCommonSpace[1],\n      cameraPosCommon[2] - positionCommonSpace[2]\n    ];\n\n    positionCommonSpace[3] = 1;\n\n    // projectionCenter = new Matrix4(viewProjectionMatrix)\n    //   .transformVector([positionPixels[0], positionPixels[1], 0.0, 1.0]);\n    projectionCenter = vec4.transformMat4([], positionCommonSpace, viewProjectionMatrix);\n\n    // Always apply uncentered projection matrix if available (shader adds center)\n    viewMatrix = viewMatrixUncentered || viewMatrix;\n\n    // Zero out 4th coordinate (\"after\" model matrix) - avoids further translations\n    // viewMatrix = new Matrix4(viewMatrixUncentered || viewMatrix)\n    //   .multiplyRight(VECTOR_TO_POINT_MATRIX);\n    viewProjectionMatrix = mat4.multiply([], projectionMatrix, viewMatrix);\n    viewProjectionMatrix = mat4.multiply([], viewProjectionMatrix, VECTOR_TO_POINT_MATRIX);\n  }\n\n  return {\n    viewMatrix,\n    viewProjectionMatrix,\n    projectionCenter,\n    cameraPosCommon,\n    shaderCoordinateOrigin,\n    geospatialOrigin\n  };\n}\n\n/**\n * Returns uniforms for shaders based on current projection\n * includes: projection matrix suitable for shaders\n *\n * TODO - Ensure this works with any viewport, not just WebMercatorViewports\n *\n * @param {WebMercatorViewport} viewport -\n * @return {Float32Array} - 4x4 projection matrix that can be used in shaders\n */\nexport function getUniformsFromViewport({\n  viewport,\n  devicePixelRatio = 1,\n  modelMatrix = null,\n  // Match Layer.defaultProps\n  coordinateSystem = COORDINATE_SYSTEM.DEFAULT,\n  coordinateOrigin,\n  autoWrapLongitude = false,\n  // Deprecated\n  projectionMode,\n  positionOrigin\n} = {}) {\n  assert(viewport);\n\n  if (coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n    coordinateSystem = viewport.isGeospatial\n      ? COORDINATE_SYSTEM.LNGLAT\n      : COORDINATE_SYSTEM.CARTESIAN;\n  }\n\n  const uniforms = getMemoizedViewportUniforms({\n    viewport,\n    devicePixelRatio,\n    coordinateSystem,\n    coordinateOrigin\n  });\n\n  uniforms.project_uWrapLongitude = autoWrapLongitude;\n  uniforms.project_uModelMatrix = modelMatrix || IDENTITY_MATRIX;\n\n  return uniforms;\n}\n\nfunction calculateViewportUniforms({\n  viewport,\n  devicePixelRatio,\n  coordinateSystem,\n  coordinateOrigin\n}) {\n  const {\n    projectionCenter,\n    viewProjectionMatrix,\n    cameraPosCommon,\n    shaderCoordinateOrigin,\n    geospatialOrigin\n  } = calculateMatrixAndOffset(viewport, coordinateSystem, coordinateOrigin);\n\n  // Calculate projection pixels per unit\n  const distanceScales = viewport.getDistanceScales();\n\n  const viewportSize = [viewport.width * devicePixelRatio, viewport.height * devicePixelRatio];\n\n  const uniforms = {\n    // Projection mode values\n    project_uCoordinateSystem: coordinateSystem,\n    project_uProjectionMode: viewport.projectionMode,\n    project_uCoordinateOrigin: shaderCoordinateOrigin,\n    project_uCenter: projectionCenter,\n    project_uAntimeridian: (viewport.longitude || 0) - 180,\n\n    // Screen size\n    project_uViewportSize: viewportSize,\n    project_uDevicePixelRatio: devicePixelRatio,\n\n    // Distance at which screen pixels are projected\n    project_uFocalDistance: viewport.focalDistance || 1,\n    project_uCommonUnitsPerMeter: distanceScales.unitsPerMeter,\n    project_uCommonUnitsPerWorldUnit: distanceScales.unitsPerMeter,\n    project_uCommonUnitsPerWorldUnit2: DEFAULT_PIXELS_PER_UNIT2,\n    project_uScale: viewport.scale, // This is the mercator scale (2 ** zoom)\n\n    project_uViewProjectionMatrix: viewProjectionMatrix,\n\n    // This is for lighting calculations\n    project_uCameraPosition: cameraPosCommon\n  };\n\n  if (geospatialOrigin) {\n    const distanceScalesAtOrigin = viewport.getDistanceScales(geospatialOrigin);\n    switch (coordinateSystem) {\n      case COORDINATE_SYSTEM.METER_OFFSETS:\n        uniforms.project_uCommonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerMeter;\n        uniforms.project_uCommonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerMeter2;\n        break;\n\n      case COORDINATE_SYSTEM.LNGLAT:\n      case COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n        uniforms.project_uCommonUnitsPerWorldUnit = distanceScalesAtOrigin.unitsPerDegree;\n        uniforms.project_uCommonUnitsPerWorldUnit2 = distanceScalesAtOrigin.unitsPerDegree2;\n        break;\n\n      // a.k.a \"preprojected\" positions\n      case COORDINATE_SYSTEM.CARTESIAN:\n        uniforms.project_uCommonUnitsPerWorldUnit = [1, 1, distanceScalesAtOrigin.unitsPerMeter[2]];\n        uniforms.project_uCommonUnitsPerWorldUnit2 = [\n          0,\n          0,\n          distanceScalesAtOrigin.unitsPerMeter2[2]\n        ];\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return uniforms;\n}\n","/**\n * Projection utils\n * TODO: move to Viewport class?\n */\nimport {COORDINATE_SYSTEM} from '../../lib/constants';\nimport {getOffsetOrigin} from './viewport-uniforms';\nimport WebMercatorViewport from '../../viewports/web-mercator-viewport';\n\nimport * as vec4 from 'gl-matrix/vec4';\nimport * as vec3 from 'gl-matrix/vec3';\nimport {addMetersToLngLat} from '@math.gl/web-mercator';\n\n// In project.glsl, offset modes calculate z differently from LNG_LAT mode.\n// offset modes apply the y adjustment (unitsPerMeter2) when projecting z\n// LNG_LAT mode only use the linear scale.\nfunction lngLatZToWorldPosition(lngLatZ, viewport, offsetMode = false) {\n  const p = viewport.projectPosition(lngLatZ);\n\n  // TODO - avoid using instanceof\n  if (offsetMode && viewport instanceof WebMercatorViewport) {\n    const [longitude, latitude, z = 0] = lngLatZ;\n    const distanceScales = viewport.getDistanceScales([longitude, latitude]);\n    p[2] = z * distanceScales.unitsPerMeter[2];\n  }\n  return p;\n}\n\nfunction normalizeParameters(opts) {\n  const normalizedParams = Object.assign({}, opts);\n\n  let {coordinateSystem} = opts;\n  const {viewport, coordinateOrigin, fromCoordinateSystem, fromCoordinateOrigin} = opts;\n\n  if (coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n    coordinateSystem = viewport.isGeospatial\n      ? COORDINATE_SYSTEM.LNGLAT\n      : COORDINATE_SYSTEM.CARTESIAN;\n  }\n\n  if (fromCoordinateSystem === undefined) {\n    normalizedParams.fromCoordinateSystem = coordinateSystem;\n  }\n  if (fromCoordinateOrigin === undefined) {\n    normalizedParams.fromCoordinateOrigin = coordinateOrigin;\n  }\n\n  normalizedParams.coordinateSystem = coordinateSystem;\n\n  return normalizedParams;\n}\n\nexport function getWorldPosition(\n  position,\n  {viewport, modelMatrix, coordinateSystem, coordinateOrigin, offsetMode}\n) {\n  let [x, y, z = 0] = position;\n\n  if (modelMatrix) {\n    [x, y, z] = vec4.transformMat4([], [x, y, z, 1.0], modelMatrix);\n  }\n\n  switch (coordinateSystem) {\n    case COORDINATE_SYSTEM.LNGLAT:\n      return lngLatZToWorldPosition([x, y, z], viewport, offsetMode);\n\n    case COORDINATE_SYSTEM.LNGLAT_OFFSETS:\n      return lngLatZToWorldPosition(\n        [x + coordinateOrigin[0], y + coordinateOrigin[1], z + (coordinateOrigin[2] || 0)],\n        viewport,\n        offsetMode\n      );\n\n    case COORDINATE_SYSTEM.METER_OFFSETS:\n      return lngLatZToWorldPosition(\n        addMetersToLngLat(coordinateOrigin, [x, y, z]),\n        viewport,\n        offsetMode\n      );\n\n    case COORDINATE_SYSTEM.CARTESIAN:\n    default:\n      return viewport.isGeospatial\n        ? [x + coordinateOrigin[0], y + coordinateOrigin[1], z + coordinateOrigin[2]]\n        : viewport.projectPosition([x, y, z]);\n  }\n}\n\n/**\n * Equivalent to project_position in project.glsl\n * projects a user supplied position to world position directly with or without\n * a reference coordinate system\n * @param {array} position - [x, y, z]\n * @param {object} params\n * @param {Viewport} params.viewport - the current viewport\n * @param {number} params.coordinateSystem - the reference coordinate system used\n *   align world position\n * @param {array} params.coordinateOrigin - the reference coordinate origin used\n *   to align world position\n * @param {Matrix4} [params.modelMatrix] - the model matrix of the supplied position\n * @param {number} [params.fromCoordinateSystem] - the coordinate system that the\n *   supplied position is in. Default to the same as `coordinateSystem`.\n * @param {array} [params.fromCoordinateOrigin] - the coordinate origin that the\n *   supplied position is in. Default to the same as `coordinateOrigin`.\n */\nexport function projectPosition(position, params) {\n  const {\n    viewport,\n    coordinateSystem,\n    coordinateOrigin,\n    // optional\n    modelMatrix,\n    fromCoordinateSystem,\n    fromCoordinateOrigin\n  } = normalizeParameters(params);\n\n  const {geospatialOrigin, shaderCoordinateOrigin, offsetMode} = getOffsetOrigin(\n    viewport,\n    coordinateSystem,\n    coordinateOrigin\n  );\n\n  const worldPosition = getWorldPosition(position, {\n    viewport,\n    modelMatrix,\n    coordinateSystem: fromCoordinateSystem,\n    coordinateOrigin: fromCoordinateOrigin,\n    offsetMode\n  });\n\n  if (offsetMode) {\n    const positionCommonSpace = viewport.projectPosition(\n      geospatialOrigin || shaderCoordinateOrigin\n    );\n    vec3.sub(worldPosition, worldPosition, positionCommonSpace);\n  }\n\n  return worldPosition;\n}\n","const TYPE_DEFINITIONS = {\n  boolean: {\n    validate(value, propType) {\n      return true;\n    },\n    equal(value1, value2, propType) {\n      return Boolean(value1) === Boolean(value2);\n    }\n  },\n  number: {\n    validate(value, propType) {\n      return (\n        Number.isFinite(value) &&\n        (!('max' in propType) || value <= propType.max) &&\n        (!('min' in propType) || value >= propType.min)\n      );\n    }\n  },\n  color: {\n    validate(value, propType) {\n      return (\n        (propType.optional && !value) ||\n        (isArray(value) && (value.length === 3 || value.length === 4))\n      );\n    },\n    equal(value1, value2, propType) {\n      return arrayEqual(value1, value2);\n    }\n  },\n  accessor: {\n    validate(value, propType) {\n      const valueType = getTypeOf(value);\n      return valueType === 'function' || valueType === getTypeOf(propType.value);\n    },\n    equal(value1, value2, propType) {\n      if (typeof value2 === 'function') {\n        return true;\n      }\n      return arrayEqual(value1, value2);\n    }\n  },\n  array: {\n    validate(value, propType) {\n      return (propType.optional && !value) || isArray(value);\n    },\n    equal(value1, value2, propType) {\n      return propType.compare ? arrayEqual(value1, value2) : value1 === value2;\n    }\n  },\n  function: {\n    validate(value, propType) {\n      return (propType.optional && !value) || typeof value === 'function';\n    },\n    equal(value1, value2, propType) {\n      return !propType.compare || value1 === value2;\n    }\n  }\n};\n\nfunction arrayEqual(array1, array2) {\n  if (array1 === array2) {\n    return true;\n  }\n  if (!isArray(array1) || !isArray(array2)) {\n    return false;\n  }\n  const len = array1.length;\n  if (len !== array2.length) {\n    return false;\n  }\n  for (let i = 0; i < len; i++) {\n    if (array1[i] !== array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function parsePropTypes(propDefs) {\n  const propTypes = {};\n  const defaultProps = {};\n  const deprecatedProps = {};\n\n  for (const [propName, propDef] of Object.entries(propDefs)) {\n    if (propDef && propDef.deprecatedFor) {\n      deprecatedProps[propName] = Array.isArray(propDef.deprecatedFor)\n        ? propDef.deprecatedFor\n        : [propDef.deprecatedFor];\n    } else {\n      const propType = parsePropType(propName, propDef);\n      propTypes[propName] = propType;\n      defaultProps[propName] = propType.value;\n    }\n  }\n  return {propTypes, defaultProps, deprecatedProps};\n}\n\n// Parses one property definition entry. Either contains:\n// * a valid prop type object ({type, ...})\n// * or just a default value, in which case type and name inference is used\nfunction parsePropType(name, propDef) {\n  switch (getTypeOf(propDef)) {\n    case 'object':\n      return normalizePropDefinition(name, propDef);\n\n    case 'array':\n      return normalizePropDefinition(name, {type: 'array', value: propDef, compare: false});\n\n    case 'boolean':\n      return normalizePropDefinition(name, {type: 'boolean', value: propDef});\n\n    case 'number':\n      return normalizePropDefinition(name, {type: 'number', value: propDef});\n\n    case 'function':\n      return normalizePropDefinition(name, {type: 'function', value: propDef, compare: true});\n    // return guessFunctionType(name, propDef);\n\n    default:\n      return {name, type: 'unknown', value: propDef};\n  }\n}\n\nfunction normalizePropDefinition(name, propDef) {\n  if (!('type' in propDef)) {\n    if (!('value' in propDef)) {\n      // If no type and value this object is likely the value\n      return {name, type: 'object', value: propDef};\n    }\n    return Object.assign({name, type: getTypeOf(propDef.value)}, propDef);\n  }\n  return Object.assign({name}, TYPE_DEFINITIONS[propDef.type], propDef);\n}\n\nfunction isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\n\n// improved version of javascript typeof that can distinguish arrays and null values\nfunction getTypeOf(value) {\n  if (isArray(value)) {\n    return 'array';\n  }\n  if (value === null) {\n    return 'null';\n  }\n  return typeof value;\n}\n","import log from '../utils/log';\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {parsePropTypes} from './prop-types';\nimport {PROP_SYMBOLS} from './constants';\n\nconst {COMPONENT, ASYNC_ORIGINAL, ASYNC_RESOLVED, ASYNC_DEFAULTS} = PROP_SYMBOLS;\n\n// Create a property object\nexport function createProps() {\n  const component = this; // eslint-disable-line\n\n  // Get default prop object (a prototype chain for now)\n  const propsPrototype = getPropsPrototype(component.constructor);\n\n  // Create a new prop object with default props object in prototype chain\n  const propsInstance = Object.create(propsPrototype);\n\n  // Props need a back pointer to the owning component\n  propsInstance[COMPONENT] = component;\n  // The supplied (original) values for those async props that are set to url strings or Promises.\n  // In this case, the actual (i.e. resolved) values are looked up from component.internalState\n  propsInstance[ASYNC_ORIGINAL] = {};\n  // Note: the actual (resolved) values for props that are NOT set to urls or Promises.\n  // in this case the values are served directly from this map\n  propsInstance[ASYNC_RESOLVED] = {};\n\n  // \"Copy\" all sync props\n  for (let i = 0; i < arguments.length; ++i) {\n    const props = arguments[i];\n    // Do not use Object.assign here to avoid Symbols in props overwriting our private fields\n    // This might happen if one of the arguments is another props instance\n    for (const key in props) {\n      propsInstance[key] = props[key];\n    }\n  }\n\n  // Props must be immutable\n  Object.freeze(propsInstance);\n\n  return propsInstance;\n}\n\n// Return precalculated defaultProps and propType objects if available\n// build them if needed\nfunction getPropsPrototype(componentClass) {\n  const defaultProps = getOwnProperty(componentClass, '_mergedDefaultProps');\n  if (!defaultProps) {\n    createPropsPrototypeAndTypes(componentClass);\n    return componentClass._mergedDefaultProps;\n  }\n  return defaultProps;\n}\n\n// Build defaultProps and propType objects by walking component prototype chain\nfunction createPropsPrototypeAndTypes(componentClass) {\n  const parent = componentClass.prototype;\n  if (!parent) {\n    return;\n  }\n\n  const parentClass = Object.getPrototypeOf(componentClass);\n  const parentDefaultProps = getPropsPrototype(parentClass);\n\n  // Parse propTypes from Component.defaultProps\n  const componentDefaultProps = getOwnProperty(componentClass, 'defaultProps') || {};\n  const componentPropDefs = parsePropTypes(componentDefaultProps);\n\n  // Create any necessary property descriptors and create the default prop object\n  // Assign merged default props\n  const defaultProps = createPropsPrototype(\n    componentPropDefs.defaultProps,\n    parentDefaultProps,\n    componentClass\n  );\n\n  // Create a merged type object\n  const propTypes = Object.assign({}, parentClass._propTypes, componentPropDefs.propTypes);\n  // Add getters/setters for async props\n  addAsyncPropsToPropPrototype(defaultProps, propTypes);\n\n  // Create a map for prop whose default value is a callback\n  const deprecatedProps = Object.assign(\n    {},\n    parentClass._deprecatedProps,\n    componentPropDefs.deprecatedProps\n  );\n  // Add setters for deprecated props\n  addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps);\n\n  // Store the precalculated props\n  componentClass._mergedDefaultProps = defaultProps;\n  componentClass._propTypes = propTypes;\n  componentClass._deprecatedProps = deprecatedProps;\n}\n\n// Builds a pre-merged default props object that component props can inherit from\nfunction createPropsPrototype(props, parentProps, componentClass) {\n  const defaultProps = Object.create(null);\n\n  Object.assign(defaultProps, parentProps, props);\n\n  // Avoid freezing `id` prop\n  const id = getComponentName(componentClass);\n  delete props.id;\n\n  Object.defineProperties(defaultProps, {\n    // `id` is treated specially because layer might need to override it\n    id: {\n      writable: true,\n      value: id\n    }\n  });\n\n  return defaultProps;\n}\n\nfunction addDeprecatedPropsToPropPrototype(defaultProps, deprecatedProps) {\n  for (const propName in deprecatedProps) {\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(defaultProps, propName, {\n      enumerable: false,\n      set(newValue) {\n        const nameStr = `${this.id}: ${propName}`;\n\n        for (const newPropName of deprecatedProps[propName]) {\n          if (!hasOwnProperty(this, newPropName)) {\n            this[newPropName] = newValue;\n          }\n        }\n\n        log.deprecated(nameStr, deprecatedProps[propName].join('/'))();\n      }\n    });\n    /* eslint-enable accessor-pairs */\n  }\n}\n\n// Create descriptors for overridable props\nfunction addAsyncPropsToPropPrototype(defaultProps, propTypes) {\n  const defaultValues = {};\n\n  const descriptors = {};\n\n  // Move async props into shadow values\n  for (const propName in propTypes) {\n    const propType = propTypes[propName];\n    const {name, value} = propType;\n\n    // Note: async is ES7 keyword, can't destructure\n    if (propType.async) {\n      defaultValues[name] = value;\n      descriptors[name] = getDescriptorForAsyncProp(name, value);\n    }\n  }\n\n  // Default \"resolved\" values for async props, returned if value not yet resolved/set.\n  defaultProps[ASYNC_DEFAULTS] = defaultValues;\n  // Shadowed object, just to make sure \"early indexing\" into the instance does not fail\n  defaultProps[ASYNC_ORIGINAL] = {};\n\n  Object.defineProperties(defaultProps, descriptors);\n}\n\n// Helper: Configures getter and setter for one async prop\nfunction getDescriptorForAsyncProp(name) {\n  return {\n    enumerable: true,\n    // Save the provided value for async props in a special map\n    set(newValue) {\n      if (\n        typeof newValue === 'string' ||\n        newValue instanceof Promise ||\n        isAsyncIterable(newValue)\n      ) {\n        this[ASYNC_ORIGINAL][name] = newValue;\n      } else {\n        this[ASYNC_RESOLVED][name] = newValue;\n      }\n    },\n    // Only the component's state knows the true value of async prop\n    get() {\n      if (this[ASYNC_RESOLVED]) {\n        // Prop value isn't async, so just return it\n        if (name in this[ASYNC_RESOLVED]) {\n          const value = this[ASYNC_RESOLVED][name];\n\n          return value || this[ASYNC_DEFAULTS][name];\n        }\n\n        if (name in this[ASYNC_ORIGINAL]) {\n          // It's an async prop value: look into component state\n          const state = this[COMPONENT] && this[COMPONENT].internalState;\n          if (state && state.hasAsyncProp(name)) {\n            return state.getAsyncProp(name) || this[ASYNC_DEFAULTS][name];\n          }\n        }\n      }\n\n      // the prop is not supplied, or\n      // component not yet initialized/matched, return the component's default value for the prop\n      return this[ASYNC_DEFAULTS][name];\n    }\n  };\n}\n\n// HELPER METHODS\n\nfunction hasOwnProperty(object, prop) {\n  return Object.prototype.hasOwnProperty.call(object, prop);\n}\n\n// Constructors have their super class constructors as prototypes\nfunction getOwnProperty(object, prop) {\n  return hasOwnProperty(object, prop) && object[prop];\n}\n\nfunction getComponentName(componentClass) {\n  const componentName =\n    getOwnProperty(componentClass, 'layerName') || getOwnProperty(componentClass, 'componentName');\n  if (!componentName) {\n    log.once(0, `${componentClass.name}.componentName not specified`)();\n  }\n  return componentName || componentClass.name;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport log from '../utils/log';\nimport {isAsyncIterable} from '../utils/iterable-utils';\nimport {PROP_SYMBOLS} from './constants';\nconst {ASYNC_ORIGINAL, ASYNC_RESOLVED, ASYNC_DEFAULTS} = PROP_SYMBOLS;\n\nconst EMPTY_PROPS = Object.freeze({});\n\nexport default class ComponentState {\n  constructor(component = null) {\n    this.component = component;\n    this.asyncProps = {}; // Prop values that the layer sees\n    this.onAsyncPropUpdated = () => {};\n    this.oldProps = EMPTY_PROPS; // Last props before update\n    this.oldAsyncProps = null; // Last props before update, with async values copied.\n  }\n\n  getOldProps() {\n    return this.oldAsyncProps || this.oldProps;\n  }\n\n  resetOldProps() {\n    this.oldAsyncProps = null;\n    this.oldProps = this.component.props;\n  }\n\n  // Whenever async props are changing, we need to make a copy of oldProps\n  // otherwise the prop rewriting will affect the value both in props and oldProps.\n  // While the copy is relatively expensive, this only happens on load completion.\n  freezeAsyncOldProps() {\n    if (!this.oldAsyncProps) {\n      // Make sure oldProps is set\n      this.oldProps = this.oldProps || this.component.props;\n\n      // 1. inherit all synchronous props from oldProps\n      // 2. reconfigure the async prop descriptors to fixed values\n      this.oldAsyncProps = Object.create(this.oldProps);\n      for (const propName in this.asyncProps) {\n        Object.defineProperty(this.oldAsyncProps, propName, {\n          enumerable: true,\n          value: this.oldProps[propName]\n        });\n      }\n    }\n  }\n\n  // ASYNC PROP HANDLING\n  //\n\n  // Checks if a prop is overridden\n  hasAsyncProp(propName) {\n    return propName in this.asyncProps;\n  }\n\n  // Returns value of an overriden prop\n  getAsyncProp(propName) {\n    const asyncProp = this.asyncProps[propName];\n    return asyncProp && asyncProp.resolvedValue;\n  }\n\n  isAsyncPropLoading(propName) {\n    if (propName) {\n      const asyncProp = this.asyncProps[propName];\n      return Boolean(\n        asyncProp &&\n          asyncProp.pendingLoadCount > 0 &&\n          asyncProp.pendingLoadCount !== asyncProp.resolvedLoadCount\n      );\n    }\n    for (const key in this.asyncProps) {\n      if (this.isAsyncPropLoading(key)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Without changing the original prop value, swap out the data resolution under the hood\n  reloadAsyncProp(propName, value) {\n    this._watchPromise(propName, Promise.resolve(value));\n  }\n\n  // Updates all async/overridden props (when new props come in)\n  // Checks if urls have changed, starts loading, or removes override\n  setAsyncProps(props) {\n    // NOTE: prop param and default values are only support for testing\n    const resolvedValues = props[ASYNC_RESOLVED] || {};\n    const originalValues = props[ASYNC_ORIGINAL] || props;\n    const defaultValues = props[ASYNC_DEFAULTS] || {};\n\n    // TODO - use async props from the layer's prop types\n    for (const propName in resolvedValues) {\n      const value = resolvedValues[propName];\n      this._createAsyncPropData(propName, value, defaultValues[propName]);\n      this._updateAsyncProp(propName, value);\n    }\n\n    for (const propName in originalValues) {\n      const value = originalValues[propName];\n      // Makes sure a record exists for this prop\n      this._createAsyncPropData(propName, value, defaultValues[propName]);\n      this._updateAsyncProp(propName, value);\n    }\n  }\n\n  // Intercept strings (URLs) and Promises and activates loading and prop rewriting\n  _updateAsyncProp(propName, value) {\n    if (!this._didAsyncInputValueChange(propName, value)) {\n      return;\n    }\n\n    // interpret value string as url and start a new load tracked by a promise\n    if (typeof value === 'string') {\n      const fetch = this.layer && this.layer.props.fetch;\n      const url = value;\n      if (fetch) {\n        value = fetch(url, {propName, layer: this.layer});\n      }\n    }\n\n    // interprets promise and track the \"loading\"\n    if (value instanceof Promise) {\n      this._watchPromise(propName, value);\n      return;\n    }\n\n    if (isAsyncIterable(value)) {\n      this._resolveAsyncIterable(propName, value);\n      return;\n    }\n\n    // else, normal, non-async value. Just store value for now\n    this._setPropValue(propName, value);\n  }\n\n  // Checks if an input value actually changed (to avoid reloading/rewatching promises/urls)\n  _didAsyncInputValueChange(propName, value) {\n    const asyncProp = this.asyncProps[propName];\n    if (value === asyncProp.lastValue) {\n      return false;\n    }\n    asyncProp.lastValue = value;\n    return true;\n  }\n\n  // Set normal, non-async value\n  _setPropValue(propName, value) {\n    const asyncProp = this.asyncProps[propName];\n    asyncProp.value = value;\n    asyncProp.resolvedValue = value;\n    asyncProp.pendingLoadCount++;\n    asyncProp.resolvedLoadCount = asyncProp.pendingLoadCount;\n  }\n\n  // Set a just resolved async value, calling onAsyncPropUpdates if value changes asynchronously\n  _setAsyncPropValue(propName, value, loadCount) {\n    // Only update if loadCount is larger or equal to resolvedLoadCount\n    // otherwise a more recent load has already completed\n    const asyncProp = this.asyncProps[propName];\n    if (asyncProp && loadCount >= asyncProp.resolvedLoadCount && value !== undefined) {\n      // A chance to copy old props before updating\n      this.freezeAsyncOldProps();\n\n      asyncProp.resolvedValue = value;\n      asyncProp.resolvedLoadCount = loadCount;\n\n      // Call callback to inform listener\n      this.onAsyncPropUpdated(propName, value);\n    }\n  }\n\n  // Tracks a promise, sets the prop when loaded, handles load count\n  _watchPromise(propName, promise) {\n    const asyncProp = this.asyncProps[propName];\n    asyncProp.pendingLoadCount++;\n    const loadCount = asyncProp.pendingLoadCount;\n    promise\n      .then(data => {\n        data = this._postProcessValue(propName, data);\n        this._setAsyncPropValue(propName, data, loadCount);\n\n        const onDataLoad = this.layer && this.layer.props.onDataLoad;\n        if (propName === 'data' && onDataLoad) {\n          onDataLoad(data, {propName, layer: this.layer});\n        }\n      })\n      .catch(error => log.error(error)());\n  }\n\n  async _resolveAsyncIterable(propName, iterable) {\n    if (propName !== 'data') {\n      // we only support data as async iterable\n      this._setPropValue(propName, iterable);\n    }\n\n    const asyncProp = this.asyncProps[propName];\n    asyncProp.pendingLoadCount++;\n    const loadCount = asyncProp.pendingLoadCount;\n    let data = [];\n    let count = 0;\n\n    for await (const chunk of iterable) {\n      data = this._postProcessValue(propName, chunk, data);\n\n      // Used by the default _dataDiff function\n      Object.defineProperty(data, '__diff', {\n        enumerable: false,\n        value: [{startRow: count, endRow: data.length}]\n      });\n\n      count = data.length;\n      this._setAsyncPropValue(propName, data, loadCount);\n    }\n\n    const onDataLoad = this.layer && this.layer.props.onDataLoad;\n    if (onDataLoad) {\n      onDataLoad(data, {propName, layer: this.layer});\n    }\n  }\n\n  // Give the app a chance to post process the loaded data\n  _postProcessValue(propName, value, previousValue) {\n    const {dataTransform} = this.component ? this.component.props : {};\n    if (propName !== 'data') {\n      return value;\n    }\n    if (dataTransform) {\n      return dataTransform(value, previousValue);\n    }\n    // previousValue is assigned if loaded with async iterator\n    return previousValue ? previousValue.concat(value) : value;\n  }\n\n  // Creating an asyncProp record if needed\n  _createAsyncPropData(propName, value, defaultValue) {\n    const asyncProp = this.asyncProps[propName];\n    if (!asyncProp) {\n      // assert(defaultValue !== undefined);\n      this.asyncProps[propName] = {\n        lastValue: null, // Supplied prop value (can be url/promise, not visible to layer)\n        resolvedValue: defaultValue, // Resolved prop value (valid data, can be \"shown\" to layer)\n        pendingLoadCount: 0, // How many loads have been issued\n        resolvedLoadCount: 0 // Latest resolved load, (earlier loads will be ignored)\n      };\n    }\n  }\n}\n","import {LIFECYCLE} from '../lifecycle/constants';\nimport {createProps} from './create-props';\nimport {PROP_SYMBOLS} from './constants';\nconst {ASYNC_ORIGINAL, ASYNC_RESOLVED, ASYNC_DEFAULTS} = PROP_SYMBOLS;\nimport ComponentState from './component-state';\n\nconst defaultProps = {};\n\nlet counter = 0;\n\nexport default class Component {\n  constructor(/* ...propObjects */) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps.apply(this, arguments);\n    /* eslint-enable prefer-spread */\n\n    // Define all members before layer is sealed\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n    this.lifecycle = LIFECYCLE.NO_STATE; // Helps track and debug the life cycle of the layers\n    this.parent = null; // reference to the composite layer parent that rendered this layer\n    this.context = null; // Will reference layer manager's context, contains state shared by layers\n    this.state = null; // Will be set to the shared layer state object during layer matching\n    this.internalState = null;\n\n    // Seal the layer\n    Object.seal(this);\n  }\n\n  // clone this layer with modified props\n  clone(newProps) {\n    const {props} = this;\n\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps = {};\n\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS]) {\n      if (key in props[ASYNC_RESOLVED]) {\n        asyncProps[key] = props[ASYNC_RESOLVED][key];\n      } else if (key in props[ASYNC_ORIGINAL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL][key];\n      }\n    }\n\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    return new this.constructor(Object.assign({}, props, asyncProps, newProps));\n  }\n\n  get stats() {\n    return this.internalState.stats;\n  }\n\n  // PROTECTED METHODS, override in subclass\n\n  _initState() {\n    this.internalState = new ComponentState({});\n  }\n}\n\nComponent.componentName = 'Component';\nComponent.defaultProps = defaultProps;\n","import ComponentState from '../lifecycle/component-state';\n\nexport default class LayerState extends ComponentState {\n  constructor({attributeManager, layer}) {\n    super(layer);\n    this.attributeManager = attributeManager;\n    this.model = null;\n    this.needsRedraw = true;\n    this.subLayers = null; // reference to sublayers rendered in a previous cycle\n  }\n\n  get layer() {\n    return this.component;\n  }\n\n  set layer(layer) {\n    this.component = layer;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable react/no-direct-mutation-state */\nimport {COORDINATE_SYSTEM} from './constants';\nimport AttributeManager from './attribute/attribute-manager';\nimport UniformTransitionManager from './uniform-transition-manager';\nimport {diffProps, validateProps} from '../lifecycle/props';\nimport {count} from '../utils/count';\nimport log from '../utils/log';\nimport debug from '../debug';\nimport GL from '@luma.gl/constants';\nimport {withParameters, setParameters} from '@luma.gl/core';\nimport assert from '../utils/assert';\nimport memoize from '../utils/memoize';\nimport {mergeShaders} from '../utils/shader';\nimport {projectPosition, getWorldPosition} from '../shaderlib/project/project-functions';\nimport typedArrayManager from '../utils/typed-array-manager';\n\nimport Component from '../lifecycle/component';\nimport LayerState from './layer-state';\n\nimport {worldToPixels} from '@math.gl/web-mercator';\n\nimport {load} from '@loaders.gl/core';\n\nconst TRACE_CHANGE_FLAG = 'layer.changeFlag';\nconst TRACE_INITIALIZE = 'layer.initialize';\nconst TRACE_UPDATE = 'layer.update';\nconst TRACE_FINALIZE = 'layer.finalize';\nconst TRACE_MATCHED = 'layer.matched';\n\nconst EMPTY_ARRAY = Object.freeze([]);\n\n// Only compare the same two viewports once\nconst areViewportsEqual = memoize(({oldViewport, viewport}) => {\n  return oldViewport.equals(viewport);\n});\n\nlet pickingColorCache = new Uint8ClampedArray(0);\n\nconst defaultProps = {\n  // data: Special handling for null, see below\n  data: {type: 'data', value: EMPTY_ARRAY, async: true},\n  dataComparator: null,\n  _dataDiff: {type: 'function', value: data => data && data.__diff, compare: false, optional: true},\n  dataTransform: {type: 'function', value: null, compare: false, optional: true},\n  onDataLoad: {type: 'function', value: null, compare: false, optional: true},\n  fetch: {\n    type: 'function',\n    value: (url, {propName, layer}) => {\n      const {resourceManager} = layer.context;\n      const loadOptions = layer.getLoadOptions();\n      let inResourceManager = resourceManager.contains(url);\n\n      if (!inResourceManager && !loadOptions) {\n        // If there is no layer-specific load options, then attempt to cache this resource in the data manager\n        resourceManager.add({resourceId: url, data: url, persistent: false});\n        inResourceManager = true;\n      }\n      if (inResourceManager) {\n        return resourceManager.subscribe({\n          resourceId: url,\n          onChange: data => layer.internalState.reloadAsyncProp(propName, data),\n          consumerId: layer.id,\n          requestId: propName\n        });\n      }\n\n      return load(url, loadOptions);\n    },\n    compare: false\n  },\n  updateTriggers: {}, // Update triggers: a core change detection mechanism in deck.gl\n\n  visible: true,\n  pickable: false,\n  opacity: {type: 'number', min: 0, max: 1, value: 1},\n\n  onHover: {type: 'function', value: null, compare: false, optional: true},\n  onClick: {type: 'function', value: null, compare: false, optional: true},\n  onDragStart: {type: 'function', value: null, compare: false, optional: true},\n  onDrag: {type: 'function', value: null, compare: false, optional: true},\n  onDragEnd: {type: 'function', value: null, compare: false, optional: true},\n\n  coordinateSystem: COORDINATE_SYSTEM.DEFAULT,\n  coordinateOrigin: {type: 'array', value: [0, 0, 0], compare: true},\n  modelMatrix: {type: 'array', value: null, compare: true, optional: true},\n  wrapLongitude: false,\n  positionFormat: 'XYZ',\n  colorFormat: 'RGBA',\n\n  parameters: {},\n  uniforms: {},\n  extensions: [],\n\n  // Offset depth based on layer index to avoid z-fighting.\n  // Negative values pull layer towards the camera\n  // https://www.opengl.org/archives/resources/faq/technical/polygonoffset.htm\n  getPolygonOffset: {\n    type: 'function',\n    value: ({layerIndex}) => [0, -layerIndex * 100],\n    compare: false\n  },\n\n  // Selection/Highlighting\n  highlightedObjectIndex: -1,\n  autoHighlight: false,\n  highlightColor: {type: 'accessor', value: [0, 0, 128, 128]}\n};\n\nexport default class Layer extends Component {\n  toString() {\n    const className = this.constructor.layerName || this.constructor.name;\n    return `${className}({id: '${this.props.id}'})`;\n  }\n\n  // Public API\n\n  // Updates selected state members and marks the object for redraw\n  setState(updateObject) {\n    this.setChangeFlags({stateChanged: true});\n    Object.assign(this.state, updateObject);\n    this.setNeedsRedraw();\n  }\n\n  // Sets the redraw flag for this layer, will trigger a redraw next animation frame\n  setNeedsRedraw(redraw = true) {\n    if (this.internalState) {\n      this.internalState.needsRedraw = redraw;\n    }\n  }\n\n  // This layer needs a deep update\n  setNeedsUpdate() {\n    this.context.layerManager.setNeedsUpdate(String(this));\n    this.internalState.needsUpdate = true;\n  }\n\n  // Checks state of attributes and model\n  getNeedsRedraw(opts = {clearRedrawFlags: false}) {\n    return this._getNeedsRedraw(opts);\n  }\n\n  // Checks if layer attributes needs updating\n  needsUpdate() {\n    // Call subclass lifecycle method\n    return (\n      this.internalState.needsUpdate ||\n      this.hasUniformTransition() ||\n      this.shouldUpdateState(this._getUpdateParams())\n    );\n    // End lifecycle method\n  }\n\n  hasUniformTransition() {\n    return this.internalState.uniformTransitions.active;\n  }\n\n  get isLoaded() {\n    return this.internalState && !this.internalState.isAsyncPropLoading();\n  }\n\n  get wrapLongitude() {\n    return this.props.wrapLongitude;\n  }\n\n  // Returns true if the layer is pickable and visible.\n  isPickable() {\n    return this.props.pickable && this.props.visible;\n  }\n\n  // Return an array of models used by this layer, can be overriden by layer subclass\n  getModels() {\n    return this.state && (this.state.models || (this.state.model ? [this.state.model] : []));\n  }\n\n  getAttributeManager() {\n    return this.internalState && this.internalState.attributeManager;\n  }\n\n  // Returns the most recent layer that matched to this state\n  // (When reacting to an async event, this layer may no longer be the latest)\n  getCurrentLayer() {\n    return this.internalState && this.internalState.layer;\n  }\n\n  // Returns the default parse options for async props\n  getLoadOptions() {\n    return this.props.loadOptions;\n  }\n\n  // PROJECTION METHODS\n\n  // Projects a point with current map state (lat, lon, zoom, pitch, bearing)\n  // From the current layer's coordinate system to screen\n  project(xyz) {\n    const {viewport} = this.context;\n    const worldPosition = getWorldPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n    const [x, y, z] = worldToPixels(worldPosition, viewport.pixelProjectionMatrix);\n    return xyz.length === 2 ? [x, y] : [x, y, z];\n  }\n\n  // Note: this does not reverse `project`.\n  // Always unprojects to the viewport's coordinate system\n  unproject(xy) {\n    const {viewport} = this.context;\n    return viewport.unproject(xy);\n  }\n\n  projectPosition(xyz) {\n    return projectPosition(xyz, {\n      viewport: this.context.viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n  }\n\n  use64bitPositions() {\n    const {coordinateSystem} = this.props;\n    return (\n      coordinateSystem === COORDINATE_SYSTEM.DEFAULT ||\n      coordinateSystem === COORDINATE_SYSTEM.LNGLAT ||\n      coordinateSystem === COORDINATE_SYSTEM.CARTESIAN\n    );\n  }\n\n  // Event handling\n  onHover(info, pickingEvent) {\n    if (this.props.onHover) {\n      return this.props.onHover(info, pickingEvent);\n    }\n    return false;\n  }\n\n  onClick(info, pickingEvent) {\n    if (this.props.onClick) {\n      return this.props.onClick(info, pickingEvent);\n    }\n    return false;\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  // @return {Array} - a black color\n  nullPickingColor() {\n    return [0, 0, 0];\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  encodePickingColor(i, target = []) {\n    target[0] = (i + 1) & 255;\n    target[1] = ((i + 1) >> 8) & 255;\n    target[2] = (((i + 1) >> 8) >> 8) & 255;\n    return target;\n  }\n\n  // Returns the index corresponding to a picking color that doesn't match any subfeature\n  // @param {Uint8Array} color - color array to be decoded\n  // @return {Array} - the decoded picking color\n  decodePickingColor(color) {\n    assert(color instanceof Uint8Array);\n    const [i1, i2, i3] = color;\n    // 1 was added to seperate from no selection\n    const index = i1 + i2 * 256 + i3 * 65536 - 1;\n    return index;\n  }\n\n  // //////////////////////////////////////////////////\n  // LIFECYCLE METHODS, overridden by the layer subclasses\n\n  // Called once to set up the initial state\n  // App can create WebGL resources\n  initializeState() {\n    throw new Error(`Layer ${this} has not defined initializeState`);\n  }\n\n  getShaders(shaders) {\n    for (const extension of this.props.extensions) {\n      shaders = mergeShaders(shaders, extension.getShaders.call(this, extension));\n    }\n    return shaders;\n  }\n\n  // Let's layer control if updateState should be called\n  shouldUpdateState({oldProps, props, context, changeFlags}) {\n    return changeFlags.propsOrDataChanged;\n  }\n\n  // Default implementation, all attributes will be invalidated and updated\n  // when data changes\n  /* eslint-disable-next-line complexity */\n  updateState({oldProps, props, context, changeFlags}) {\n    const attributeManager = this.getAttributeManager();\n    if (changeFlags.dataChanged && attributeManager) {\n      const {dataChanged} = changeFlags;\n      if (Array.isArray(dataChanged)) {\n        // is partial update\n        for (const dataRange of dataChanged) {\n          attributeManager.invalidateAll(dataRange);\n        }\n      } else {\n        attributeManager.invalidateAll();\n      }\n    }\n\n    const neededPickingBuffer = oldProps.highlightedObjectIndex >= 0 || oldProps.pickable;\n    const needPickingBuffer = props.highlightedObjectIndex >= 0 || props.pickable;\n    if (neededPickingBuffer !== needPickingBuffer && attributeManager) {\n      const {pickingColors, instancePickingColors} = attributeManager.attributes;\n      const pickingColorsAttribute = pickingColors || instancePickingColors;\n      if (pickingColorsAttribute) {\n        if (needPickingBuffer && pickingColorsAttribute.constant) {\n          pickingColorsAttribute.constant = false;\n          attributeManager.invalidate(pickingColorsAttribute.id);\n        }\n        if (!pickingColorsAttribute.value && !needPickingBuffer) {\n          pickingColorsAttribute.constant = true;\n          pickingColorsAttribute.value = [0, 0, 0];\n        }\n      }\n    }\n  }\n\n  // Called once when layer is no longer matched and state will be discarded\n  // App can destroy WebGL resources here\n  finalizeState() {\n    for (const model of this.getModels()) {\n      model.delete();\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.finalize();\n    }\n    this.context.resourceManager.unsubscribe({consumerId: this.id});\n    this.internalState.uniformTransitions.clear();\n  }\n\n  // If state has a model, draw it with supplied uniforms\n  draw(opts) {\n    for (const model of this.getModels()) {\n      model.draw(opts);\n    }\n  }\n\n  // called to populate the info object that is passed to the event handler\n  // @return null to cancel event\n  getPickingInfo({info, mode}) {\n    const {index} = info;\n\n    if (index >= 0) {\n      // If props.data is an indexable array, get the object\n      if (Array.isArray(this.props.data)) {\n        info.object = this.props.data[index];\n      }\n    }\n\n    return info;\n  }\n\n  // END LIFECYCLE METHODS\n  // //////////////////////////////////////////////////\n\n  // INTERNAL METHODS\n  activateViewport(viewport) {\n    const oldViewport = this.internalState.viewport;\n    this.internalState.viewport = viewport;\n\n    if (!oldViewport || !areViewportsEqual({oldViewport, viewport})) {\n      this.setChangeFlags({viewportChanged: true});\n      this._update();\n    }\n  }\n\n  // Default implementation of attribute invalidation, can be redefined\n  invalidateAttribute(name = 'all', diffReason = '') {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    if (name === 'all') {\n      attributeManager.invalidateAll();\n    } else {\n      attributeManager.invalidate(name);\n    }\n  }\n\n  updateAttributes(changedAttributes) {\n    for (const model of this.getModels()) {\n      this._setModelAttributes(model, changedAttributes);\n    }\n  }\n\n  // Calls attribute manager to update any WebGL attributes\n  _updateAttributes(props) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    // Figure out data length\n    const numInstances = this.getNumInstances(props);\n    const startIndices = this.getStartIndices(props);\n\n    attributeManager.update({\n      data: props.data,\n      numInstances,\n      startIndices,\n      props,\n      transitions: props.transitions,\n      buffers: props.data.attributes,\n      context: this,\n      // Don't worry about non-attribute props\n      ignoreUnknownAttributes: true\n    });\n\n    const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n    this.updateAttributes(changedAttributes);\n  }\n\n  // Update attribute transitions. This is called in drawLayer, no model updates required.\n  _updateAttributeTransition() {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.updateTransition();\n    }\n  }\n\n  // Update uniform (prop) transitions. This is called in updateState, may result in model updates.\n  _updateUniformTransition() {\n    const {uniformTransitions} = this.internalState;\n    if (uniformTransitions.active) {\n      // clone props\n      const propsInTransition = uniformTransitions.update();\n      const props = Object.create(this.props);\n      for (const key in propsInTransition) {\n        Object.defineProperty(props, key, {value: propsInTransition[key]});\n      }\n      return props;\n    }\n    return this.props;\n  }\n\n  calculateInstancePickingColors(attribute, {numInstances}) {\n    if (attribute.constant) {\n      return;\n    }\n\n    // calculateInstancePickingColors always generates the same sequence.\n    // pickingColorCache saves the largest generated sequence for reuse\n    const cacheSize = pickingColorCache.length / 3;\n\n    if (cacheSize < numInstances) {\n      pickingColorCache = typedArrayManager.allocate(pickingColorCache, numInstances, {\n        size: 3,\n        copy: true\n      });\n      // If the attribute is larger than the cache, resize the cache and populate the missing chunk\n      const newCacheSize = pickingColorCache.length / 3;\n      const pickingColor = [];\n      assert(newCacheSize < 16777215, 'index out of picking color range');\n\n      for (let i = cacheSize; i < newCacheSize; i++) {\n        this.encodePickingColor(i, pickingColor);\n        pickingColorCache[i * 3 + 0] = pickingColor[0];\n        pickingColorCache[i * 3 + 1] = pickingColor[1];\n        pickingColorCache[i * 3 + 2] = pickingColor[2];\n      }\n    }\n\n    attribute.value = pickingColorCache.subarray(0, numInstances * 3);\n  }\n\n  _setModelAttributes(model, changedAttributes) {\n    const attributeManager = this.getAttributeManager();\n    const excludeAttributes = model.userData.excludeAttributes || {};\n    const shaderAttributes = attributeManager.getShaderAttributes(\n      changedAttributes,\n      excludeAttributes\n    );\n\n    model.setAttributes(shaderAttributes);\n  }\n\n  // Sets the specified instanced picking color to null picking color. Used for multi picking.\n  clearPickingColor(color) {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n\n    const i = this.decodePickingColor(color);\n    const start = colors.getVertexOffset(i);\n    const end = colors.getVertexOffset(i + 1);\n\n    // Fill the sub buffer with 0s\n    colors.buffer.subData({\n      data: new Uint8Array(end - start),\n      offset: start // 1 byte per element\n    });\n  }\n\n  restorePickingColors() {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n    colors.updateSubBuffer({startOffset: 0});\n  }\n\n  // Deduces numer of instances. Intention is to support:\n  // - Explicit setting of numInstances\n  // - Auto-deduction for ES6 containers that define a size member\n  // - Auto-deduction for Classic Arrays via the built-in length attribute\n  // - Auto-deduction via arrays\n  getNumInstances(props) {\n    props = props || this.props;\n\n    // First Check if app has provided an explicit value\n    if (props.numInstances !== undefined) {\n      return props.numInstances;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.numInstances !== undefined) {\n      return this.state.numInstances;\n    }\n\n    // Use container library to get a count for any ES6 container or object\n    return count(props.data);\n  }\n\n  // Buffer layout describes how many attribute values are packed for each data object\n  // The default (null) is one value each object.\n  // Some data formats (e.g. paths, polygons) have various length. Their buffer layout\n  //  is in the form of [L0, L1, L2, ...]\n  getStartIndices(props) {\n    props = props || this.props;\n\n    // First Check if startIndices is provided as an explicit value\n    if (props.startIndices !== undefined) {\n      return props.startIndices;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.startIndices) {\n      return this.state.startIndices;\n    }\n\n    return null;\n  }\n\n  // LAYER MANAGER API\n  // Should only be called by the deck.gl LayerManager class\n\n  // Called by layer manager when a new layer is found\n  /* eslint-disable max-statements */\n  _initialize() {\n    debug(TRACE_INITIALIZE, this);\n\n    this._initState();\n\n    // Call subclass lifecycle methods\n    this.initializeState(this.context);\n    // Initialize extensions\n    for (const extension of this.props.extensions) {\n      extension.initializeState.call(this, this.context, extension);\n    }\n    // End subclass lifecycle methods\n\n    // initializeState callback tends to clear state\n    this.setChangeFlags({\n      dataChanged: true,\n      propsChanged: true,\n      viewportChanged: true,\n      extensionsChanged: true\n    });\n\n    this._updateState();\n  }\n\n  // Called by layer manager\n  // if this layer is new (not matched with an existing layer) oldProps will be empty object\n  _update() {\n    // Call subclass lifecycle method\n    const stateNeedsUpdate = this.needsUpdate();\n    // End lifecycle method\n    debug(TRACE_UPDATE, this, stateNeedsUpdate);\n\n    if (stateNeedsUpdate) {\n      this._updateState();\n    }\n  }\n\n  // Common code for _initialize and _update\n  _updateState() {\n    const currentProps = this.props;\n    const currentViewport = this.context.viewport;\n    const propsInTransition = this._updateUniformTransition();\n    this.internalState.propsInTransition = propsInTransition;\n    // Overwrite this.context.viewport during update to use the last activated viewport on this layer\n    // In multi-view applications, a layer may only be drawn in one of the views\n    // Which would make the \"active\" viewport different from the shared context\n    this.context.viewport = this.internalState.viewport || currentViewport;\n    // Overwrite this.props during update to use in-transition prop values\n    this.props = propsInTransition;\n\n    const updateParams = this._getUpdateParams();\n    const oldModels = this.getModels();\n\n    // Safely call subclass lifecycle methods\n    if (this.context.gl) {\n      this.updateState(updateParams);\n    } else {\n      try {\n        this.updateState(updateParams);\n      } catch (error) {\n        // ignore error if gl context is missing\n      }\n    }\n    // Execute extension updates\n    for (const extension of this.props.extensions) {\n      extension.updateState.call(this, updateParams, extension);\n    }\n\n    const modelChanged = this.getModels()[0] !== oldModels[0];\n    this._updateModules(updateParams, modelChanged);\n    // End subclass lifecycle methods\n\n    if (this.isComposite) {\n      // Render or update previously rendered sublayers\n      this._renderLayers(updateParams);\n    } else {\n      this.setNeedsRedraw();\n      // Add any subclass attributes\n      this._updateAttributes(this.props);\n\n      // Note: Automatic instance count update only works for single layers\n      if (this.state.model) {\n        this.state.model.setInstanceCount(this.getNumInstances());\n      }\n    }\n\n    // Restore shared context\n    this.context.viewport = currentViewport;\n    this.props = currentProps;\n    this.clearChangeFlags();\n    this.internalState.needsUpdate = false;\n    this.internalState.resetOldProps();\n  }\n  /* eslint-enable max-statements */\n\n  // Called by manager when layer is about to be disposed\n  // Note: not guaranteed to be called on application shutdown\n  _finalize() {\n    debug(TRACE_FINALIZE, this);\n    assert(this.internalState && this.state);\n\n    // Call subclass lifecycle method\n    this.finalizeState(this.context);\n    // Finalize extensions\n    for (const extension of this.props.extensions) {\n      extension.finalizeState.call(this, extension);\n    }\n  }\n\n  // Calculates uniforms\n  drawLayer({moduleParameters = null, uniforms = {}, parameters = {}}) {\n    this._updateAttributeTransition();\n\n    const currentProps = this.props;\n    // Overwrite this.props during redraw to use in-transition prop values\n    // `internalState.propsInTransition` could be missing if `updateState` failed\n    this.props = this.internalState.propsInTransition || currentProps;\n\n    const {opacity} = this.props;\n    // apply gamma to opacity to make it visually \"linear\"\n    uniforms.opacity = Math.pow(opacity, 1 / 2.2);\n\n    // TODO/ib - hack move to luma Model.draw\n    if (moduleParameters) {\n      this.setModuleParameters(moduleParameters);\n    }\n\n    // Apply polygon offset to avoid z-fighting\n    // TODO - move to draw-layers\n    const {getPolygonOffset} = this.props;\n    const offsets = (getPolygonOffset && getPolygonOffset(uniforms)) || [0, 0];\n\n    setParameters(this.context.gl, {polygonOffset: offsets});\n\n    // Call subclass lifecycle method\n    withParameters(this.context.gl, parameters, () => {\n      const opts = {moduleParameters, uniforms, parameters, context: this.context};\n\n      // extensions\n      for (const extension of this.props.extensions) {\n        extension.draw.call(this, opts, extension);\n      }\n\n      this.draw(opts);\n    });\n\n    // End lifecycle method\n\n    this.props = currentProps;\n  }\n\n  // Helper methods\n  getChangeFlags() {\n    return this.internalState.changeFlags;\n  }\n\n  // Dirty some change flags, will be handled by updateLayer\n  /* eslint-disable complexity */\n  setChangeFlags(flags) {\n    const {changeFlags} = this.internalState;\n\n    /* eslint-disable no-fallthrough, max-depth */\n    for (const key in flags) {\n      if (flags[key]) {\n        let flagChanged = false;\n        switch (key) {\n          case 'dataChanged':\n            // changeFlags.dataChanged may be `false`, a string (reason) or an array of ranges\n            if (Array.isArray(changeFlags[key])) {\n              changeFlags[key] = Array.isArray(flags[key])\n                ? changeFlags[key].concat(flags[key])\n                : flags[key];\n              flagChanged = true;\n            }\n\n          default:\n            if (!changeFlags[key]) {\n              changeFlags[key] = flags[key];\n              flagChanged = true;\n            }\n        }\n        if (flagChanged) {\n          debug(TRACE_CHANGE_FLAG, this, key, flags);\n        }\n      }\n    }\n    /* eslint-enable no-fallthrough, max-depth */\n\n    // Update composite flags\n    const propsOrDataChanged =\n      changeFlags.dataChanged ||\n      changeFlags.updateTriggersChanged ||\n      changeFlags.propsChanged ||\n      changeFlags.extensionsChanged;\n    changeFlags.propsOrDataChanged = propsOrDataChanged;\n    changeFlags.somethingChanged =\n      propsOrDataChanged || flags.viewportChanged || flags.stateChanged;\n  }\n  /* eslint-enable complexity */\n\n  // Clear all changeFlags, typically after an update\n  clearChangeFlags() {\n    this.internalState.changeFlags = {\n      // Primary changeFlags, can be strings stating reason for change\n      dataChanged: false,\n      propsChanged: false,\n      updateTriggersChanged: false,\n      viewportChanged: false,\n      stateChanged: false,\n      extensionsChanged: false,\n\n      // Derived changeFlags\n      propsOrDataChanged: false,\n      somethingChanged: false\n    };\n  }\n\n  // Compares the layers props with old props from a matched older layer\n  // and extracts change flags that describe what has change so that state\n  // can be update correctly with minimal effort\n  diffProps(newProps, oldProps) {\n    const changeFlags = diffProps(newProps, oldProps);\n\n    // iterate over changedTriggers\n    if (changeFlags.updateTriggersChanged) {\n      for (const key in changeFlags.updateTriggersChanged) {\n        if (changeFlags.updateTriggersChanged[key]) {\n          this.invalidateAttribute(key);\n        }\n      }\n    }\n\n    // trigger uniform transitions\n    if (changeFlags.transitionsChanged) {\n      for (const key in changeFlags.transitionsChanged) {\n        // prop changed and transition is enabled\n        this.internalState.uniformTransitions.add(\n          key,\n          oldProps[key],\n          newProps[key],\n          newProps.transitions[key]\n        );\n      }\n    }\n\n    return this.setChangeFlags(changeFlags);\n  }\n\n  // Called by layer manager to validate props (in development)\n  validateProps() {\n    validateProps(this.props);\n  }\n\n  setModuleParameters(moduleParameters) {\n    for (const model of this.getModels()) {\n      model.updateModuleSettings(moduleParameters);\n    }\n  }\n\n  // PRIVATE METHODS\n  _updateModules({props, oldProps}, forceUpdate) {\n    // Picking module parameters\n    const {autoHighlight, highlightedObjectIndex, highlightColor} = props;\n    if (\n      forceUpdate ||\n      oldProps.autoHighlight !== autoHighlight ||\n      oldProps.highlightedObjectIndex !== highlightedObjectIndex ||\n      oldProps.highlightColor !== highlightColor\n    ) {\n      const parameters = {};\n      if (!autoHighlight) {\n        parameters.pickingSelectedColor = null;\n      }\n      if (Array.isArray(highlightColor)) {\n        parameters.pickingHighlightColor = highlightColor;\n      }\n\n      // highlightedObjectIndex will overwrite any settings from auto highlighting.\n      if (Number.isInteger(highlightedObjectIndex)) {\n        parameters.pickingSelectedColor =\n          highlightedObjectIndex >= 0 ? this.encodePickingColor(highlightedObjectIndex) : null;\n      }\n\n      this.setModuleParameters(parameters);\n    }\n  }\n\n  _getUpdateParams() {\n    return {\n      props: this.props,\n      oldProps: this.internalState.getOldProps(),\n      context: this.context,\n      changeFlags: this.internalState.changeFlags\n    };\n  }\n\n  // Checks state of attributes and model\n  _getNeedsRedraw(opts) {\n    // this method may be called by the render loop as soon a the layer\n    // has been created, so guard against uninitialized state\n    if (!this.internalState) {\n      return false;\n    }\n\n    let redraw = false;\n    redraw = redraw || (this.internalState.needsRedraw && this.id);\n    this.internalState.needsRedraw = this.internalState.needsRedraw && !opts.clearRedrawFlags;\n\n    // TODO - is attribute manager needed? - Model should be enough.\n    const attributeManager = this.getAttributeManager();\n    const attributeManagerNeedsRedraw = attributeManager && attributeManager.getNeedsRedraw(opts);\n    redraw = redraw || attributeManagerNeedsRedraw;\n\n    return redraw;\n  }\n\n  // Create new attribute manager\n  _getAttributeManager() {\n    return new AttributeManager(this.context.gl, {\n      id: this.props.id,\n      stats: this.context.stats,\n      timeline: this.context.timeline\n    });\n  }\n\n  _initState() {\n    assert(!this.internalState && !this.state);\n    assert(isFinite(this.props.coordinateSystem), `${this.id}: invalid coordinateSystem`);\n\n    const attributeManager = this._getAttributeManager();\n\n    if (attributeManager) {\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slightly slows down non instanced layers\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          noAlloc: true,\n          update: this.calculateInstancePickingColors\n        }\n      });\n    }\n\n    this.internalState = new LayerState({\n      attributeManager,\n      layer: this\n    });\n    this.clearChangeFlags(); // populate this.internalState.changeFlags\n\n    this.state = {};\n    // for backwards compatibility with older layers\n    // TODO - remove in next release\n    /* eslint-disable accessor-pairs */\n    Object.defineProperty(this.state, 'attributeManager', {\n      get: () => {\n        log.deprecated('layer.state.attributeManager', 'layer.getAttributeManager()');\n        return attributeManager;\n      }\n    });\n    /* eslint-enable accessor-pairs */\n\n    this.internalState.layer = this;\n    this.internalState.uniformTransitions = new UniformTransitionManager(this.context.timeline);\n    this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n  }\n\n  // Called by layer manager to transfer state from an old layer\n  _transferState(oldLayer) {\n    debug(TRACE_MATCHED, this, this === oldLayer);\n\n    const {state, internalState} = oldLayer;\n    assert(state && internalState);\n\n    if (this === oldLayer) {\n      return;\n    }\n\n    // Move internalState\n    this.internalState = internalState;\n    this.internalState.layer = this;\n\n    // Move state\n    this.state = state;\n    // We keep the state ref on old layers to support async actions\n    // oldLayer.state = null;\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    this.diffProps(this.props, this.internalState.getOldProps());\n  }\n\n  _onAsyncPropUpdated() {\n    this.diffProps(this.props, this.internalState.getOldProps());\n    this.setNeedsUpdate();\n  }\n}\n\nLayer.layerName = 'Layer';\nLayer.defaultProps = defaultProps;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer from './layer';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\n\nconst TRACE_RENDER_LAYERS = 'compositeLayer.renderLayers';\n\nexport default class CompositeLayer extends Layer {\n  get isComposite() {\n    return true;\n  }\n\n  get isLoaded() {\n    return super.isLoaded && this.getSubLayers().every(layer => layer.isLoaded);\n  }\n\n  getSubLayers() {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  initializeState() {}\n\n  // Updates selected state members and marks the composite layer to need rerender\n  setState(updateObject) {\n    super.setState(updateObject);\n    // Trigger a layer update\n    // Although conceptually layer.draw and compositeLayer.renderLayers are equivalent,\n    // they are executed during different lifecycles.\n    // draw can be called without calling updateState (e.g. most viewport changes),\n    // while renderLayers can only be called during a recursive layer update.\n    this.setNeedsUpdate();\n  }\n\n  // called to augment the info object that is bubbled up from a sublayer\n  // override Layer.getPickingInfo() because decoding / setting uniform do\n  // not apply to a composite layer.\n  // @return null to cancel event\n  getPickingInfo({info}) {\n    const {object} = info;\n    const isDataWrapped =\n      object && object.__source && object.__source.parent && object.__source.parent.id === this.id;\n\n    if (!isDataWrapped) {\n      return info;\n    }\n\n    return Object.assign(info, {\n      // override object with picked data\n      object: object.__source.object,\n      index: object.__source.index\n    });\n  }\n\n  // Implement to generate subLayers\n  renderLayers() {\n    return null;\n  }\n\n  // Returns true if sub layer needs to be rendered\n  shouldRenderSubLayer(id, data) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (data && data.length) || (overridingProps && overridingProps[id]);\n  }\n\n  // Returns sub layer class for a specific sublayer\n  getSubLayerClass(id, DefaultLayerClass) {\n    const {_subLayerProps: overridingProps} = this.props;\n\n    return (\n      (overridingProps && overridingProps[id] && overridingProps[id].type) || DefaultLayerClass\n    );\n  }\n\n  // When casting user data into another format to pass to sublayers,\n  // add reference to the original object and object index\n  getSubLayerRow(row, sourceObject, sourceObjectIndex) {\n    row.__source = {\n      parent: this,\n      object: sourceObject,\n      index: sourceObjectIndex\n    };\n    return row;\n  }\n\n  // Some composite layers cast user data into another format before passing to sublayers\n  // We need to unwrap them before calling the accessor so that they see the original data\n  // objects\n  getSubLayerAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      const objectInfo = {\n        data: this.props.data,\n        target: []\n      };\n      return (x, i) => {\n        if (x.__source) {\n          objectInfo.index = x.__source.index;\n          return accessor(x.__source.object, objectInfo);\n        }\n        return accessor(x, i);\n      };\n    }\n    return accessor;\n  }\n\n  // Returns sub layer props for a specific sublayer\n  getSubLayerProps(sublayerProps = {}) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions,\n      _subLayerProps: overridingProps\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      wrapLongitude,\n      positionFormat,\n      modelMatrix,\n      extensions\n    };\n\n    const overridingSublayerProps = overridingProps && overridingProps[sublayerProps.id];\n    const overridingSublayerTriggers =\n      overridingSublayerProps && overridingSublayerProps.updateTriggers;\n    const sublayerId = sublayerProps.id || 'sublayer';\n\n    if (overridingSublayerProps) {\n      const propTypes = this.constructor._propTypes;\n      for (const key in overridingSublayerProps) {\n        const propType = propTypes[key];\n        // eslint-disable-next-line\n        if (propType && propType.type === 'accessor') {\n          overridingSublayerProps[key] = this.getSubLayerAccessor(overridingSublayerProps[key]);\n        }\n      }\n    }\n\n    Object.assign(\n      newProps,\n      sublayerProps,\n      // experimental feature that allows users to override sublayer props via parent layer prop\n      overridingSublayerProps,\n      {\n        id: `${this.props.id}-${sublayerId}`,\n        updateTriggers: Object.assign(\n          {\n            all: this.props.updateTriggers.all\n          },\n          sublayerProps.updateTriggers,\n          overridingSublayerTriggers\n        )\n      }\n    );\n\n    // Pass through extension props\n    for (const extension of extensions) {\n      const passThroughProps = extension.getSubLayerProps.call(this, extension);\n      if (passThroughProps) {\n        Object.assign(newProps, passThroughProps, {\n          updateTriggers: Object.assign(newProps.updateTriggers, passThroughProps.updateTriggers)\n        });\n      }\n    }\n\n    return newProps;\n  }\n\n  _getAttributeManager() {\n    return null;\n  }\n\n  // Called by layer manager to render subLayers\n  _renderLayers() {\n    let {subLayers} = this.internalState;\n    const shouldUpdate = !subLayers || this.needsUpdate();\n    if (shouldUpdate) {\n      subLayers = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayers, Boolean);\n      this.internalState.subLayers = subLayers;\n    }\n    debug(TRACE_RENDER_LAYERS, this, shouldUpdate, subLayers);\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n\nCompositeLayer.layerName = 'CompositeLayer';\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {COORDINATE_SYSTEM, PROJECTION_MODE} from '../../lib/constants';\n\n// We are generating these from the js code in constants.js\nconst COORDINATE_SYSTEM_GLSL_CONSTANTS = Object.keys(COORDINATE_SYSTEM)\n  .map(key => `const int COORDINATE_SYSTEM_${key} = ${COORDINATE_SYSTEM[key]};`)\n  .join('');\nconst PROJECTION_MODE_GLSL_CONSTANTS = Object.keys(PROJECTION_MODE)\n  .map(key => `const int PROJECTION_MODE_${key} = ${PROJECTION_MODE[key]};`)\n  .join('');\n\nexport default `\\\n${COORDINATE_SYSTEM_GLSL_CONSTANTS}\n${PROJECTION_MODE_GLSL_CONSTANTS}\n\nuniform int project_uCoordinateSystem;\nuniform int project_uProjectionMode;\nuniform float project_uScale;\nuniform bool project_uWrapLongitude;\nuniform float project_uAntimeridian;\nuniform vec3 project_uCommonUnitsPerMeter;\nuniform vec3 project_uCommonUnitsPerWorldUnit;\nuniform vec3 project_uCommonUnitsPerWorldUnit2;\nuniform vec4 project_uCenter;\nuniform mat4 project_uModelMatrix;\nuniform mat4 project_uViewProjectionMatrix;\nuniform vec2 project_uViewportSize;\nuniform float project_uDevicePixelRatio;\nuniform float project_uFocalDistance;\nuniform vec3 project_uCameraPosition;\nuniform vec3 project_uCoordinateOrigin;\n\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0; // meters\nconst float GLOBE_RADIUS = 256.0;\n\n//\n// Scaling offsets - scales meters to \"world distance\"\n// Note the scalar version of project_size is for scaling the z component only\n//\nfloat project_size(float meters) {\n  return meters * project_uCommonUnitsPerMeter.z;\n}\n\nvec2 project_size(vec2 meters) {\n  return meters * project_uCommonUnitsPerMeter.xy;\n}\n\nvec3 project_size(vec3 meters) {\n  return meters * project_uCommonUnitsPerMeter;\n}\n\nvec4 project_size(vec4 meters) {\n  return vec4(meters.xyz * project_uCommonUnitsPerMeter, meters.w);\n}\n\n//\n// Projecting normal - transform deltas from current coordinate system to\n// normals in the worldspace\n//\nvec3 project_normal(vec3 vector) {\n  // Apply model matrix\n  vec4 normal_modelspace = project_uModelMatrix * vec4(vector, 0.0);\n  return normalize(normal_modelspace.xyz * project_uCommonUnitsPerMeter);\n}\n\nvec4 project_offset_(vec4 offset) {\n  float dy = offset.y;\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n    dy = clamp(dy, -1., 1.);\n  }\n  vec3 commonUnitsPerWorldUnit = project_uCommonUnitsPerWorldUnit + project_uCommonUnitsPerWorldUnit2 * dy;\n  return vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\n\n//\n// Projecting positions - non-linear projection: lnglats => unit tile [0-1, 0-1]\n//\nvec2 project_mercator_(vec2 lnglat) {\n  float x = lnglat.x;\n  if (project_uWrapLongitude) {\n    x = mod(x - project_uAntimeridian, 360.0) + project_uAntimeridian;\n  }\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n  );\n}\n\nvec3 project_globe_(vec3 lnglatz) {\n  float lambda = radians(lnglatz.x);\n  float phi = radians(lnglatz.y);\n  float cosPhi = cos(phi);\n  float D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n\n  return vec3(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\n\n//\n// Projects positions (defined by project_uCoordinateSystem) to common space (defined by project_uProjectionMode)\n//\nvec4 project_position(vec4 position, vec3 position64Low) {\n  vec4 position_world = project_uModelMatrix * position;\n\n  // Work around for a Mac+NVIDIA bug https://github.com/visgl/deck.gl/issues/4145\n  if (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_mercator_(position_world.xy) * WORLD_SCALE,\n        project_size(position_world.z),\n        position_world.w\n      );\n    }\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world.xyz += project_uCoordinateOrigin;\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project_uProjectionMode == PROJECTION_MODE_IDENTITY ||\n    (project_uProjectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n    (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n     project_uCoordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    // Subtract high part of 64 bit value. Convert remainder to float32, preserving precision.\n    position_world.xyz -= project_uCoordinateOrigin;\n  }\n\n  // Translation is already added to the high parts\n  return project_offset_(position_world + project_uModelMatrix * vec4(position64Low, 0.0));\n}\n\nvec4 project_position(vec4 position) {\n  return project_position(position, ZERO_64_LOW);\n}\n\nvec3 project_position(vec3 position, vec3 position64Low) {\n  vec4 projected_position = project_position(vec4(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nvec3 project_position(vec3 position) {\n  vec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nvec2 project_position(vec2 position) {\n  vec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\n  return viewProjectionMatrix * position + center;\n}\n\n//\n// Projects from common space coordinates to clip space.\n// Uses project_uViewProjectionMatrix\n//\nvec4 project_common_position_to_clipspace(vec4 position) {\n  return project_common_position_to_clipspace(position, project_uViewProjectionMatrix, project_uCenter);\n}\n\n// Returns a clip space offset that corresponds to a given number of screen pixels\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\n  vec2 offset = pixels / project_uViewportSize * project_uDevicePixelRatio * 2.0;\n  return offset * project_uFocalDistance;\n}\n\nfloat project_size_to_pixel(float meters) {\n  return project_size(meters) * project_uScale;\n}\nfloat project_pixel_size(float pixels) {\n  return pixels / project_uScale;\n}\nvec2 project_pixel_size(vec2 pixels) {\n  return pixels / project_uScale;\n}\n\n// Get rotation matrix that aligns the z axis with the given up vector\n// Find 3 unit vectors ux, uy, uz that are perpendicular to each other and uz == up\nmat3 project_get_orientation_matrix(vec3 up) {\n  vec3 uz = normalize(up);\n  // Tangent on XY plane\n  vec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\n  vec3 uy = cross(uz, ux);\n  return mat3(ux, uy, uz);\n}\n\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    transform = project_get_orientation_matrix(commonPosition);\n    return true;\n  }\n  return false;\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {fp32} from '@luma.gl/core';\nimport projectShader from './project.glsl';\nimport {getUniformsFromViewport} from './viewport-uniforms';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (opts.viewport) {\n    return getUniformsFromViewport(opts);\n  }\n  return {};\n}\n\nexport default {\n  name: 'project',\n  dependencies: [fp32],\n  vs: projectShader,\n  getUniforms\n};\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport project from '../project/project';\n\nconst vs = `\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  if (project_uProjectionMode == PROJECTION_MODE_GLOBE) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    mat3 rotation = project_get_orientation_matrix(projectedPosition);\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n`;\n\nexport default {\n  name: 'project32',\n  dependencies: [project],\n  vs\n};\n","import {picking} from '@luma.gl/core';\n\nexport default Object.assign(\n  {\n    inject: {\n      'vs:DECKGL_FILTER_COLOR': `\n    picking_setPickingColor(geometry.pickingColor);\n    // for picking depth values\n    picking_setPickingAttribute(geometry.position.z);\n    `,\n      'fs:DECKGL_FILTER_COLOR': {\n        order: 99,\n        injection: `\n    // use highlight color if this fragment belongs to the selected object.\n    color = picking_filterHighlightColor(color);\n\n    // use picking color if rendering to picking FBO.\n    color = picking_filterPickingColor(color);\n      `\n      }\n    }\n  },\n  picking\n);\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  radiusUnits: 'meters',\n  radiusScale: {type: 'number', min: 0, value: 1},\n  radiusMinPixels: {type: 'number', min: 0, value: 0}, //  min point radius in pixels\n  radiusMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max point radius in pixels\n\n  lineWidthUnits: 'meters',\n  lineWidthScale: {type: 'number', min: 0, value: 1},\n  lineWidthMinPixels: {type: 'number', min: 0, value: 0},\n  lineWidthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n\n  stroked: false,\n  filled: true,\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getRadius: {type: 'accessor', value: 1},\n  getFillColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineWidth: {type: 'accessor', value: 1},\n\n  // deprecated\n  strokeWidth: {deprecatedFor: 'getLineWidth'},\n  outline: {deprecatedFor: 'stroked'},\n  getColor: {deprecatedFor: ['getFillColor', 'getLineColor']}\n};\n\nexport default class ScatterplotLayer extends Layer {\n  getShaders(id) {\n    return super.getShaders({vs, fs, modules: [project32, picking]});\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: this.props.colorFormat.length,\n        transition: true,\n        normalized: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {\n      radiusUnits,\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n\n    const pointRadiusMultiplier = radiusUnits === 'pixels' ? viewport.metersPerPixel : 1;\n    const lineWidthMultiplier = lineWidthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n\n    this.state.model\n      .setUniforms(uniforms)\n      .setUniforms({\n        stroked: stroked ? 1 : 0,\n        filled,\n        radiusScale: radiusScale * pointRadiusMultiplier,\n        radiusMinPixels,\n        radiusMaxPixels,\n        lineWidthScale: lineWidthScale * lineWidthMultiplier,\n        lineWidthMinPixels,\n        lineWidthMaxPixels\n      })\n      .draw();\n  }\n\n  _getModel(gl) {\n    // a square that minimally cover the unit circle\n    const positions = [-1, -1, 0, 1, -1, 0, 1, 1, 0, -1, 1, 0];\n\n    return new Model(\n      gl,\n      Object.assign(this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_FAN,\n          vertexCount: 4,\n          attributes: {\n            positions: {size: 3, value: new Float32Array(positions)}\n          }\n        }),\n        isInstanced: true\n      })\n    );\n  }\n}\n\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME scatterplot-layer-vertex-shader\n\nattribute vec3 positions;\n\nattribute vec3 instancePositions;\nattribute vec3 instancePositions64Low;\nattribute float instanceRadius;\nattribute float instanceLineWidths;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\nuniform float opacity;\nuniform float radiusScale;\nuniform float radiusMinPixels;\nuniform float radiusMaxPixels;\nuniform float lineWidthScale;\nuniform float lineWidthMinPixels;\nuniform float lineWidthMaxPixels;\nuniform float stroked;\nuniform bool filled;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.worldPosition = instancePositions;\n\n  // Multiply out radius and clamp to limits\n  outerRadiusPixels = clamp(\n    project_size_to_pixel(radiusScale * instanceRadius),\n    radiusMinPixels, radiusMaxPixels\n  );\n  \n  // Multiply out line width and clamp to limits\n  float lineWidthPixels = clamp(\n    project_size_to_pixel(lineWidthScale * instanceLineWidths),\n    lineWidthMinPixels, lineWidthMaxPixels\n  );\n\n  // outer radius needs to offset by half stroke width\n  outerRadiusPixels += stroked * lineWidthPixels / 2.0;\n\n  // position on the containing square in [-1, 1] space\n  unitPosition = positions.xy;\n  geometry.uv = unitPosition;\n  geometry.pickingColor = instancePickingColors;\n\n  innerUnitRadius = 1.0 - stroked * lineWidthPixels / outerRadiusPixels;\n  \n  vec3 offset = positions * project_pixel_size(outerRadiusPixels);\n  DECKGL_FILTER_SIZE(offset, geometry);\n  gl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  // Apply opacity to instance color, or return instance picking color\n  vFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * opacity);\n  DECKGL_FILTER_COLOR(vFillColor, geometry);\n  vLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * opacity);\n  DECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME scatterplot-layer-fragment-shader\n\nprecision highp float;\n\nuniform bool filled;\nuniform float stroked;\n\nvarying vec4 vFillColor;\nvarying vec4 vLineColor;\nvarying vec2 unitPosition;\nvarying float innerUnitRadius;\nvarying float outerRadiusPixels;\n\nvoid main(void) {\n  geometry.uv = unitPosition;\n\n  float distToCenter = length(unitPosition) * outerRadiusPixels;\n  float inCircle = smoothedge(distToCenter, outerRadiusPixels);\n\n  if (inCircle == 0.0) {\n    discard;\n  }\n\n  if (stroked > 0.5) {\n    float isLine = smoothedge(innerUnitRadius * outerRadiusPixels, distToCenter);\n    if (filled) {\n      gl_FragColor = mix(vFillColor, vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        discard;\n      }\n      gl_FragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n    }\n  } else if (filled) {\n    gl_FragColor = vFillColor;\n  } else {\n    discard;\n  }\n\n  gl_FragColor.a *= inCircle;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {createIterable, getAccessorFromBuffer} from './iterable-utils';\nimport defaultTypedArrayManager from './typed-array-manager';\nimport assert from './assert';\n\nimport {Buffer} from '@luma.gl/core';\n\nexport default class Tesselator {\n  constructor(opts = {}) {\n    const {attributes = {}} = opts;\n\n    this.typedArrayManager = defaultTypedArrayManager;\n    this.indexStarts = null;\n    this.vertexStarts = null;\n    this.vertexCount = 0;\n    this.instanceCount = 0;\n    this.attributes = {};\n    this._attributeDefs = attributes;\n    this.opts = opts;\n\n    this.updateGeometry(opts);\n\n    Object.seal(this);\n  }\n\n  /* Public methods */\n  updateGeometry(opts) {\n    Object.assign(this.opts, opts);\n    const {\n      data,\n      buffers = {},\n      getGeometry,\n      geometryBuffer,\n      positionFormat,\n      dataChanged,\n      normalize = true\n    } = this.opts;\n    this.data = data;\n    this.getGeometry = getGeometry;\n    this.positionSize =\n      (geometryBuffer && geometryBuffer.size) || (positionFormat === 'XY' ? 2 : 3);\n    this.buffers = buffers;\n    this.normalize = normalize;\n\n    // Handle external logical value\n    if (geometryBuffer) {\n      assert(data.startIndices, 'binary data missing startIndices');\n      this.getGeometry = this.getGeometryFromBuffer(geometryBuffer);\n\n      if (!normalize) {\n        // skip packing and set attribute value directly\n        // TODO - avoid mutating user-provided object\n        buffers.positions = geometryBuffer;\n      }\n    }\n    this.geometryBuffer = buffers.positions;\n\n    if (Array.isArray(dataChanged)) {\n      // is partial update\n      for (const dataRange of dataChanged) {\n        this._rebuildGeometry(dataRange);\n      }\n    } else {\n      this._rebuildGeometry();\n    }\n  }\n\n  updatePartialGeometry({startRow, endRow}) {\n    this._rebuildGeometry({startRow, endRow});\n  }\n\n  /* Subclass interface */\n  normalizeGeometry(geometry) {\n    return geometry;\n  }\n\n  // Update the positions of a single geometry\n  updateGeometryAttributes(geometry, startIndex, size) {\n    throw new Error('Not implemented');\n  }\n\n  // Returns the number of vertices in a geometry\n  getGeometrySize(geometry) {\n    throw new Error('Not implemented');\n  }\n\n  getGeometryFromBuffer(geometryBuffer) {\n    const value = geometryBuffer.value || geometryBuffer;\n    assert(ArrayBuffer.isView(value), 'cannot read geometries');\n\n    return getAccessorFromBuffer(value, {\n      size: this.positionSize,\n      offset: geometryBuffer.offset,\n      stride: geometryBuffer.stride,\n      startIndices: this.data.startIndices\n    });\n  }\n\n  /* Private utility methods */\n  _allocate(instanceCount, copy) {\n    // allocate attributes\n    const {attributes, buffers, _attributeDefs, typedArrayManager} = this;\n    for (const name in _attributeDefs) {\n      if (name in buffers) {\n        // Use external buffer\n        typedArrayManager.release(attributes[name]);\n        attributes[name] = null;\n      } else {\n        const def = _attributeDefs[name];\n        // If dataRange is supplied, this is a partial update.\n        // In case we need to reallocate the typed array, it will need the old values copied\n        // before performing partial update.\n        def.copy = copy;\n\n        attributes[name] = typedArrayManager.allocate(attributes[name], instanceCount, def);\n      }\n    }\n  }\n\n  /**\n   * Visit all objects\n   * `data` is expected to be an iterable consistent with the base Layer expectation\n   */\n  _forEachGeometry(visitor, startRow, endRow) {\n    const {data, getGeometry} = this;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const geometry = getGeometry(object, objectInfo);\n      visitor(geometry, objectInfo.index);\n    }\n  }\n\n  /* eslint-disable complexity,max-statements */\n  _rebuildGeometry(dataRange) {\n    if (!this.data || !this.getGeometry) {\n      return;\n    }\n\n    let {indexStarts, vertexStarts, instanceCount} = this;\n    const {data, geometryBuffer} = this;\n    const {startRow = 0, endRow = Infinity} = dataRange || {};\n\n    const normalizedData = {};\n\n    if (!dataRange) {\n      // Full update - regenerate buffer layout from scratch\n      indexStarts = [0];\n      vertexStarts = [0];\n    }\n    if (this.normalize || !geometryBuffer) {\n      this._forEachGeometry(\n        (geometry, dataIndex) => {\n          geometry = this.normalizeGeometry(geometry);\n          normalizedData[dataIndex] = geometry;\n          vertexStarts[dataIndex + 1] = vertexStarts[dataIndex] + this.getGeometrySize(geometry);\n        },\n        startRow,\n        endRow\n      );\n      // count instances\n      instanceCount = vertexStarts[vertexStarts.length - 1];\n    } else if (geometryBuffer.buffer instanceof Buffer) {\n      const byteStride = geometryBuffer.stride || this.positionSize * 4;\n      // assume user provided data is already normalized\n      vertexStarts = data.startIndices;\n      instanceCount = vertexStarts[data.length] || geometryBuffer.buffer.byteLength / byteStride;\n    } else {\n      const bufferValue = geometryBuffer.value || geometryBuffer;\n      const elementStride =\n        geometryBuffer.stride / bufferValue.BYTES_PER_ELEMENT || this.positionSize;\n      // assume user provided data is already normalized\n      vertexStarts = data.startIndices;\n      instanceCount = vertexStarts[data.length] || bufferValue.length / elementStride;\n    }\n\n    // allocate attributes\n    this._allocate(instanceCount, Boolean(dataRange));\n\n    this.indexStarts = indexStarts;\n    this.vertexStarts = vertexStarts;\n    this.instanceCount = instanceCount;\n\n    const context = {};\n\n    this._forEachGeometry(\n      (geometry, dataIndex) => {\n        geometry = normalizedData[dataIndex] || geometry;\n        context.vertexStart = vertexStarts[dataIndex];\n        context.indexStart = indexStarts[dataIndex];\n        const vertexEnd =\n          dataIndex < vertexStarts.length - 1 ? vertexStarts[dataIndex + 1] : instanceCount;\n        context.geometrySize = vertexEnd - vertexStarts[dataIndex];\n        context.geometryIndex = dataIndex;\n        this.updateGeometryAttributes(geometry, context);\n      },\n      startRow,\n      endRow\n    );\n\n    this.vertexCount = indexStarts[indexStarts.length - 1];\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {Tesselator} from '@deck.gl/core';\nimport {normalizePath} from './path';\n\nconst START_CAP = 1;\nconst END_CAP = 2;\nconst INVALID = 4;\n\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nexport default class PathTesselator extends Tesselator {\n  constructor(opts) {\n    super({\n      ...opts,\n      attributes: {\n        // Padding covers shaderAttributes for last segment in largest case fp64\n        // additional vertex + hi & low parts, 3 * 6\n        positions: {\n          size: 3,\n          padding: 18,\n          initialize: true,\n          type: opts.fp64 ? Float64Array : Float32Array\n        },\n        segmentTypes: {size: 1, type: Uint8ClampedArray}\n      }\n    });\n  }\n\n  getGeometryFromBuffer(buffer) {\n    if (this.normalize) {\n      return super.getGeometryFromBuffer(buffer);\n    }\n    // we don't need to read the positions if no normalization\n    return () => null;\n  }\n\n  normalizeGeometry(path) {\n    if (this.normalize) {\n      return normalizePath(path, this.positionSize, this.opts.resolution, this.opts.wrapLongitude);\n    }\n    return path;\n  }\n\n  /* Getters */\n  get(attributeName) {\n    return this.attributes[attributeName];\n  }\n\n  /* Implement base Tesselator interface */\n  getGeometrySize(path) {\n    if (Array.isArray(path[0])) {\n      let size = 0;\n      for (const subPath of path) {\n        size += this.getGeometrySize(subPath);\n      }\n      return size;\n    }\n    const numPoints = this.getPathLength(path);\n    if (numPoints < 2) {\n      // invalid path\n      return 0;\n    }\n    if (this.isClosed(path)) {\n      // minimum 3 vertices\n      return numPoints < 3 ? 0 : numPoints + 2;\n    }\n    return numPoints;\n  }\n\n  updateGeometryAttributes(path, context) {\n    if (context.geometrySize === 0) {\n      return;\n    }\n    if (path && Array.isArray(path[0])) {\n      for (const subPath of path) {\n        const geometrySize = this.getGeometrySize(subPath);\n        context.geometrySize = geometrySize;\n        this.updateGeometryAttributes(subPath, context);\n        context.vertexStart += geometrySize;\n      }\n    } else {\n      this._updateSegmentTypes(path, context);\n      this._updatePositions(path, context);\n    }\n  }\n\n  _updateSegmentTypes(path, context) {\n    const {segmentTypes} = this.attributes;\n    const isPathClosed = this.isClosed(path);\n    const {vertexStart, geometrySize} = context;\n\n    // positions   --  A0 A1 B0 B1 B2 B3 B0 B1 B2 --\n    // segmentTypes     3  4  4  0  0  0  0  4  4\n    segmentTypes.fill(0, vertexStart, vertexStart + geometrySize);\n    if (isPathClosed) {\n      segmentTypes[vertexStart] = INVALID;\n      segmentTypes[vertexStart + geometrySize - 2] = INVALID;\n    } else {\n      segmentTypes[vertexStart] += START_CAP;\n      segmentTypes[vertexStart + geometrySize - 2] += END_CAP;\n    }\n    segmentTypes[vertexStart + geometrySize - 1] = INVALID;\n  }\n\n  _updatePositions(path, context) {\n    const {positions} = this.attributes;\n    if (!positions) {\n      return;\n    }\n    const {vertexStart, geometrySize} = context;\n    const p = new Array(3);\n\n    // positions   --  A0 A1 B0 B1 B2 B3 B0 B1 B2 --\n    // segmentTypes     3  4  4  0  0  0  0  4  4\n    for (let i = vertexStart, ptIndex = 0; ptIndex < geometrySize; i++, ptIndex++) {\n      this.getPointOnPath(path, ptIndex, p);\n      positions[i * 3] = p[0];\n      positions[i * 3 + 1] = p[1];\n      positions[i * 3 + 2] = p[2];\n    }\n  }\n\n  /* Utilities */\n  // Returns the number of points in the path\n  getPathLength(path) {\n    return path.length / this.positionSize;\n  }\n\n  // Returns a point on the path at the specified index\n  getPointOnPath(path, index, target = []) {\n    const {positionSize} = this;\n    if (index * positionSize >= path.length) {\n      // loop\n      index += 1 - path.length / positionSize;\n    }\n    const i = index * positionSize;\n    target[0] = path[i];\n    target[1] = path[i + 1];\n    target[2] = (positionSize === 3 && path[i + 2]) || 0;\n    return target;\n  }\n\n  // Returns true if the first and last points are identical\n  isClosed(path) {\n    if (!this.normalize) {\n      return this.opts.loop;\n    }\n    const {positionSize} = this;\n    const lastPointIndex = path.length - positionSize;\n    return (\n      path[0] === path[lastPointIndex] &&\n      path[1] === path[lastPointIndex + 1] &&\n      (positionSize === 2 || path[2] === path[lastPointIndex + 2])\n    );\n  }\n}\n","import {cutPolylineByGrid, cutPolylineByMercatorBounds} from '@math.gl/polygon';\n\n/** Returns a flat array of path positions\n * Flattens a nested path object\n * Cut the feature if needed (globe projection, wrap longitude, etc.)\n */\nexport function normalizePath(path, size, gridResolution, wrapLongitude) {\n  let flatPath = path;\n  if (Array.isArray(path[0])) {\n    const length = path.length * size;\n    flatPath = new Array(length);\n    for (let i = 0; i < path.length; i++) {\n      for (let j = 0; j < size; j++) {\n        flatPath[i * size + j] = path[i][j] || 0;\n      }\n    }\n  }\n  if (gridResolution) {\n    return cutPolylineByGrid(flatPath, {size, gridResolution});\n  }\n  if (wrapLongitude) {\n    return cutPolylineByMercatorBounds(flatPath, {size});\n  }\n  return flatPath;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, picking, log} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry} from '@luma.gl/core';\n\nimport PathTesselator from './path-tesselator';\n\nimport vs from './path-layer-vertex.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthUnits: 'meters',\n  widthScale: {type: 'number', min: 0, value: 1}, // stroke width in meters\n  widthMinPixels: {type: 'number', min: 0, value: 0}, //  min stroke width in pixels\n  widthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max stroke width in pixels\n  rounded: false,\n  miterLimit: {type: 'number', min: 0, value: 4},\n  billboard: false,\n  // `loop` or `open`\n  _pathType: null,\n\n  getPath: {type: 'accessor', value: object => object.path},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1}\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return super.getShaders({vs, fs, modules: [project32, picking]}); // 'project' module added by default.\n  }\n\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      positions: {\n        size: 3,\n        // Start filling buffer from 1 vertex in\n        vertexOffset: 1,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          instanceLeftPositions: {\n            vertexOffset: 0\n          },\n          instanceStartPositions: {\n            vertexOffset: 1\n          },\n          instanceEndPositions: {\n            vertexOffset: 2\n          },\n          instanceRightPositions: {\n            vertexOffset: 3\n          }\n        }\n      },\n      instanceTypes: {\n        size: 1,\n        type: GL.UNSIGNED_BYTE,\n        update: this.calculateSegmentTypes,\n        noAlloc\n      },\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: 1\n      },\n      instanceColors: {\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {\n        size: 3,\n        type: GL.UNSIGNED_BYTE,\n        accessor: (object, {index, target: value}) =>\n          this.encodePickingColor(object && object.__source ? object.__source.index : index, value)\n      }\n    });\n    /* eslint-enable max-len */\n\n    this.setState({\n      pathTesselator: new PathTesselator({\n        fp64: this.use64bitPositions()\n      })\n    });\n\n    if (this.props.getDashArray && !this.props.extensions.length) {\n      log.removed('getDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const attributeManager = this.getAttributeManager();\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      const {pathTesselator} = this.state;\n      const buffers = props.data.attributes || {};\n\n      pathTesselator.updateGeometry({\n        data: props.data,\n        geometryBuffer: buffers.getPath,\n        buffers,\n        normalize: !props._pathType,\n        loop: props._pathType === 'loop',\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        // TODO - move the flag out of the viewport\n        resolution: this.context.viewport.resolution,\n        dataChanged: changeFlags.dataChanged\n      });\n      this.setState({\n        numInstances: pathTesselator.instanceCount,\n        startIndices: pathTesselator.vertexStarts\n      });\n      if (!changeFlags.dataChanged) {\n        // Base `layer.updateState` only invalidates all attributes on data change\n        // Cover the rest of the scenarios here\n        attributeManager.invalidateAll();\n      }\n    }\n\n    if (changeFlags.extensionsChanged) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      attributeManager.invalidateAll();\n    }\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n    const {index} = info;\n    const {data} = this.props;\n\n    if (data[0] && data[0].__source) {\n      // data is wrapped\n      info.object = data.find(d => d.__source.index === index);\n    }\n    return info;\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {\n      rounded,\n      billboard,\n      miterLimit,\n      widthUnits,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels\n    } = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.metersPerPixel : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          jointType: Number(rounded),\n          billboard,\n          widthScale: widthScale * widthMultiplier,\n          miterLimit,\n          widthMinPixels,\n          widthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    // prettier-ignore\n    const SEGMENT_INDICES = [\n      // start corner\n      0, 1, 2,\n      // body\n      1, 4, 2,\n      1, 3, 4,\n      // end corner\n      3, 5, 4\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center (joint), 1: right\n    // prettier-ignore\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0, 0,\n      // start inner corner\n      0, -1,\n      // start outer corner\n      0, 1,\n      // end inner corner\n      1, -1,\n      // end outer corner\n      1, 1,\n      // bevel end corner\n      1, 0\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: {value: new Float32Array(SEGMENT_POSITIONS), size: 2}\n          }\n        }),\n        isInstanced: true\n      })\n    );\n  }\n\n  calculatePositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('positions');\n  }\n\n  calculateSegmentTypes(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.startIndices = pathTesselator.vertexStarts;\n    attribute.value = pathTesselator.get('segmentTypes');\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME path-layer-vertex-shader\n\nattribute vec2 positions;\n\nattribute float instanceTypes;\nattribute vec3 instanceStartPositions;\nattribute vec3 instanceEndPositions;\nattribute vec3 instanceLeftPositions;\nattribute vec3 instanceRightPositions;\nattribute vec3 instanceLeftPositions64Low;\nattribute vec3 instanceStartPositions64Low;\nattribute vec3 instanceEndPositions64Low;\nattribute vec3 instanceRightPositions64Low;\nattribute float instanceStrokeWidths;\nattribute vec4 instanceColors;\nattribute vec3 instancePickingColors;\n\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\nuniform float jointType;\nuniform float miterLimit;\nuniform bool billboard;\n\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\nvarying vec2 vPathPosition;\nvarying float vPathLength;\n\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\n\nfloat flipIfTrue(bool flag) {\n  return -(float(flag) * 2. - 1.);\n}\n\n// calculate line join positions\nvec3 lineJoin(\n  vec3 prevPoint, vec3 currPoint, vec3 nextPoint,\n  vec2 width\n) {\n  bool isEnd = positions.x > 0.0;\n  // side of the segment - -1: left, 0: center, 1: right\n  float sideOfPath = positions.y;\n  float isJoint = float(sideOfPath == 0.0);\n\n  vec3 deltaA3 = (currPoint - prevPoint);\n  vec3 deltaB3 = (nextPoint - currPoint);\n\n  mat3 rotationMatrix;\n  bool needsRotation = !billboard && project_needs_rotation(currPoint, rotationMatrix);\n  if (needsRotation) {\n    deltaA3 = deltaA3 * rotationMatrix;\n    deltaB3 = deltaB3 * rotationMatrix;\n  }\n  vec2 deltaA = deltaA3.xy / width;\n  vec2 deltaB = deltaB3.xy / width;\n\n  float lenA = length(deltaA);\n  float lenB = length(deltaB);\n\n  vec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\n  vec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\n\n  vec2 perpA = vec2(-dirA.y, dirA.x);\n  vec2 perpB = vec2(-dirB.y, dirB.x);\n\n  // tangent of the corner\n  vec2 tangent = dirA + dirB;\n  tangent = length(tangent) > 0. ? normalize(tangent) : perpA;\n  // direction of the corner\n  vec2 miterVec = vec2(-tangent.y, tangent.x);\n  // direction of the segment\n  vec2 dir = isEnd ? dirA : dirB;\n  // direction of the extrusion\n  vec2 perp = isEnd ? perpA : perpB;\n  // length of the segment\n  float L = isEnd ? lenA : lenB;\n\n  // A = angle of the corner\n  float sinHalfA = abs(dot(miterVec, perp));\n  float cosHalfA = abs(dot(dirA, miterVec));\n\n  // -1: right, 1: left\n  float turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\n\n  // relative position to the corner:\n  // -1: inside (smaller side of the angle)\n  // 0: center\n  // 1: outside (bigger side of the angle)\n  float cornerPosition = sideOfPath * turnDirection;\n\n  float miterSize = 1.0 / max(sinHalfA, EPSILON);\n  // trim if inside corner extends further than the line segment\n  miterSize = mix(\n    min(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\n    miterSize,\n    step(0.0, cornerPosition)\n  );\n\n  vec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n    * (sideOfPath + isJoint * turnDirection);\n\n  // special treatment for start cap and end cap\n  bool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\n  bool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\n  bool isCap = isStartCap || isEndCap;\n\n  // extend out a triangle to envelope the round cap\n  if (isCap) {\n    offsetVec = mix(perp * sideOfPath, dir * jointType * 4.0 * flipIfTrue(isStartCap), isJoint);\n  }\n\n  // Generate variables for fragment shader\n  vPathLength = L;\n  vCornerOffset = offsetVec;\n  vMiterLength = dot(vCornerOffset, miterVec * turnDirection);\n  vMiterLength = isCap ? isJoint : vMiterLength;\n\n  vec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\n  vPathPosition = vec2(\n    dot(offsetFromStartOfPath, perp),\n    dot(offsetFromStartOfPath, dir)\n  );\n  geometry.uv = vPathPosition;\n\n  float isValid = step(instanceTypes, 3.5);\n  vec3 offset = vec3(offsetVec * width * isValid, 0.0);\n\n  if (needsRotation) {\n    offset = rotationMatrix * offset;\n  }\n  return currPoint + offset;\n}\n\n// In clipspace extrusion, if a line extends behind the camera, clip it to avoid visual artifacts\nvoid clipLine(inout vec4 position, vec4 refPosition) {\n  if (position.w < EPSILON) {\n    float r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\n    position = refPosition + (position - refPosition) * r;\n  }\n}\n\nvoid main() {\n  geometry.worldPosition = instanceStartPositions;\n  geometry.worldPositionAlt = instanceEndPositions;\n  geometry.pickingColor = instancePickingColors;\n\n  vec2 widthPixels = vec2(clamp(project_size_to_pixel(instanceStrokeWidths * widthScale),\n    widthMinPixels, widthMaxPixels) / 2.0);\n  vec3 width;\n\n  vColor = vec4(instanceColors.rgb, instanceColors.a * opacity);\n\n  float isEnd = positions.x;\n\n  vec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\n  vec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\n\n  vec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\n  vec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\n\n  vec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\n  vec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\n\n  if (billboard) {\n    // Extrude in clipspace\n    vec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\n    vec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\n    vec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\n\n    clipLine(prevPositionScreen, currPositionScreen);\n    clipLine(nextPositionScreen, currPositionScreen);\n    clipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\n\n    width = vec3(widthPixels, 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec3 pos = lineJoin(\n      prevPositionScreen.xyz / prevPositionScreen.w,\n      currPositionScreen.xyz / currPositionScreen.w,\n      nextPositionScreen.xyz / nextPositionScreen.w,\n      project_pixel_size_to_clipspace(width.xy)\n    );\n\n    gl_Position = vec4(pos * currPositionScreen.w, currPositionScreen.w);\n  } else {\n    // Extrude in commonspace\n    prevPosition = project_position(prevPosition, prevPosition64Low);\n    currPosition = project_position(currPosition, currPosition64Low);\n    nextPosition = project_position(nextPosition, nextPosition64Low);\n\n    width = vec3(project_pixel_size(widthPixels), 0.0);\n    DECKGL_FILTER_SIZE(width, geometry);\n\n    vec4 pos = vec4(\n      lineJoin(prevPosition, currPosition, nextPosition, width.xy),\n      1.0);\n    geometry.position = pos;\n    gl_Position = project_common_position_to_clipspace(pos);\n  }\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME path-layer-fragment-shader\n\nprecision highp float;\n\nuniform float jointType;\nuniform float miterLimit;\n\nvarying vec4 vColor;\nvarying vec2 vCornerOffset;\nvarying float vMiterLength;\n/*\n * vPathPosition represents the relative coordinates of the current fragment on the path segment.\n * vPathPosition.x - position along the width of the path, between [-1, 1]. 0 is the center line.\n * vPathPosition.y - position along the length of the path, between [0, L / width].\n */\nvarying vec2 vPathPosition;\nvarying float vPathLength;\n\nvoid main(void) {\n  geometry.uv = vPathPosition;\n\n  if (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\n    // if joint is rounded, test distance from the corner\n    if (jointType > 0.0 && length(vCornerOffset) > 1.0) {\n      discard;\n    }\n    // trim miter\n    if (jointType == 0.0 && vMiterLength > miterLimit + 1.0) {\n      discard;\n    }\n  }\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable max-params */\nimport earcut from 'earcut';\n\n// 4 data formats are supported:\n// Simple Polygon: an array of points\n// Complex Polygon: an array of array of points (array of rings)\n//   with the first ring representing the outer hull and other rings representing holes\n// Simple Flat: an array of numbers (flattened \"simple polygon\")\n// Complex Flat: {position: array<number>, holeIndices: array<number>}\n//   (flattened \"complex polygon\")\n\n/**\n * Ensure a polygon is valid format\n * @param {Array|Object} polygon\n */\nfunction validate(polygon) {\n  polygon = (polygon && polygon.positions) || polygon;\n  if (!Array.isArray(polygon) && !ArrayBuffer.isView(polygon)) {\n    throw new Error('invalid polygon');\n  }\n}\n\n/**\n * Check if a polygon is simple or complex\n * @param {Array} polygon - either a complex or simple polygon\n * @return {Boolean} - true if the polygon is a simple polygon (i.e. not an array of polygons)\n */\nfunction isSimple(polygon) {\n  return polygon.length >= 1 && polygon[0].length >= 2 && Number.isFinite(polygon[0][0]);\n}\n\n/**\n * Check if a simple polygon is a closed ring\n * @param {Array} simplePolygon - array of points\n * @return {Boolean} - true if the simple polygon is a closed ring\n */\nfunction isNestedRingClosed(simplePolygon) {\n  // check if first and last vertex are the same\n  const p0 = simplePolygon[0];\n  const p1 = simplePolygon[simplePolygon.length - 1];\n\n  return p0[0] === p1[0] && p0[1] === p1[1] && p0[2] === p1[2];\n}\n\n/**\n * Check if a simple flat array is a closed ring\n * @param {Array} positions - array of numbers\n * @param {Number} size - size of a position, 2 (xy) or 3 (xyz)\n * @param {Number} startIndex - start index of the path in the positions array\n * @param {Number} endIndex - end index of the path in the positions array\n * @return {Boolean} - true if the simple flat array is a closed ring\n */\nfunction isFlatRingClosed(positions, size, startIndex, endIndex) {\n  for (let i = 0; i < size; i++) {\n    if (positions[startIndex + i] !== positions[endIndex - size + i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Copy a simple polygon coordinates into a flat array, closes the ring if needed.\n * @param {Float64Array} target - destination\n * @param {Number} targetStartIndex - index in the destination to start copying into\n * @param {Array} simplePolygon - array of points\n * @param {Number} size - size of a position, 2 (xy) or 3 (xyz)\n * @returns {Number} - the index of the write head in the destination\n */\nfunction copyNestedRing(target, targetStartIndex, simplePolygon, size) {\n  let targetIndex = targetStartIndex;\n  const len = simplePolygon.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[i][j] || 0;\n    }\n  }\n\n  if (!isNestedRingClosed(simplePolygon)) {\n    for (let j = 0; j < size; j++) {\n      target[targetIndex++] = simplePolygon[0][j] || 0;\n    }\n  }\n  return targetIndex;\n}\n\n/**\n * Copy a simple flat array into another flat array, closes the ring if needed.\n * @param {Float64Array} target - destination\n * @param {Number} targetStartIndex - index in the destination to start copying into\n * @param {Array} positions - array of numbers\n * @param {Number} size - size of a position, 2 (xy) or 3 (xyz)\n * @param {Number} [srcStartIndex] - start index of the path in the positions array\n * @param {Number} [srcEndIndex] - end index of the path in the positions array\n * @returns {Number} - the index of the write head in the destination\n */\nfunction copyFlatRing(target, targetStartIndex, positions, size, srcStartIndex = 0, srcEndIndex) {\n  srcEndIndex = srcEndIndex || positions.length;\n  const srcLength = srcEndIndex - srcStartIndex;\n  if (srcLength <= 0) {\n    return targetStartIndex;\n  }\n  let targetIndex = targetStartIndex;\n\n  for (let i = 0; i < srcLength; i++) {\n    target[targetIndex++] = positions[srcStartIndex + i];\n  }\n\n  if (!isFlatRingClosed(positions, size, srcStartIndex, srcEndIndex)) {\n    for (let i = 0; i < size; i++) {\n      target[targetIndex++] = positions[srcStartIndex + i];\n    }\n  }\n  return targetIndex;\n}\n\n/**\n * Normalize any polygon representation into the \"complex flat\" format\n * @param {Array|Object} polygon\n * @param {Number} positionSize - size of a position, 2 (xy) or 3 (xyz)\n * @param {Number} [vertexCount] - pre-computed vertex count in the polygon.\n *   If provided, will skip counting.\n * @return {Object} - {positions: <Float64Array>, holeIndices: <Array|null>}\n */\n/* eslint-disable max-statements */\nexport function normalize(polygon, positionSize) {\n  validate(polygon);\n\n  const positions = [];\n  const holeIndices = [];\n\n  if (polygon.positions) {\n    // complex flat\n    const {positions: srcPositions, holeIndices: srcHoleIndices} = polygon;\n\n    if (srcHoleIndices) {\n      let targetIndex = 0;\n      // split the positions array into `holeIndices.length + 1` rings\n      // holeIndices[-1] falls back to 0\n      // holeIndices[holeIndices.length] falls back to positions.length\n      for (let i = 0; i <= srcHoleIndices.length; i++) {\n        targetIndex = copyFlatRing(\n          positions,\n          targetIndex,\n          srcPositions,\n          positionSize,\n          srcHoleIndices[i - 1],\n          srcHoleIndices[i]\n        );\n        holeIndices.push(targetIndex);\n      }\n      // The last one is not a starting index of a hole, remove\n      holeIndices.pop();\n\n      return {positions, holeIndices};\n    }\n    polygon = srcPositions;\n  }\n  if (Number.isFinite(polygon[0])) {\n    // simple flat\n    copyFlatRing(positions, 0, polygon, positionSize);\n    return positions;\n  }\n  if (!isSimple(polygon)) {\n    // complex polygon\n    let targetIndex = 0;\n\n    for (const simplePolygon of polygon) {\n      targetIndex = copyNestedRing(positions, targetIndex, simplePolygon, positionSize);\n      holeIndices.push(targetIndex);\n    }\n    // The last one is not a starting index of a hole, remove\n    holeIndices.pop();\n    // last index points to the end of the array, remove it\n    return {positions, holeIndices};\n  }\n  // simple polygon\n  copyNestedRing(positions, 0, polygon, positionSize);\n  return positions;\n}\n/* eslint-enable max-statements */\n\n/*\n * Get vertex indices for drawing polygon mesh\n * @param {Object} normalizedPolygon - {positions, holeIndices}\n * @param {Number} positionSize - size of a position, 2 (xy) or 3 (xyz)\n * @returns {Array} array of indices\n */\nexport function getSurfaceIndices(normalizedPolygon, positionSize, preproject) {\n  let holeIndices = null;\n\n  if (normalizedPolygon.holeIndices) {\n    holeIndices = normalizedPolygon.holeIndices.map(positionIndex => positionIndex / positionSize);\n  }\n  let positions = normalizedPolygon.positions || normalizedPolygon;\n\n  if (preproject) {\n    // When tesselating lnglat coordinates, project them to the common space for accuracy\n    const n = positions.length;\n    // Clone the array\n    positions = positions.slice();\n    const p = [];\n    for (let i = 0; i < n; i += positionSize) {\n      p[0] = positions[i];\n      p[1] = positions[i + 1];\n      const xy = preproject(p);\n      positions[i] = xy[0];\n      positions[i + 1] = xy[1];\n    }\n  }\n\n  // Let earcut triangulate the polygon\n  return earcut(positions, holeIndices, positionSize);\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Handles tesselation of polygons with holes\n// - 2D surfaces\n// - 2D outlines\n// - 3D surfaces (top and sides only)\n// - 3D wireframes (not yet)\nimport * as Polygon from './polygon';\nimport {Tesselator} from '@deck.gl/core';\nimport {cutPolygonByGrid, cutPolygonByMercatorBounds} from '@math.gl/polygon';\n\n// This class is set up to allow querying one attribute at a time\n// the way the AttributeManager expects it\nexport default class PolygonTesselator extends Tesselator {\n  constructor(opts) {\n    const {fp64, IndexType = Uint32Array} = opts;\n    super({\n      ...opts,\n      attributes: {\n        positions: {size: 3, type: fp64 ? Float64Array : Float32Array},\n        vertexValid: {type: Uint8ClampedArray, size: 1},\n        indices: {type: IndexType, size: 1}\n      }\n    });\n  }\n\n  /* Getters */\n  get(attributeName) {\n    const {attributes} = this;\n    if (attributeName === 'indices') {\n      return attributes.indices && attributes.indices.subarray(0, this.vertexCount);\n    }\n\n    return attributes[attributeName];\n  }\n\n  /* Implement base Tesselator interface */\n  updateGeometry(opts) {\n    super.updateGeometry(opts);\n\n    const externalIndices = this.buffers.indices;\n    if (externalIndices) {\n      this.vertexCount = (externalIndices.value || externalIndices).length;\n    }\n  }\n\n  normalizeGeometry(polygon) {\n    if (this.normalize) {\n      polygon = Polygon.normalize(polygon, this.positionSize);\n      if (this.opts.resolution) {\n        return cutPolygonByGrid(polygon.positions || polygon, polygon.holeIndices, {\n          size: this.positionSize,\n          gridResolution: this.opts.resolution,\n          edgeTypes: true\n        });\n      }\n      if (this.opts.wrapLongitude) {\n        return cutPolygonByMercatorBounds(polygon.positions || polygon, polygon.holeIndices, {\n          size: this.positionSize,\n          maxLatitude: 86,\n          edgeTypes: true\n        });\n      }\n    }\n    return polygon;\n  }\n\n  getGeometrySize(polygon) {\n    if (Array.isArray(polygon) && !Number.isFinite(polygon[0])) {\n      let size = 0;\n      for (const subPolygon of polygon) {\n        size += this.getGeometrySize(subPolygon);\n      }\n      return size;\n    }\n    return (polygon.positions || polygon).length / this.positionSize;\n  }\n\n  getGeometryFromBuffer(buffer) {\n    if (this.normalize || !this.buffers.indices) {\n      return super.getGeometryFromBuffer(buffer);\n    }\n    // we don't need to read the positions if no normalization/tesselation\n    return () => null;\n  }\n\n  updateGeometryAttributes(polygon, context) {\n    if (Array.isArray(polygon) && !Number.isFinite(polygon[0])) {\n      for (const subPolygon of polygon) {\n        const geometrySize = this.getGeometrySize(subPolygon);\n        context.geometrySize = geometrySize;\n        this.updateGeometryAttributes(subPolygon, context);\n        context.vertexStart += geometrySize;\n        context.indexStart = this.indexStarts[context.geometryIndex + 1];\n      }\n    } else {\n      this._updateIndices(polygon, context);\n      this._updatePositions(polygon, context);\n      this._updateVertexValid(polygon, context);\n    }\n  }\n\n  // Flatten the indices array\n  _updateIndices(polygon, {geometryIndex, vertexStart: offset, indexStart}) {\n    const {attributes, indexStarts, typedArrayManager} = this;\n\n    let target = attributes.indices;\n    if (!target) {\n      return;\n    }\n    let i = indexStart;\n\n    // 1. get triangulated indices for the internal areas\n    const indices = Polygon.getSurfaceIndices(polygon, this.positionSize, this.opts.preproject);\n\n    // make sure the buffer is large enough\n    target = typedArrayManager.allocate(target, indexStart + indices.length, {\n      copy: true\n    });\n\n    // 2. offset each index by the number of indices in previous polygons\n    for (let j = 0; j < indices.length; j++) {\n      target[i++] = indices[j] + offset;\n    }\n\n    indexStarts[geometryIndex + 1] = indexStart + indices.length;\n    attributes.indices = target;\n  }\n\n  // Flatten out all the vertices of all the sub subPolygons\n  _updatePositions(polygon, {vertexStart, geometrySize}) {\n    const {\n      attributes: {positions},\n      positionSize\n    } = this;\n    if (!positions) {\n      return;\n    }\n    const polygonPositions = polygon.positions || polygon;\n\n    for (let i = vertexStart, j = 0; j < geometrySize; i++, j++) {\n      const x = polygonPositions[j * positionSize];\n      const y = polygonPositions[j * positionSize + 1];\n      const z = positionSize > 2 ? polygonPositions[j * positionSize + 2] : 0;\n\n      positions[i * 3] = x;\n      positions[i * 3 + 1] = y;\n      positions[i * 3 + 2] = z;\n    }\n  }\n\n  _updateVertexValid(polygon, {vertexStart, geometrySize}) {\n    const {\n      attributes: {vertexValid},\n      positionSize\n    } = this;\n    const holeIndices = polygon && polygon.holeIndices;\n    /* We are reusing the some buffer for `nextPositions` by offseting one vertex\n     * to the left. As a result,\n     * the last vertex of each ring overlaps with the first vertex of the next ring.\n     * `vertexValid` is used to mark the end of each ring so we don't draw these\n     * segments:\n      positions      A0 A1 A2 A3 A4 B0 B1 B2 C0 ...\n      nextPositions  A1 A2 A3 A4 B0 B1 B2 C0 C1 ...\n      vertexValid    1  1  1  1  0  1  1  0  1 ...\n     */\n    if (polygon && polygon.edgeTypes) {\n      vertexValid.set(polygon.edgeTypes, vertexStart);\n    } else {\n      vertexValid.fill(1, vertexStart, vertexStart + geometrySize);\n    }\n    if (holeIndices) {\n      for (let j = 0; j < holeIndices.length; j++) {\n        vertexValid[vertexStart + holeIndices[j] / positionSize - 1] = 0;\n      }\n    }\n    vertexValid[vertexStart + geometrySize - 1] = 0;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n\nattribute vec2 vertexPositions;\nattribute float vertexValid;\n\nuniform bool extruded;\nuniform bool isWireframe;\nuniform float elevationScale;\nuniform float opacity;\n\nvarying vec4 vColor;\nvarying float isValid;\n\nstruct PolygonProps {\n  vec4 fillColors;\n  vec4 lineColors;\n  vec3 positions;\n  vec3 nextPositions;\n  vec3 pickingColors;\n  vec3 positions64Low;\n  vec3 nextPositions64Low;\n  float elevations;\n};\n\nvec3 project_offset_normal(vec3 vector) {\n  if (project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n    project_uCoordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\n    // normals generated by the polygon tesselator are in lnglat offsets instead of meters\n    return normalize(vector * project_uCommonUnitsPerWorldUnit);\n  }\n  return project_normal(vector);\n}\n\nvoid calculatePosition(PolygonProps props) {\n  vec3 pos;\n  vec3 pos64Low;\n  vec3 normal;\n  vec4 colors = isWireframe ? props.lineColors : props.fillColors;\n\n  geometry.worldPosition = props.positions;\n  geometry.worldPositionAlt = props.nextPositions;\n  geometry.pickingColor = props.pickingColors;\n\n#ifdef IS_SIDE_VERTEX\n  pos = mix(props.positions, props.nextPositions, vertexPositions.x);\n  pos64Low = mix(props.positions64Low, props.nextPositions64Low, vertexPositions.x);\n  isValid = vertexValid;\n#else\n  pos = props.positions;\n  pos64Low = props.positions64Low;\n  isValid = 1.0;\n#endif\n\n  if (extruded) {\n    pos.z += props.elevations * vertexPositions.y * elevationScale;\n\n#ifdef IS_SIDE_VERTEX\n    normal = vec3(\n      props.positions.y - props.nextPositions.y + (props.positions64Low.y - props.nextPositions64Low.y),\n      props.nextPositions.x - props.positions.x + (props.nextPositions64Low.x - props.positions64Low.x),\n      0.0);\n    normal = project_offset_normal(normal);\n#else\n    normal = vec3(0.0, 0.0, 1.0);\n#endif\n    geometry.normal = normal;\n  }\n\n  gl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  if (extruded) {\n    vec3 lightColor = lighting_getLightColor(colors.rgb, project_uCameraPosition, geometry.position.xyz, normal);\n    vColor = vec4(lightColor, colors.a * opacity);\n  } else {\n    vColor = vec4(colors.rgb, colors.a * opacity);\n  }\n  DECKGL_FILTER_COLOR(vColor, geometry);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport main from './solid-polygon-layer-vertex-main.glsl';\n\nexport default `\\\n#define SHADER_NAME solid-polygon-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute float elevations;\nattribute vec4 fillColors;\nattribute vec4 lineColors;\nattribute vec3 pickingColors;\n\n${main}\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = positions;\n  props.positions64Low = positions64Low;\n  props.elevations = elevations;\n  props.fillColors = fillColors;\n  props.lineColors = lineColors;\n  props.pickingColors = pickingColors;\n\n  calculatePosition(props);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport main from './solid-polygon-layer-vertex-main.glsl';\n\nexport default `\\\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\n\n\nattribute vec3 instancePositions;\nattribute vec3 nextPositions;\nattribute vec3 instancePositions64Low;\nattribute vec3 nextPositions64Low;\nattribute float instanceElevations;\nattribute vec4 instanceFillColors;\nattribute vec4 instanceLineColors;\nattribute vec3 instancePickingColors;\n\n${main}\n\nvoid main(void) {\n  PolygonProps props;\n\n  props.positions = instancePositions;\n  props.positions64Low = instancePositions64Low;\n  props.elevations = instanceElevations;\n  props.fillColors = instanceFillColors;\n  props.lineColors = instanceLineColors;\n  props.pickingColors = instancePickingColors;\n  props.nextPositions = nextPositions;\n  props.nextPositions64Low = nextPositions64Low;\n\n  calculatePosition(props);\n}\n`;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer, project32, gouraudLighting, picking, COORDINATE_SYSTEM} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, hasFeatures, FEATURES} from '@luma.gl/core';\n\n// Polygon geometry generation is managed by the polygon tesselator\nimport PolygonTesselator from './polygon-tesselator';\n\nimport vsTop from './solid-polygon-layer-vertex-top.glsl';\nimport vsSide from './solid-polygon-layer-vertex-side.glsl';\nimport fs from './solid-polygon-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  filled: true,\n  // Whether to extrude\n  extruded: false,\n  // Whether to draw a GL.LINES wireframe of the polygon\n  wireframe: false,\n  _normalize: true,\n\n  // elevation multiplier\n  elevationScale: {type: 'number', min: 0, value: 1},\n\n  // Accessor for polygon geometry\n  getPolygon: {type: 'accessor', value: f => f.polygon},\n  // Accessor for extrusion height\n  getElevation: {type: 'accessor', value: 1000},\n  // Accessor for colors\n  getFillColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineColor: {type: 'accessor', value: DEFAULT_COLOR},\n\n  // Optional settings for 'lighting' shader module\n  material: true\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class SolidPolygonLayer extends Layer {\n  getShaders(vs) {\n    return super.getShaders({\n      vs,\n      fs,\n      defines: {},\n      modules: [project32, gouraudLighting, picking]\n    });\n  }\n\n  get wrapLongitude() {\n    return false;\n  }\n\n  initializeState() {\n    const {gl, viewport} = this.context;\n    let {coordinateSystem} = this.props;\n    if (viewport.isGeospatial && coordinateSystem === COORDINATE_SYSTEM.DEFAULT) {\n      coordinateSystem = COORDINATE_SYSTEM.LNGLAT;\n    }\n\n    this.setState({\n      numInstances: 0,\n      polygonTesselator: new PolygonTesselator({\n        // Lnglat coordinates are usually projected non-linearly, which affects tesselation results\n        // Provide a preproject function if the coordinates are in lnglat\n        preproject: coordinateSystem === COORDINATE_SYSTEM.LNGLAT && viewport.projectFlat,\n        fp64: this.use64bitPositions(),\n        IndexType: !gl || hasFeatures(gl, FEATURES.ELEMENT_INDEX_UINT32) ? Uint32Array : Uint16Array\n      })\n    });\n\n    const attributeManager = this.getAttributeManager();\n    const noAlloc = true;\n\n    attributeManager.remove(['instancePickingColors']);\n\n    /* eslint-disable max-len */\n    attributeManager.add({\n      indices: {size: 1, isIndexed: true, update: this.calculateIndices, noAlloc},\n      positions: {\n        size: 3,\n        type: GL.DOUBLE,\n        fp64: this.use64bitPositions(),\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPolygon',\n        update: this.calculatePositions,\n        noAlloc,\n        shaderAttributes: {\n          positions: {\n            vertexOffset: 0,\n            divisor: 0\n          },\n          instancePositions: {\n            vertexOffset: 0,\n            divisor: 1\n          },\n          nextPositions: {\n            vertexOffset: 1,\n            divisor: 1\n          }\n        }\n      },\n      vertexValid: {\n        size: 1,\n        divisor: 1,\n        type: GL.UNSIGNED_BYTE,\n        update: this.calculateVertexValid,\n        noAlloc\n      },\n      elevations: {\n        size: 1,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getElevation',\n        shaderAttributes: {\n          elevations: {\n            divisor: 0\n          },\n          instanceElevations: {\n            divisor: 1\n          }\n        }\n      },\n      fillColors: {\n        alias: 'colors',\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getFillColor',\n        defaultValue: DEFAULT_COLOR,\n        shaderAttributes: {\n          fillColors: {\n            divisor: 0\n          },\n          instanceFillColors: {\n            divisor: 1\n          }\n        }\n      },\n      lineColors: {\n        alias: 'colors',\n        size: this.props.colorFormat.length,\n        type: GL.UNSIGNED_BYTE,\n        normalized: true,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getLineColor',\n        defaultValue: DEFAULT_COLOR,\n        shaderAttributes: {\n          lineColors: {\n            divisor: 0\n          },\n          instanceLineColors: {\n            divisor: 1\n          }\n        }\n      },\n      pickingColors: {\n        size: 3,\n        type: GL.UNSIGNED_BYTE,\n        accessor: (object, {index, target: value}) =>\n          this.encodePickingColor(object && object.__source ? object.__source.index : index, value),\n        shaderAttributes: {\n          pickingColors: {\n            divisor: 0\n          },\n          instancePickingColors: {\n            divisor: 1\n          }\n        }\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n    const {index} = info;\n    const {data} = this.props;\n\n    if (data[0] && data[0].__source) {\n      // data is wrapped\n      info.object = data.find(d => d.__source.index === index);\n    }\n    return info;\n  }\n\n  draw({uniforms}) {\n    const {extruded, filled, wireframe, elevationScale} = this.props;\n    const {topModel, sideModel, polygonTesselator} = this.state;\n\n    const renderUniforms = Object.assign({}, uniforms, {\n      extruded: Boolean(extruded),\n      elevationScale\n    });\n\n    // Note: the order is important\n    if (sideModel) {\n      sideModel.setInstanceCount(polygonTesselator.instanceCount - 1);\n      sideModel.setUniforms(renderUniforms);\n      if (wireframe) {\n        sideModel.setDrawMode(GL.LINE_STRIP);\n        sideModel.setUniforms({isWireframe: true}).draw();\n      }\n      if (filled) {\n        sideModel.setDrawMode(GL.TRIANGLE_FAN);\n        sideModel.setUniforms({isWireframe: false}).draw();\n      }\n    }\n\n    if (topModel) {\n      topModel.setVertexCount(polygonTesselator.vertexCount);\n      topModel.setUniforms(renderUniforms).draw();\n    }\n  }\n\n  updateState(updateParams) {\n    super.updateState(updateParams);\n\n    this.updateGeometry(updateParams);\n\n    const {props, oldProps, changeFlags} = updateParams;\n    const attributeManager = this.getAttributeManager();\n\n    const regenerateModels =\n      changeFlags.extensionsChanged ||\n      props.filled !== oldProps.filled ||\n      props.extruded !== oldProps.extruded;\n\n    if (regenerateModels) {\n      if (this.state.models) {\n        this.state.models.forEach(model => model.delete());\n      }\n\n      this.setState(this._getModels(this.context.gl));\n      attributeManager.invalidateAll();\n    }\n  }\n\n  updateGeometry({props, oldProps, changeFlags}) {\n    const geometryConfigChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPolygon));\n\n    // When the geometry config  or the data is changed,\n    // tessellator needs to be invoked\n    if (geometryConfigChanged) {\n      const {polygonTesselator} = this.state;\n      const buffers = props.data.attributes || {};\n      polygonTesselator.updateGeometry({\n        data: props.data,\n        normalize: props._normalize,\n        geometryBuffer: buffers.getPolygon,\n        buffers,\n        getGeometry: props.getPolygon,\n        positionFormat: props.positionFormat,\n        wrapLongitude: props.wrapLongitude,\n        // TODO - move the flag out of the viewport\n        resolution: this.context.viewport.resolution,\n        fp64: this.use64bitPositions(),\n        dataChanged: changeFlags.dataChanged\n      });\n\n      this.setState({\n        numInstances: polygonTesselator.instanceCount,\n        startIndices: polygonTesselator.vertexStarts\n      });\n\n      if (!changeFlags.dataChanged) {\n        // Base `layer.updateState` only invalidates all attributes on data change\n        // Cover the rest of the scenarios here\n        this.getAttributeManager().invalidateAll();\n      }\n    }\n  }\n\n  _getModels(gl) {\n    const {id, filled, extruded} = this.props;\n\n    let topModel;\n    let sideModel;\n\n    if (filled) {\n      const shaders = this.getShaders(vsTop);\n      shaders.defines.NON_INSTANCED_MODEL = 1;\n\n      topModel = new Model(\n        gl,\n        Object.assign({}, shaders, {\n          id: `${id}-top`,\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            vertexPositions: new Float32Array([0, 1])\n          },\n          uniforms: {\n            isWireframe: false,\n            isSideVertex: false\n          },\n          vertexCount: 0,\n          isIndexed: true\n        })\n      );\n    }\n    if (extruded) {\n      sideModel = new Model(\n        gl,\n        Object.assign({}, this.getShaders(vsSide), {\n          id: `${id}-side`,\n          geometry: new Geometry({\n            drawMode: GL.LINES,\n            vertexCount: 4,\n            attributes: {\n              // top right - top left - bootom left - bottom right\n              vertexPositions: {\n                size: 2,\n                value: new Float32Array([1, 0, 0, 0, 0, 1, 1, 1])\n              }\n            }\n          }),\n          instanceCount: 0,\n          isInstanced: 1\n        })\n      );\n\n      sideModel.userData.excludeAttributes = {indices: true};\n    }\n\n    return {\n      models: [sideModel, topModel].filter(Boolean),\n      topModel,\n      sideModel\n    };\n  }\n\n  calculateIndices(attribute) {\n    const {polygonTesselator} = this.state;\n    attribute.startIndices = polygonTesselator.indexStarts;\n    attribute.value = polygonTesselator.get('indices');\n  }\n\n  calculatePositions(attribute) {\n    const {polygonTesselator} = this.state;\n    attribute.startIndices = polygonTesselator.vertexStarts;\n    attribute.value = polygonTesselator.get('positions');\n  }\n\n  calculateVertexValid(attribute) {\n    attribute.value = this.state.polygonTesselator.get('vertexValid');\n  }\n}\n\nSolidPolygonLayer.layerName = 'SolidPolygonLayer';\nSolidPolygonLayer.defaultProps = defaultProps;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nexport default `\\\n#define SHADER_NAME solid-polygon-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\nvarying float isValid;\n\nvoid main(void) {\n  if (isValid < 0.5) {\n    discard;\n  }\n\n  gl_FragColor = vColor;\n\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","/* global google, document */\nimport {Deck} from '@deck.gl/core';\n\n// https://en.wikipedia.org/wiki/Web_Mercator_projection#Formulas\nconst MAX_LATITUDE = 85.05113;\n\n/**\n * Get a new deck instance\n * @param map (google.maps.Map) - The parent Map instance\n * @param overlay (google.maps.OverlayView) - A maps Overlay instance\n * @param [deck] (Deck) - a previously created instances\n */\nexport function createDeckInstance(map, overlay, deck, props) {\n  if (deck) {\n    if (deck.props.userData._googleMap === map) {\n      return deck;\n    }\n    // deck instance was created for a different map\n    destroyDeckInstance(deck);\n  }\n\n  const eventListeners = {\n    click: null,\n    dblclick: null,\n    mousemove: null,\n    mouseout: null\n  };\n\n  deck = new Deck({\n    ...props,\n    style: null,\n    parent: getContainer(overlay, props.style),\n    initialViewState: {\n      longitude: 0,\n      latitude: 0,\n      zoom: 1\n    },\n    controller: false,\n    userData: {\n      _googleMap: map,\n      _eventListeners: eventListeners\n    }\n  });\n\n  // Register event listeners\n  for (const eventType in eventListeners) {\n    eventListeners[eventType] = map.addListener(eventType, evt =>\n      handleMouseEvent(deck, eventType, evt)\n    );\n  }\n\n  return deck;\n}\n\n// Create a container that will host the deck canvas and tooltip\nfunction getContainer(overlay, style) {\n  const container = document.createElement('div');\n  container.style.position = 'absolute';\n  Object.assign(container.style, style);\n  overlay.getPanes().overlayLayer.appendChild(container);\n  return container;\n}\n\n/**\n * Safely remove a deck instance\n * @param deck (Deck) - a previously created instances\n */\nexport function destroyDeckInstance(deck) {\n  const {_eventListeners: eventListeners} = deck.props.userData;\n\n  // Unregister event listeners\n  for (const eventType in eventListeners) {\n    eventListeners[eventType].remove();\n  }\n\n  deck.finalize();\n}\n\n/* eslint-disable max-statements */\n/**\n * Get the current view state\n * @param map (google.maps.Map) - The parent Map instance\n * @param overlay (google.maps.OverlayView) - A maps Overlay instance\n */\nexport function getViewState(map, overlay) {\n  // The map fills the container div unless it's in fullscreen mode\n  // at which point the first child of the container is promoted\n  const container = map.getDiv().firstChild;\n  const width = container.offsetWidth;\n  const height = container.offsetHeight;\n\n  // Canvas position relative to draggable map's container depends on\n  // overlayView's projection, not the map's. Have to use the center of the\n  // map for this, not the top left, for the same reason as above.\n  const projection = overlay.getProjection();\n\n  const bounds = map.getBounds();\n  const ne = bounds.getNorthEast();\n  const sw = bounds.getSouthWest();\n  const topRight = projection.fromLatLngToDivPixel(ne);\n  const bottomLeft = projection.fromLatLngToDivPixel(sw);\n\n  // google maps places overlays in a container anchored at the map center.\n  // the container CSS is manipulated during dragging.\n  // We need to update left/top of the deck canvas to match the base map.\n  const nwContainerPx = new google.maps.Point(0, 0);\n  const nw = projection.fromContainerPixelToLatLng(nwContainerPx);\n  const nwDivPx = projection.fromLatLngToDivPixel(nw);\n  let leftOffset = nwDivPx.x;\n  let topOffset = nwDivPx.y;\n\n  // Adjust horizontal offset - position the viewport at the map in the center\n  const mapWidth = projection.getWorldWidth();\n  const mapCount = Math.ceil(width / mapWidth);\n  leftOffset -= Math.floor(mapCount / 2) * mapWidth;\n\n  // Compute fractional zoom.\n  const scale = height ? (bottomLeft.y - topRight.y) / height : 1;\n  // When resizing aggressively, occasionally ne and sw are the same points\n  // See https://github.com/visgl/deck.gl/issues/4218\n  const zoom = Math.log2(scale || 1) + map.getZoom() - 1;\n\n  // Compute fractional center.\n  let centerPx = new google.maps.Point(width / 2, height / 2);\n  const centerContainer = projection.fromContainerPixelToLatLng(centerPx);\n  let latitude = centerContainer.lat();\n  const longitude = centerContainer.lng();\n\n  // Adjust vertical offset - limit latitude\n  if (Math.abs(latitude) > MAX_LATITUDE) {\n    latitude = latitude > 0 ? MAX_LATITUDE : -MAX_LATITUDE;\n    const center = new google.maps.LatLng(latitude, longitude);\n    centerPx = projection.fromLatLngToContainerPixel(center);\n    topOffset += centerPx.y - height / 2;\n  }\n\n  return {\n    width,\n    height,\n    left: leftOffset,\n    top: topOffset,\n    zoom,\n    pitch: map.getTilt(),\n    latitude,\n    longitude\n  };\n}\n/* eslint-enable max-statements */\n\nfunction getEventPixel(event, deck) {\n  if (event.pixel) {\n    return event.pixel;\n  }\n  // event.pixel may not exist when clicking on a POI\n  // https://developers.google.com/maps/documentation/javascript/reference/map#MouseEvent\n  const point = deck.getViewports()[0].project([event.latLng.lng(), event.latLng.lat()]);\n  return {\n    x: point[0],\n    y: point[1]\n  };\n}\n\n// Triggers picking on a mouse event\nfunction handleMouseEvent(deck, type, event) {\n  const mockEvent = {\n    type,\n    offsetCenter: getEventPixel(event, deck),\n    srcEvent: event\n  };\n\n  switch (type) {\n    case 'click':\n      // Hack: because we do not listen to pointer down, perform picking now\n      deck._lastPointerDownInfo = deck.pickObject(mockEvent.offsetCenter);\n      mockEvent.tapCount = 1;\n      deck._onEvent(mockEvent);\n      break;\n\n    case 'dblclick':\n      mockEvent.type = 'click';\n      mockEvent.tapCount = 2;\n      deck._onEvent(mockEvent);\n      break;\n\n    case 'mousemove':\n      mockEvent.type = 'pointermove';\n      deck._onPointerMove(mockEvent);\n      break;\n\n    case 'mouseout':\n      mockEvent.type = 'pointerleave';\n      deck._onPointerMove(mockEvent);\n      break;\n\n    default:\n      return;\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {log} from '@deck.gl/core';\n\n/**\n * \"Normalizes\" complete or partial GeoJSON data into iterable list of features\n * Can accept GeoJSON geometry or \"Feature\", \"FeatureCollection\" in addition\n * to plain arrays and iterables.\n * Works by extracting the feature array or wrapping single objects in an array,\n * so that subsequent code can simply iterate over features.\n *\n * @param {object} geojson - geojson data\n * @param {Object|Array} data - geojson object (FeatureCollection, Feature or\n *  Geometry) or array of features\n * @return {Array|\"iteratable\"} - iterable list of features\n */\nexport function getGeojsonFeatures(geojson) {\n  // If array, assume this is a list of features\n  if (Array.isArray(geojson)) {\n    return geojson;\n  }\n\n  log.assert(geojson.type, 'GeoJSON does not have type');\n\n  switch (geojson.type) {\n    case 'Feature':\n      // Wrap the feature in a 'Features' array\n      return [geojson];\n    case 'FeatureCollection':\n      // Just return the 'Features' array from the collection\n      log.assert(Array.isArray(geojson.features), 'GeoJSON does not have features array');\n      return geojson.features;\n    default:\n      // Assume it's a geometry, we'll check type in separateGeojsonFeatures\n      // Wrap the geometry object in a 'Feature' object and wrap in an array\n      return [{geometry: geojson}];\n  }\n}\n\n// Linearize\nexport function separateGeojsonFeatures(features, wrapFeature, dataRange = {}) {\n  const separated = {\n    pointFeatures: [],\n    lineFeatures: [],\n    polygonFeatures: [],\n    polygonOutlineFeatures: []\n  };\n  const {startRow = 0, endRow = features.length} = dataRange;\n\n  for (let featureIndex = startRow; featureIndex < endRow; featureIndex++) {\n    const feature = features[featureIndex];\n\n    log.assert(feature && feature.geometry, 'GeoJSON does not have geometry');\n\n    const {geometry} = feature;\n\n    if (geometry.type === 'GeometryCollection') {\n      log.assert(Array.isArray(geometry.geometries), 'GeoJSON does not have geometries array');\n      const {geometries} = geometry;\n      for (let i = 0; i < geometries.length; i++) {\n        const subGeometry = geometries[i];\n        separateGeometry(subGeometry, separated, wrapFeature, feature, featureIndex);\n      }\n    } else {\n      separateGeometry(geometry, separated, wrapFeature, feature, featureIndex);\n    }\n  }\n\n  return separated;\n}\n\nfunction separateGeometry(geometry, separated, wrapFeature, sourceFeature, sourceFeatureIndex) {\n  const {type, coordinates} = geometry;\n  const {pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures} = separated;\n\n  if (!validateGeometry(type, coordinates)) {\n    // Avoid hard failure if some features are malformed\n    log.warn(`${type} coordinates are malformed`)();\n    return;\n  }\n\n  // Split each feature, but keep track of the source feature and index (for Multi* geometries)\n  switch (type) {\n    case 'Point':\n      pointFeatures.push(\n        wrapFeature(\n          {\n            geometry\n          },\n          sourceFeature,\n          sourceFeatureIndex\n        )\n      );\n      break;\n    case 'MultiPoint':\n      coordinates.forEach(point => {\n        pointFeatures.push(\n          wrapFeature(\n            {\n              geometry: {type: 'Point', coordinates: point}\n            },\n            sourceFeature,\n            sourceFeatureIndex\n          )\n        );\n      });\n      break;\n    case 'LineString':\n      lineFeatures.push(\n        wrapFeature(\n          {\n            geometry\n          },\n          sourceFeature,\n          sourceFeatureIndex\n        )\n      );\n      break;\n    case 'MultiLineString':\n      // Break multilinestrings into multiple lines\n      coordinates.forEach(path => {\n        lineFeatures.push(\n          wrapFeature(\n            {\n              geometry: {type: 'LineString', coordinates: path}\n            },\n            sourceFeature,\n            sourceFeatureIndex\n          )\n        );\n      });\n      break;\n    case 'Polygon':\n      polygonFeatures.push(\n        wrapFeature(\n          {\n            geometry\n          },\n          sourceFeature,\n          sourceFeatureIndex\n        )\n      );\n      // Break polygon into multiple lines\n      coordinates.forEach(path => {\n        polygonOutlineFeatures.push(\n          wrapFeature(\n            {\n              geometry: {type: 'LineString', coordinates: path}\n            },\n            sourceFeature,\n            sourceFeatureIndex\n          )\n        );\n      });\n      break;\n    case 'MultiPolygon':\n      // Break multipolygons into multiple polygons\n      coordinates.forEach(polygon => {\n        polygonFeatures.push(\n          wrapFeature(\n            {\n              geometry: {type: 'Polygon', coordinates: polygon}\n            },\n            sourceFeature,\n            sourceFeatureIndex\n          )\n        );\n        // Break polygon into multiple lines\n        polygon.forEach(path => {\n          polygonOutlineFeatures.push(\n            wrapFeature(\n              {\n                geometry: {type: 'LineString', coordinates: path}\n              },\n              sourceFeature,\n              sourceFeatureIndex\n            )\n          );\n        });\n      });\n      break;\n    default:\n  }\n}\n\n/**\n * Simple GeoJSON validation util. For perf reasons we do not validate against the full spec,\n * only the following:\n   - geometry.type is supported\n   - geometry.coordinate has correct nesting level\n */\nconst COORDINATE_NEST_LEVEL = {\n  Point: 1,\n  MultiPoint: 2,\n  LineString: 2,\n  MultiLineString: 3,\n  Polygon: 3,\n  MultiPolygon: 4\n};\n\nexport function validateGeometry(type, coordinates) {\n  let nestLevel = COORDINATE_NEST_LEVEL[type];\n\n  log.assert(nestLevel, `Unknown GeoJSON type ${type}`);\n\n  while (coordinates && --nestLevel > 0) {\n    coordinates = coordinates[0];\n  }\n\n  return coordinates && Number.isFinite(coordinates[0]);\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, log} from '@deck.gl/core';\nimport ScatterplotLayer from '../scatterplot-layer/scatterplot-layer';\nimport PathLayer from '../path-layer/path-layer';\n// Use primitive layer to avoid \"Composite Composite\" layers for now\nimport SolidPolygonLayer from '../solid-polygon-layer/solid-polygon-layer';\nimport {replaceInRange} from '../utils';\n\nimport {getGeojsonFeatures, separateGeojsonFeatures} from './geojson';\n\nconst defaultLineColor = [0, 0, 0, 255];\nconst defaultFillColor = [0, 0, 0, 255];\n\nconst defaultProps = {\n  stroked: true,\n  filled: true,\n  extruded: false,\n  wireframe: false,\n\n  lineWidthUnits: 'meters',\n  lineWidthScale: 1,\n  lineWidthMinPixels: 0,\n  lineWidthMaxPixels: Number.MAX_SAFE_INTEGER,\n  lineJointRounded: false,\n  lineMiterLimit: 4,\n\n  elevationScale: 1,\n\n  pointRadiusUnits: 'meters',\n  pointRadiusScale: 1,\n  pointRadiusMinPixels: 0, //  min point radius in pixels\n  pointRadiusMaxPixels: Number.MAX_SAFE_INTEGER, // max point radius in pixels\n\n  // Line and polygon outline color\n  getLineColor: {type: 'accessor', value: defaultLineColor},\n  // Point and polygon fill color\n  getFillColor: {type: 'accessor', value: defaultFillColor},\n  // Point radius\n  getRadius: {type: 'accessor', value: 1},\n  // Line and polygon outline accessors\n  getLineWidth: {type: 'accessor', value: 1},\n  // Polygon extrusion accessor\n  getElevation: {type: 'accessor', value: 1000},\n  // Optional material for 'lighting' shader module\n  material: true\n};\n\nfunction getCoordinates(f) {\n  return f.geometry.coordinates;\n}\n\nexport default class GeoJsonLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      features: {}\n    };\n\n    if (this.props.getLineDashArray) {\n      log.removed('getLineDashArray', 'PathStyleExtension')();\n    }\n  }\n\n  updateState({props, changeFlags}) {\n    if (!changeFlags.dataChanged) {\n      return;\n    }\n    const features = getGeojsonFeatures(props.data);\n    const wrapFeature = this.getSubLayerRow.bind(this);\n\n    if (Array.isArray(changeFlags.dataChanged)) {\n      const oldFeatures = this.state.features;\n      const newFeatures = {};\n      const featuresDiff = {};\n      for (const key in oldFeatures) {\n        newFeatures[key] = oldFeatures[key].slice();\n        featuresDiff[key] = [];\n      }\n\n      for (const dataRange of changeFlags.dataChanged) {\n        const partialFeatures = separateGeojsonFeatures(features, wrapFeature, dataRange);\n        for (const key in oldFeatures) {\n          featuresDiff[key].push(\n            replaceInRange({\n              data: newFeatures[key],\n              getIndex: f => f.__source.index,\n              dataRange,\n              replace: partialFeatures[key]\n            })\n          );\n        }\n      }\n      this.setState({features: newFeatures, featuresDiff});\n    } else {\n      this.setState({\n        features: separateGeojsonFeatures(features, wrapFeature),\n        featuresDiff: {}\n      });\n    }\n  }\n\n  /* eslint-disable complexity */\n  renderLayers() {\n    const {features, featuresDiff} = this.state;\n    const {pointFeatures, lineFeatures, polygonFeatures, polygonOutlineFeatures} = features;\n\n    // Layer composition props\n    const {stroked, filled, extruded, wireframe, material, transitions} = this.props;\n\n    // Rendering props underlying layer\n    const {\n      lineWidthUnits,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels,\n      lineJointRounded,\n      lineMiterLimit,\n      pointRadiusUnits,\n      pointRadiusScale,\n      pointRadiusMinPixels,\n      pointRadiusMaxPixels,\n      elevationScale,\n      lineDashJustified\n    } = this.props;\n\n    // Accessor props for underlying layers\n    const {\n      getLineColor,\n      getFillColor,\n      getRadius,\n      getLineWidth,\n      getLineDashArray,\n      getElevation,\n      updateTriggers\n    } = this.props;\n\n    const PolygonFillLayer = this.getSubLayerClass('polygons-fill', SolidPolygonLayer);\n    const PolygonStrokeLayer = this.getSubLayerClass('polygons-stroke', PathLayer);\n    const LineStringsLayer = this.getSubLayerClass('line-strings', PathLayer);\n    const PointsLayer = this.getSubLayerClass('points', ScatterplotLayer);\n\n    // Filled Polygon Layer\n    const polygonFillLayer =\n      this.shouldRenderSubLayer('polygons-fill', polygonFeatures) &&\n      new PolygonFillLayer(\n        {\n          _dataDiff: featuresDiff.polygonFeatures && (() => featuresDiff.polygonFeatures),\n\n          extruded,\n          elevationScale,\n          filled,\n          wireframe,\n          material,\n          getElevation: this.getSubLayerAccessor(getElevation),\n          getFillColor: this.getSubLayerAccessor(getFillColor),\n          getLineColor: this.getSubLayerAccessor(\n            extruded && wireframe ? getLineColor : defaultLineColor\n          ),\n\n          transitions: transitions && {\n            getPolygon: transitions.geometry,\n            getElevation: transitions.getElevation,\n            getFillColor: transitions.getFillColor,\n            getLineColor: transitions.getLineColor\n          }\n        },\n        this.getSubLayerProps({\n          id: 'polygons-fill',\n          updateTriggers: {\n            getElevation: updateTriggers.getElevation,\n            getFillColor: updateTriggers.getFillColor,\n            // using a legacy API to invalid lineColor attributes\n            // if (extruded && wireframe) has changed\n            lineColors: extruded && wireframe,\n            getLineColor: updateTriggers.getLineColor\n          }\n        }),\n        {\n          data: polygonFeatures,\n          getPolygon: getCoordinates\n        }\n      );\n\n    const polygonLineLayer =\n      !extruded &&\n      stroked &&\n      this.shouldRenderSubLayer('polygons-stroke', polygonOutlineFeatures) &&\n      new PolygonStrokeLayer(\n        {\n          _dataDiff:\n            featuresDiff.polygonOutlineFeatures && (() => featuresDiff.polygonOutlineFeatures),\n\n          widthUnits: lineWidthUnits,\n          widthScale: lineWidthScale,\n          widthMinPixels: lineWidthMinPixels,\n          widthMaxPixels: lineWidthMaxPixels,\n          rounded: lineJointRounded,\n          miterLimit: lineMiterLimit,\n          dashJustified: lineDashJustified,\n\n          getColor: this.getSubLayerAccessor(getLineColor),\n          getWidth: this.getSubLayerAccessor(getLineWidth),\n          getDashArray: this.getSubLayerAccessor(getLineDashArray),\n\n          transitions: transitions && {\n            getPath: transitions.geometry,\n            getColor: transitions.getLineColor,\n            getWidth: transitions.getLineWidth\n          }\n        },\n        this.getSubLayerProps({\n          id: 'polygons-stroke',\n          updateTriggers: {\n            getColor: updateTriggers.getLineColor,\n            getWidth: updateTriggers.getLineWidth,\n            getDashArray: updateTriggers.getLineDashArray\n          }\n        }),\n        {\n          data: polygonOutlineFeatures,\n          getPath: getCoordinates\n        }\n      );\n\n    const pathLayer =\n      this.shouldRenderSubLayer('linestrings', lineFeatures) &&\n      new LineStringsLayer(\n        {\n          _dataDiff: featuresDiff.lineFeatures && (() => featuresDiff.lineFeatures),\n\n          widthUnits: lineWidthUnits,\n          widthScale: lineWidthScale,\n          widthMinPixels: lineWidthMinPixels,\n          widthMaxPixels: lineWidthMaxPixels,\n          rounded: lineJointRounded,\n          miterLimit: lineMiterLimit,\n          dashJustified: lineDashJustified,\n\n          getColor: this.getSubLayerAccessor(getLineColor),\n          getWidth: this.getSubLayerAccessor(getLineWidth),\n          getDashArray: this.getSubLayerAccessor(getLineDashArray),\n\n          transitions: transitions && {\n            getPath: transitions.geometry,\n            getColor: transitions.getLineColor,\n            getWidth: transitions.getLineWidth\n          }\n        },\n        this.getSubLayerProps({\n          id: 'line-strings',\n          updateTriggers: {\n            getColor: updateTriggers.getLineColor,\n            getWidth: updateTriggers.getLineWidth,\n            getDashArray: updateTriggers.getLineDashArray\n          }\n        }),\n        {\n          data: lineFeatures,\n          getPath: getCoordinates\n        }\n      );\n\n    const pointLayer =\n      this.shouldRenderSubLayer('points', pointFeatures) &&\n      new PointsLayer(\n        {\n          _dataDiff: featuresDiff.pointFeatures && (() => featuresDiff.pointFeatures),\n\n          stroked,\n          filled,\n          radiusUnits: pointRadiusUnits,\n          radiusScale: pointRadiusScale,\n          radiusMinPixels: pointRadiusMinPixels,\n          radiusMaxPixels: pointRadiusMaxPixels,\n          lineWidthUnits,\n          lineWidthScale,\n          lineWidthMinPixels,\n          lineWidthMaxPixels,\n\n          getFillColor: this.getSubLayerAccessor(getFillColor),\n          getLineColor: this.getSubLayerAccessor(getLineColor),\n          getRadius: this.getSubLayerAccessor(getRadius),\n          getLineWidth: this.getSubLayerAccessor(getLineWidth),\n\n          transitions: transitions && {\n            getPosition: transitions.geometry,\n            getFillColor: transitions.getFillColor,\n            getLineColor: transitions.getLineColor,\n            getRadius: transitions.getRadius,\n            getLineWidth: transitions.getLineWidth\n          }\n        },\n        this.getSubLayerProps({\n          id: 'points',\n          updateTriggers: {\n            getFillColor: updateTriggers.getFillColor,\n            getLineColor: updateTriggers.getLineColor,\n            getRadius: updateTriggers.getRadius,\n            getLineWidth: updateTriggers.getLineWidth\n          }\n        }),\n        {\n          data: pointFeatures,\n          getPosition: getCoordinates,\n          highlightedObjectIndex: this._getHighlightedIndex(pointFeatures)\n        }\n      );\n\n    return [\n      // If not extruded: flat fill layer is drawn below outlines\n      !extruded && polygonFillLayer,\n      polygonLineLayer,\n      pathLayer,\n      pointLayer,\n      // If extruded: draw fill layer last for correct blending behavior\n      extruded && polygonFillLayer\n    ];\n  }\n  /* eslint-enable complexity */\n\n  _getHighlightedIndex(data) {\n    const {highlightedObjectIndex} = this.props;\n    return Number.isFinite(highlightedObjectIndex)\n      ? data.findIndex(d => d.__source.index === highlightedObjectIndex)\n      : null;\n  }\n}\n\nGeoJsonLayer.layerName = 'GeoJsonLayer';\nGeoJsonLayer.defaultProps = defaultProps;\n","/* eslint-env browser */\nimport {log} from '@deck.gl/core';\n\nexport default class Tile2DHeader {\n  constructor({x, y, z, onTileLoad, onTileError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n    this._isLoaded = false;\n    this._isCancelled = false;\n\n    this.onTileLoad = onTileLoad;\n    this.onTileError = onTileError;\n  }\n\n  get data() {\n    return this._isLoaded ? this.content : this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  get isLoading() {\n    return Boolean(this._loader);\n  }\n\n  get isCancelled() {\n    return this._isCancelled;\n  }\n\n  get byteLength() {\n    const result = this.content ? this.content.byteLength : 0;\n    if (!Number.isFinite(result)) {\n      log.error('byteLength not defined in tile data')();\n    }\n    return result;\n  }\n\n  /* eslint-disable max-statements */\n  async _loadData(getTileData, requestScheduler) {\n    const {x, y, z, bbox} = this;\n\n    this._abortController = new AbortController(); // eslint-disable-line no-undef\n    const {signal} = this._abortController;\n\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n    // A tile can be cancelled while being scheduled\n    if (this._isCancelled) {\n      requestToken.done();\n      return;\n    }\n\n    let tileData;\n    let error;\n    try {\n      tileData = await getTileData({x, y, z, bbox, signal});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n\n      if (this._isCancelled && !tileData) {\n        this._isLoaded = false;\n      } else {\n        // Consider it loaded if we tried to cancel but `getTileData` still returned data\n        this._isLoaded = true;\n        this._isCancelled = false;\n      }\n    }\n\n    if (!this._isLoaded) {\n      return;\n    }\n\n    if (error) {\n      this.onTileError(error, this);\n    } else {\n      this.content = tileData;\n      this.onTileLoad(this);\n    }\n  }\n  /* eslint-enable max-statements */\n\n  loadData(getTileData, requestScheduler) {\n    if (!getTileData) {\n      return;\n    }\n\n    this._isCancelled = false;\n    this._loader = this._loadData(getTileData, requestScheduler);\n    this._loader.finally(() => {\n      this._loader = undefined;\n    });\n  }\n\n  abort() {\n    if (this.isLoaded) {\n      return;\n    }\n\n    this._isCancelled = true;\n    this._abortController.abort();\n  }\n}\n","/* eslint-disable complexity */\nimport {CullingVolume, Plane, AxisAlignedBoundingBox} from '@math.gl/culling';\nimport {WebMercatorViewport} from '@deck.gl/core';\nimport {fitBounds} from '@math.gl/web-mercator';\n\nconst TILE_SIZE = 512;\n// number of world copies to check\nconst MAX_MAPS = 3;\n\nclass OSMNode {\n  constructor(x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  get children() {\n    if (!this._children) {\n      const x = this.x * 2;\n      const y = this.y * 2;\n      const z = this.z + 1;\n      this._children = [\n        new OSMNode(x, y, z),\n        new OSMNode(x, y + 1, z),\n        new OSMNode(x + 1, y, z),\n        new OSMNode(x + 1, y + 1, z)\n      ];\n    }\n    return this._children;\n  }\n\n  update(params) {\n    const {viewport, cullingVolume, elevationBounds, minZ, maxZ, offset} = params;\n    const boundingVolume = this.getBoundingVolume(elevationBounds, offset);\n\n    // First, check if this tile is visible\n    const isInside = cullingVolume.computeVisibility(boundingVolume);\n    if (isInside < 0) {\n      return false;\n    }\n\n    // Avoid loading overlapping tiles - if a descendant is requested, do not request the ancester\n    if (!this.childVisible) {\n      let {z} = this;\n      if (z < maxZ && z >= minZ) {\n        // Adjust LOD\n        // If the tile is far enough from the camera, accept a lower zoom level\n        const distance =\n          (boundingVolume.distanceTo(viewport.cameraPosition) * viewport.scale) / viewport.height;\n        z += Math.floor(Math.log2(distance));\n      }\n      if (z >= maxZ) {\n        // LOD is acceptable\n        this.selected = true;\n        return true;\n      }\n    }\n\n    // LOD is not enough, recursively test child tiles\n    this.selected = false;\n    this.childVisible = true;\n    for (const child of this.children) {\n      child.update(params);\n    }\n    return true;\n  }\n\n  getSelected(result = []) {\n    if (this.selected) {\n      result.push(this);\n    }\n    if (this._children) {\n      for (const node of this._children) {\n        node.getSelected(result);\n      }\n    }\n    return result;\n  }\n\n  getBoundingVolume(zRange, worldOffset) {\n    const scale = Math.pow(2, this.z);\n    const extent = TILE_SIZE / scale;\n    const originX = this.x * extent + worldOffset * TILE_SIZE;\n    // deck's common space is y-flipped\n    const originY = TILE_SIZE - (this.y + 1) * extent;\n\n    return new AxisAlignedBoundingBox(\n      [originX, originY, zRange[0]],\n      [originX + extent, originY + extent, zRange[1]]\n    );\n  }\n}\n\nexport function getOSMTileIndices(viewport, maxZ, zRange) {\n  if (!(viewport instanceof WebMercatorViewport)) {\n    const bbox = viewport.getBounds();\n    // The width and height here are arbitrary - they just need to form a reasonable aspect ratio\n    // so that we don't get too many world copies\n    const {longitude, latitude, zoom} = fitBounds({\n      width: 100,\n      height: 100,\n      bounds: [[bbox[0], bbox[1]], [bbox[2], bbox[3]]]\n    });\n\n    viewport = new WebMercatorViewport({\n      width: 100,\n      height: 100,\n      longitude,\n      latitude,\n      zoom,\n      repeat: true\n    });\n  }\n\n  // Get the culling volume of the current camera\n  const planes = Object.values(viewport.getFrustumPlanes()).map(\n    ({normal, distance}) => new Plane(normal.clone().negate(), distance)\n  );\n  const cullingVolume = new CullingVolume(planes);\n\n  // Project zRange from meters to common space\n  const unitsPerMeter = viewport.distanceScales.unitsPerMeter[2];\n  const elevationMin = (zRange && zRange[0] * unitsPerMeter) || 0;\n  const elevationMax = (zRange && zRange[1] * unitsPerMeter) || 0;\n\n  // Always load at the current zoom level if pitch is small\n  const minZ = viewport.pitch <= 60 ? maxZ : 0;\n\n  const root = new OSMNode(0, 0, 0);\n  const traversalParams = {\n    viewport,\n    cullingVolume,\n    elevationBounds: [elevationMin, elevationMax],\n    minZ,\n    maxZ,\n    // num. of worlds from the center. For repeated maps\n    offset: 0\n  };\n\n  root.update(traversalParams);\n\n  if (viewport.subViewports && viewport.subViewports.length > 1) {\n    // Check worlds in repeated maps\n    traversalParams.offset = -1;\n    while (root.update(traversalParams)) {\n      if (--traversalParams.offset < -MAX_MAPS) {\n        break;\n      }\n    }\n    traversalParams.offset = 1;\n    while (root.update(traversalParams)) {\n      if (++traversalParams.offset > MAX_MAPS) {\n        break;\n      }\n    }\n  }\n\n  return root.getSelected();\n}\n","import {getOSMTileIndices} from './tile-2d-traversal';\n\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT = [-Infinity, -Infinity, Infinity, Infinity];\n\nexport const urlType = {\n  type: 'url',\n  value: '',\n  validate: value =>\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equals: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nfunction transformBox(bbox, modelMatrix) {\n  const transformedCoords = [\n    // top-left\n    modelMatrix.transformPoint([bbox[0], bbox[1]]),\n    // top-right\n    modelMatrix.transformPoint([bbox[2], bbox[1]]),\n    // bottom-left\n    modelMatrix.transformPoint([bbox[0], bbox[3]]),\n    // bottom-right\n    modelMatrix.transformPoint([bbox[2], bbox[3]])\n  ];\n  const transformedBox = [\n    // Minimum x coord\n    Math.min(...transformedCoords.map(i => i[0])),\n    // Minimum y coord\n    Math.min(...transformedCoords.map(i => i[1])),\n    // Max x coord\n    Math.max(...transformedCoords.map(i => i[0])),\n    // Max y coord\n    Math.max(...transformedCoords.map(i => i[1]))\n  ];\n  return transformedBox;\n}\n\nexport function getURLFromTemplate(template, properties) {\n  if (!template || !template.length) {\n    return null;\n  }\n  if (Array.isArray(template)) {\n    const index = Math.abs(properties.x + properties.y) % template.length;\n    template = template[index];\n  }\n\n  const {x, y, z} = properties;\n  return template\n    .replace('{x}', x)\n    .replace('{y}', y)\n    .replace('{z}', z)\n    .replace('{-y}', Math.pow(2, z) - y - 1);\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport, zRange, extent) {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({z: minZ});\n    const bounds1 = viewport.getBounds({z: maxZ});\n    bounds = [\n      Math.min(bounds0[0], bounds1[0]),\n      Math.min(bounds0[1], bounds1[1]),\n      Math.max(bounds0[2], bounds1[2]),\n      Math.max(bounds0[3], bounds1[3])\n    ];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  if (!viewport.isGeospatial) {\n    return [\n      // Top corner should not be more then bottom corner in either direction\n      Math.max(Math.min(bounds[0], extent[2]), extent[0]),\n      Math.max(Math.min(bounds[1], extent[3]), extent[1]),\n      // Bottom corner should not be less then top corner in either direction\n      Math.min(Math.max(bounds[2], extent[0]), extent[2]),\n      Math.min(Math.max(bounds[3], extent[1]), extent[3])\n    ];\n  }\n  return [\n    Math.max(bounds[0], extent[0]),\n    Math.max(bounds[1], extent[1]),\n    Math.min(bounds[2], extent[2]),\n    Math.min(bounds[3], extent[3])\n  ];\n}\n\nfunction getIndexingCoords(bbox, scale, modelMatrixInverse) {\n  if (modelMatrixInverse) {\n    const transformedTileIndex = transformBox(bbox, modelMatrixInverse).map(\n      i => (i * scale) / TILE_SIZE\n    );\n    return transformedTileIndex;\n  }\n  return bbox.map(i => (i * scale) / TILE_SIZE);\n}\n\nfunction getScale(z) {\n  return Math.pow(2, z);\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nfunction osmTile2lngLat(x, y, z) {\n  const scale = getScale(z);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x, y, z) {\n  const scale = getScale(z);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\n\nexport function tileToBoundingBox(viewport, x, y, z) {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(viewport, z, extent, modelMatrixInverse) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z);\n  const [minX, minY, maxX, maxY] = getIndexingCoords(bbox, scale, modelMatrixInverse);\n  const indices = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\n// eslint-disable-next-line complexity\nexport function getTileIndices({\n  viewport,\n  maxZoom,\n  minZoom,\n  zRange,\n  extent,\n  tileSize = TILE_SIZE,\n  modelMatrix,\n  modelMatrixInverse\n}) {\n  let z = Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize));\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  let transformedExtent = extent;\n  if (modelMatrix && modelMatrixInverse && extent && !viewport.isGeospatial) {\n    transformedExtent = transformBox(extent, modelMatrix);\n  }\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z, zRange, extent || DEFAULT_EXTENT)\n    : getIdentityTileIndices(viewport, z, transformedExtent || DEFAULT_EXTENT, modelMatrixInverse);\n}\n\n/**\n * Returns true if s is a valid URL template\n */\nexport function isURLTemplate(s) {\n  return /(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(s);\n}\n","import Tile2DHeader from './tile-2d-header';\nimport {getTileIndices, tileToBoundingBox} from './utils';\nimport {RequestScheduler} from '@loaders.gl/loader-utils';\nimport {Matrix4} from 'math.gl';\n\nconst TILE_STATE_UNKNOWN = 0;\nconst TILE_STATE_VISIBLE = 1;\n/*\n   show cached parent tile if children are loading\n   +-----------+       +-----+            +-----+-----+\n   |           |       |     |            |     |     |\n   |           |       |     |            |     |     |\n   |           |  -->  +-----+-----+  ->  +-----+-----+\n   |           |             |     |      |     |     |\n   |           |             |     |      |     |     |\n   +-----------+             +-----+      +-----+-----+\n\n   show cached children tiles when parent is loading\n   +-------+----       +------------\n   |       |           |\n   |       |           |\n   |       |           |\n   +-------+----  -->  |\n   |       |           |\n */\nconst TILE_STATE_PLACEHOLDER = 3;\nconst TILE_STATE_HIDDEN = 4;\n// tiles that should be displayed in the current viewport\nconst TILE_STATE_SELECTED = 5;\n\nexport const STRATEGY_NEVER = 'never';\nexport const STRATEGY_REPLACE = 'no-overlap';\nexport const STRATEGY_DEFAULT = 'best-available';\n\nconst DEFAULT_CACHE_SCALE = 5;\n\n/**\n * Manages loading and purging of tiles data. This class caches recently visited tiles\n * and only create new tiles if they are present.\n */\n\nexport default class Tileset2D {\n  /**\n   * Takes in a function that returns tile data, a cache size, and a max and a min zoom level.\n   * Cache size defaults to 5 * number of tiles in the current viewport\n   */\n  constructor(opts) {\n    this.opts = opts;\n    this._getTileData = opts.getTileData;\n\n    this.onTileError = opts.onTileError;\n    this.onTileLoad = tile => {\n      opts.onTileLoad(tile);\n      if (this.opts.maxCacheByteSize) {\n        this._cacheByteSize += tile.byteLength;\n        this._resizeCache();\n      }\n    };\n    this.onTileUnload = opts.onTileUnload;\n\n    this._requestScheduler = new RequestScheduler({\n      maxRequests: opts.maxRequests,\n      throttleRequests: opts.maxRequests > 0\n    });\n\n    // Maps tile id in string {z}-{x}-{y} to a Tile object\n    this._cache = new Map();\n    this._tiles = [];\n    this._dirty = false;\n    this._cacheByteSize = 0;\n\n    // Cache the last processed viewport\n    this._viewport = null;\n    this._selectedTiles = null;\n    this._frameNumber = 0;\n\n    this.setOptions(opts);\n  }\n\n  /* Public API */\n  get tiles() {\n    return this._tiles;\n  }\n\n  get selectedTiles() {\n    return this._selectedTiles;\n  }\n\n  get isLoaded() {\n    return this._selectedTiles.every(tile => tile.isLoaded);\n  }\n\n  setOptions(opts) {\n    Object.assign(this.opts, opts);\n    if (Number.isFinite(opts.maxZoom)) {\n      this._maxZoom = Math.floor(opts.maxZoom);\n    }\n    if (Number.isFinite(opts.minZoom)) {\n      this._minZoom = Math.ceil(opts.minZoom);\n    }\n  }\n\n  /**\n   * Update the cache with the given viewport and model matrix and triggers callback onUpdate.\n   * @param {*} viewport\n   * @param {*} onUpdate\n   * @param {*} modelMatrix\n   */\n  update(viewport, {zRange, modelMatrix} = {}) {\n    const modelMatrixAsMatrix4 = new Matrix4(modelMatrix);\n    const isModelMatrixNew = !modelMatrixAsMatrix4.equals(this._modelMatrix);\n    if (!viewport.equals(this._viewport) || isModelMatrixNew) {\n      if (isModelMatrixNew) {\n        this._modelMatrixInverse = modelMatrix && modelMatrixAsMatrix4.clone().invert();\n        this._modelMatrix = modelMatrix && modelMatrixAsMatrix4;\n      }\n      this._viewport = viewport;\n      const tileIndices = this.getTileIndices({\n        viewport,\n        maxZoom: this._maxZoom,\n        minZoom: this._minZoom,\n        zRange,\n        modelMatrix: this._modelMatrix,\n        modelMatrixInverse: this._modelMatrixInverse\n      });\n      this._selectedTiles = tileIndices.map(index => this._getTile(index, true));\n\n      if (this._dirty) {\n        // Some new tiles are added\n        this._rebuildTree();\n      }\n    }\n\n    // Update tile states\n    const changed = this.updateTileStates();\n\n    if (this._dirty) {\n      // cache size is either the user defined maxSize or 5 * number of current tiles in the viewport.\n      this._resizeCache();\n    }\n\n    if (changed) {\n      this._frameNumber++;\n    }\n\n    return this._frameNumber;\n  }\n\n  /* Public interface for subclassing */\n\n  // Returns array of {x, y, z}\n  getTileIndices({viewport, maxZoom, minZoom, zRange, modelMatrix, modelMatrixInverse}) {\n    const {tileSize, extent} = this.opts;\n    return getTileIndices({\n      viewport,\n      maxZoom,\n      minZoom,\n      zRange,\n      tileSize,\n      extent,\n      modelMatrix,\n      modelMatrixInverse\n    });\n  }\n\n  // Add custom metadata to tiles\n  getTileMetadata({x, y, z}) {\n    return {bbox: tileToBoundingBox(this._viewport, x, y, z)};\n  }\n\n  // Returns {x, y, z} of the parent tile\n  getParentIndex(tileIndex) {\n    // Perf: mutate the input object to avoid GC\n    tileIndex.x = Math.floor(tileIndex.x / 2);\n    tileIndex.y = Math.floor(tileIndex.y / 2);\n    tileIndex.z -= 1;\n    return tileIndex;\n  }\n\n  // Returns true if any tile's visibility changed\n  updateTileStates() {\n    this._updateTileStates(this.selectedTiles);\n\n    const {maxRequests} = this.opts;\n\n    const abortCandidates = [];\n    let ongoingRequestCount = 0;\n    let changed = false;\n    for (const tile of this._cache.values()) {\n      const isVisible = Boolean(tile.state & TILE_STATE_VISIBLE);\n      if (tile.isVisible !== isVisible) {\n        changed = true;\n        tile.isVisible = isVisible;\n      }\n\n      // isSelected used in request scheduler\n      tile.isSelected = tile.state === TILE_STATE_SELECTED;\n\n      // Keep track of all the ongoing requests\n      if (tile.isLoading) {\n        ongoingRequestCount++;\n        if (!tile.isSelected) {\n          abortCandidates.push(tile);\n        }\n      }\n    }\n\n    if (maxRequests > 0) {\n      while (ongoingRequestCount > maxRequests && abortCandidates.length > 0) {\n        // There are too many ongoing requests, so abort some that are unselected\n        const tile = abortCandidates.shift();\n        tile.abort();\n        ongoingRequestCount--;\n      }\n    }\n\n    return changed;\n  }\n\n  /* Private methods */\n\n  // This needs to be called every time some tiles have been added/removed from cache\n  _rebuildTree() {\n    const {_cache} = this;\n\n    // Reset states\n    for (const tile of _cache.values()) {\n      tile.parent = null;\n      tile.children.length = 0;\n    }\n\n    // Rebuild tree\n    for (const tile of _cache.values()) {\n      const parent = this._getNearestAncestor(tile.x, tile.y, tile.z);\n      tile.parent = parent;\n      if (parent) {\n        parent.children.push(tile);\n      }\n    }\n  }\n\n  // A selected tile is always visible.\n  // Never show two overlapping tiles.\n  // If a selected tile is loading, try showing a cached ancester with the closest z\n  // If a selected tile is loading, and no ancester is shown - try showing cached\n  // descendants with the closest z\n  _updateTileStates(selectedTiles) {\n    const {_cache} = this;\n    const refinementStrategy = this.opts.refinementStrategy || STRATEGY_DEFAULT;\n\n    // Reset states\n    for (const tile of _cache.values()) {\n      tile.state = TILE_STATE_UNKNOWN;\n    }\n\n    // For all the selected && pending tiles:\n    // - pick the closest ancestor as placeholder\n    // - if no ancestor is visible, pick the closest children as placeholder\n    for (const tile of selectedTiles) {\n      tile.state = TILE_STATE_SELECTED;\n    }\n\n    if (refinementStrategy === STRATEGY_NEVER) {\n      return;\n    }\n    for (const tile of selectedTiles) {\n      getPlaceholderInAncestors(tile, refinementStrategy);\n    }\n    for (const tile of selectedTiles) {\n      if (needsPlaceholder(tile)) {\n        getPlaceholderInChildren(tile);\n      }\n    }\n  }\n\n  /**\n   * Clear tiles that are not visible when the cache is full\n   */\n  /* eslint-disable complexity */\n  _resizeCache() {\n    const {_cache, opts} = this;\n\n    const maxCacheSize =\n      opts.maxCacheSize ||\n      (opts.maxCacheByteSize ? Infinity : DEFAULT_CACHE_SCALE * this.selectedTiles.length);\n    const maxCacheByteSize = opts.maxCacheByteSize || Infinity;\n\n    const overflown = _cache.size > maxCacheSize || this._cacheByteSize > maxCacheByteSize;\n\n    if (overflown) {\n      for (const [tileId, tile] of _cache) {\n        if (!tile.isVisible) {\n          // delete tile\n          this._cacheByteSize -= opts.maxCacheByteSize ? tile.byteLength : 0;\n          _cache.delete(tileId);\n          this.onTileUnload(tile);\n        }\n        if (_cache.size <= maxCacheSize && this._cacheByteSize <= maxCacheByteSize) {\n          break;\n        }\n      }\n      this._rebuildTree();\n      this._dirty = true;\n    }\n    if (this._dirty) {\n      this._tiles = Array.from(this._cache.values())\n        // sort by zoom level so that smaller tiles are displayed on top\n        .sort((t1, t2) => t1.z - t2.z);\n\n      this._dirty = false;\n    }\n  }\n  /* eslint-enable complexity */\n\n  _getTile({x, y, z}, create) {\n    const tileId = `${x},${y},${z}`;\n    let tile = this._cache.get(tileId);\n\n    if (!tile && create) {\n      tile = new Tile2DHeader({\n        x,\n        y,\n        z,\n        onTileLoad: this.onTileLoad,\n        onTileError: this.onTileError\n      });\n      Object.assign(tile, this.getTileMetadata(tile));\n      tile.loadData(this._getTileData, this._requestScheduler);\n      this._cache.set(tileId, tile);\n      this._dirty = true;\n    } else if (tile && tile.isCancelled && !tile.isLoading) {\n      tile.loadData(this._getTileData, this._requestScheduler);\n    }\n\n    return tile;\n  }\n\n  _getNearestAncestor(x, y, z) {\n    const {_minZoom = 0} = this;\n    let index = {x, y, z};\n\n    while (index.z > _minZoom) {\n      index = this.getParentIndex(index);\n      const parent = this._getTile(index);\n      if (parent) {\n        return parent;\n      }\n    }\n    return null;\n  }\n}\n\n// A selected tile needs placeholder from its children if\n// - it is not loaded\n// - none of its ancestors is visible and loaded\nfunction needsPlaceholder(tile) {\n  let t = tile;\n  while (t) {\n    if (t.state & (TILE_STATE_VISIBLE === 0)) {\n      return true;\n    }\n    if (t.isLoaded) {\n      return false;\n    }\n    t = t.parent;\n  }\n  return true;\n}\n\nfunction getPlaceholderInAncestors(tile, refinementStrategy) {\n  let parent;\n  let state = TILE_STATE_PLACEHOLDER;\n  while ((parent = tile.parent)) {\n    if (tile.isLoaded) {\n      // If a tile is loaded, mark all its ancestors as hidden\n      state = TILE_STATE_HIDDEN;\n      if (refinementStrategy === STRATEGY_DEFAULT) {\n        return;\n      }\n    }\n    parent.state = Math.max(parent.state, state);\n    tile = parent;\n  }\n}\n\n// Recursively set children as placeholder\nfunction getPlaceholderInChildren(tile) {\n  for (const child of tile.children) {\n    child.state = Math.max(child.state, TILE_STATE_PLACEHOLDER);\n    if (!child.isLoaded) {\n      getPlaceholderInChildren(child);\n    }\n  }\n}\n","import {CompositeLayer, _flatten as flatten} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {load} from '@loaders.gl/core';\n\nimport Tileset2D, {STRATEGY_DEFAULT} from './tileset-2d';\nimport {urlType, getURLFromTemplate} from './utils';\n\nconst defaultProps = {\n  data: [],\n  dataComparator: urlType.equals,\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props), compare: false},\n  getTileData: {type: 'function', optional: true, value: null, compare: false},\n  // TODO - change to onViewportLoad to align with Tile3DLayer\n  onViewportLoad: {type: 'function', optional: true, value: null, compare: false},\n  onTileLoad: {type: 'function', value: tile => {}, compare: false},\n  onTileUnload: {type: 'function', value: tile => {}, compare: false},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err), compare: false},\n  extent: {type: 'array', optional: true, value: null, compare: true},\n  tileSize: 512,\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null,\n  maxCacheByteSize: null,\n  refinementStrategy: STRATEGY_DEFAULT,\n  zRange: null,\n  // Use load directly so we don't use ResourceManager\n  fetch: {\n    type: 'function',\n    value: (url, {layer, signal}) => {\n      const loadOptions = {signal, ...(layer.getLoadOptions() || {})};\n\n      return load(url, loadOptions);\n    },\n    compare: false\n  },\n  maxRequests: 6\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      tiles: [],\n      isLoaded: false\n    };\n  }\n\n  get isLoaded() {\n    const {tileset} = this.state;\n    return tileset.selectedTiles.every(\n      tile => tile.layers && tile.layers.every(layer => layer.isLoaded)\n    );\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    let {tileset} = this.state;\n    const createTileCache =\n      !tileset ||\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData));\n\n    if (createTileCache) {\n      const maxZoom = Number.isFinite(this.state.maxZoom) ? this.state.maxZoom : props.maxZoom;\n      const minZoom = Number.isFinite(this.state.minZoom) ? this.state.minZoom : props.minZoom;\n      const {\n        tileSize,\n        maxCacheSize,\n        maxCacheByteSize,\n        refinementStrategy,\n        extent,\n        maxRequests\n      } = props;\n      tileset = new Tileset2D({\n        getTileData: this.getTileData.bind(this),\n        maxCacheSize,\n        maxCacheByteSize,\n        maxZoom,\n        minZoom,\n        tileSize,\n        refinementStrategy,\n        extent,\n        onTileLoad: this._onTileLoad.bind(this),\n        onTileError: this._onTileError.bind(this),\n        onTileUnload: this._onTileUnload.bind(this),\n        maxRequests\n      });\n      this.setState({tileset});\n    } else if (changeFlags.propsChanged || changeFlags.updateTriggersChanged) {\n      tileset.setOptions(props);\n      // if any props changed, delete the cached layers\n      this.state.tileset.tiles.forEach(tile => {\n        tile.layers = null;\n      });\n    }\n\n    this._updateTileset();\n  }\n\n  _updateTileset() {\n    const {tileset} = this.state;\n    const {zRange, modelMatrix} = this.props;\n    const frameNumber = tileset.update(this.context.viewport, {zRange, modelMatrix});\n    const {isLoaded} = tileset;\n\n    const loadingStateChanged = this.state.isLoaded !== isLoaded;\n    const tilesetChanged = this.state.frameNumber !== frameNumber;\n\n    if (isLoaded && (loadingStateChanged || tilesetChanged)) {\n      this._onViewportLoad();\n    }\n\n    if (tilesetChanged) {\n      // Save the tileset frame number - trigger a rerender\n      this.setState({frameNumber});\n    }\n    // Save the loaded state - should not trigger a rerender\n    this.state.isLoaded = isLoaded;\n  }\n\n  _onViewportLoad() {\n    const {tileset} = this.state;\n    const {onViewportLoad} = this.props;\n\n    if (onViewportLoad) {\n      onViewportLoad(tileset.selectedTiles.map(tile => tile.data));\n    }\n  }\n\n  _onTileLoad(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileLoad(tile);\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileError(error, tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileError(error);\n    // errorred tiles should not block rendering, are considered \"loaded\" with empty data\n    layer._updateTileset();\n\n    if (tile.isVisible) {\n      this.setNeedsUpdate();\n    }\n  }\n\n  _onTileUnload(tile) {\n    const layer = this.getCurrentLayer();\n    layer.props.onTileUnload(tile);\n  }\n\n  // Methods for subclass to override\n\n  getTileData(tile) {\n    const {data} = this.props;\n    const {getTileData, fetch} = this.getCurrentLayer().props;\n    const {signal} = tile;\n\n    tile.url = getURLFromTemplate(data, tile);\n\n    if (getTileData) {\n      return getTileData(tile);\n    }\n    if (tile.url) {\n      return fetch(tile.url, {layer: this, signal});\n    }\n    return null;\n  }\n\n  renderSubLayers(props) {\n    return this.props.renderSubLayers(props);\n  }\n\n  getHighlightedObjectIndex() {\n    return -1;\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  renderLayers() {\n    const {visible} = this.props;\n    return this.state.tileset.tiles.map(tile => {\n      // For a tile to be visible:\n      // - parent layer must be visible\n      // - tile must be visible in the current viewport\n      const isVisible = visible && tile.isVisible;\n      const highlightedObjectIndex = this.getHighlightedObjectIndex(tile);\n      // cache the rendered layer in the tile\n      if (!tile.isLoaded) {\n        // no op\n      } else if (!tile.layers) {\n        const layers = this.renderSubLayers(\n          Object.assign({}, this.props, {\n            id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n            data: tile.data,\n            visible: isVisible,\n            _offset: 0,\n            tile,\n            highlightedObjectIndex\n          })\n        );\n        tile.layers = flatten(layers, Boolean);\n      } else if (\n        tile.layers[0] &&\n        (tile.layers[0].props.visible !== isVisible ||\n          tile.layers[0].props.highlightedObjectIndex !== highlightedObjectIndex)\n      ) {\n        tile.layers = tile.layers.map(layer =>\n          layer.clone({visible: isVisible, highlightedObjectIndex})\n        );\n      }\n      return tile.layers;\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {deepEqual} from '../utils/deep-equal';\n\nexport default class LayerExtension {\n  constructor(opts = {}) {\n    this.opts = opts;\n  }\n\n  equals(extension) {\n    if (this === extension) {\n      return true;\n    }\n\n    return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts);\n  }\n\n  getShaders(extension) {\n    return null;\n  }\n\n  getSubLayerProps(extension) {\n    const {defaultProps = {}} = extension.constructor;\n    const newProps = {\n      updateTriggers: {}\n    };\n\n    /* eslint-disable max-depth */\n    for (const key in defaultProps) {\n      if (key in this.props) {\n        const propDef = defaultProps[key];\n        const propValue = this.props[key];\n        newProps[key] = propValue;\n        if (propDef && propDef.type === 'accessor') {\n          newProps.updateTriggers[key] = this.props.updateTriggers[key];\n          if (typeof propValue === 'function') {\n            newProps[key] = this.getSubLayerAccessor(propValue, true);\n          }\n        }\n      }\n    }\n    /* eslint-enable max-depth */\n    return newProps;\n  }\n\n  initializeState(context, extension) {}\n\n  updateState(params, extension) {}\n\n  draw(params, extension) {}\n\n  finalizeState(extension) {}\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\n\nconst defaultProps = {\n  clipBounds: [0, 0, 1, 1]\n};\n\nconst shaderFunction = `\nuniform vec4 clip_bounds;\n\nbool clip_isInBounds(vec2 position) {\n  return position.x >= clip_bounds[0] && position.y >= clip_bounds[1] && position.x < clip_bounds[2] && position.y < clip_bounds[3];\n}\n`;\n\n/*\n * The vertex-shader version clips geometries by their anchor position\n * e.g. ScatterplotLayer - show if the center of a circle is within bounds\n */\nconst shaderModuleVs = {\n  name: 'clip-vs',\n  vs: shaderFunction\n};\n\nconst injectionVs = {\n  'vs:#decl': `\nvarying float clip_isVisible;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  clip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));\n`,\n  'fs:#decl': `\nvarying float clip_isVisible;\n`,\n  'fs:DECKGL_FILTER_COLOR': `\n  if (clip_isVisible < 0.5) discard;\n`\n};\n\n/*\n * The fragment-shader version clips pixels at the bounds\n * e.g. PolygonLayer - show the part of the polygon that intersect with the bounds \n */\nconst shaderModuleFs = {\n  name: 'clip-fs',\n  fs: shaderFunction\n};\n\nconst injectionFs = {\n  'vs:#decl': `\nvarying vec2 clip_commonPosition;\n`,\n  'vs:DECKGL_FILTER_GL_POSITION': `\n  clip_commonPosition = geometry.position.xy;\n`,\n  'fs:#decl': `\nvarying vec2 clip_commonPosition;\n`,\n  'fs:DECKGL_FILTER_COLOR': `\n  if (!clip_isInBounds(clip_commonPosition)) discard;\n`\n};\n\nexport default class ClipExtension extends LayerExtension {\n  getShaders() {\n    // If `clipByInstance: true`, the entire object is shown/hidden based on its anchor position (done by vertex shader)\n    // Otherwise, the object is trimmed by the clip bounds (done by fragment shader)\n\n    // Default behavior: consider a layer instanced if it has attribute `instancePositions`\n    let clipByInstance = 'instancePositions' in this.getAttributeManager().attributes;\n    // Users can override by setting the `clipByInstance` prop\n    if ('clipByInstance' in this.props) {\n      clipByInstance = this.props.clipByInstance;\n    }\n    this.state.clipByInstance = clipByInstance;\n\n    return clipByInstance\n      ? {\n          modules: [shaderModuleVs],\n          inject: injectionVs\n        }\n      : {\n          modules: [shaderModuleFs],\n          inject: injectionFs\n        };\n  }\n\n  draw({uniforms}) {\n    const {clipBounds = defaultProps.clipBounds} = this.props;\n    if (this.state.clipByInstance) {\n      uniforms.clip_bounds = clipBounds;\n    } else {\n      const corner0 = this.projectPosition([clipBounds[0], clipBounds[1], 0]);\n      const corner1 = this.projectPosition([clipBounds[2], clipBounds[3], 0]);\n\n      uniforms.clip_bounds = [\n        Math.min(corner0[0], corner1[0]),\n        Math.min(corner0[1], corner1[1]),\n        Math.max(corner0[0], corner1[0]),\n        Math.max(corner0[1], corner1[1])\n      ];\n    }\n  }\n}\n\nClipExtension.extensionName = 'ClipExtension';\nClipExtension.defaultProps = defaultProps;\n","import {Matrix4} from 'math.gl';\nimport {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate, isURLTemplate} from '../tile-layer/utils';\nimport ClipExtension from './clip-extension';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps = {\n  uniqueIdProperty: {type: 'string', value: ''},\n  highlightedFeatureId: null,\n  onViewportChange: {type: 'function', optional: true, value: null, compare: false}\n};\n\nasync function fetchTileJSON(url) {\n  try {\n    return await load(url);\n  } catch (error) {\n    throw new Error(`An error occurred fetching TileJSON: ${error}`);\n  }\n}\n\nexport default class MVTLayer extends TileLayer {\n  initializeState() {\n    super.initializeState();\n    this.setState({\n      data: null,\n      tileJSON: null\n    });\n  }\n\n  get isLoaded() {\n    return this.state.data && this.state.tileset && super.isLoaded;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    if (changeFlags.dataChanged) {\n      this._updateTileData({props});\n    }\n\n    if (this.state.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      const {tileset} = this.state;\n      if (changeFlags.viewportChanged && tileset.isLoaded) {\n        this._onViewportChange();\n      }\n    }\n  }\n\n  async _updateTileData({props}) {\n    const {onDataLoad} = this.props;\n    let {data} = props;\n    let tileJSON = null;\n    let {minZoom, maxZoom} = props;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      this.setState({data: null, tileJSON: null});\n      tileJSON = await fetchTileJSON(data);\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON);\n      }\n    } else if (data.tilejson) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n\n      const tileMinZoom = parseInt(tileJSON.minzoom, 10);\n      const tileMaxZoom = parseInt(tileJSON.maxzoom, 10);\n\n\n      if (Number.isFinite(tileMinZoom) && tileMinZoom > minZoom) {\n        minZoom = tileMinZoom;\n      }\n\n      if (\n        Number.isFinite(tileMaxZoom) &&\n        (!Number.isFinite(maxZoom) || tileMaxZoom < maxZoom)\n      ) {\n        maxZoom = tileMaxZoom;\n      }\n    }\n\n    this.setState({data, tileJSON, minZoom, maxZoom});\n  }\n\n  renderLayers() {\n    if (!this.state.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.state.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let options = this.getLoadOptions();\n    options = {\n      ...options,\n      mvt: {\n        ...(options && options.mvt),\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: {x: tile.x, y: tile.y, z: tile.z}\n      }\n    };\n    return load(url, MVTLoader, options);\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    return super.renderSubLayers(props);\n  }\n\n  onHover(info, pickingEvent) {\n    const {uniqueIdProperty, autoHighlight} = this.props;\n\n    if (autoHighlight) {\n      const {hoveredFeatureId} = this.state;\n      const hoveredFeature = info.object;\n      let newHoveredFeatureId;\n\n      if (hoveredFeature) {\n        newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      }\n\n      if (hoveredFeatureId !== newHoveredFeatureId) {\n        this.setState({hoveredFeatureId: newHoveredFeatureId});\n      }\n    }\n\n    return super.onHover(info, pickingEvent);\n  }\n\n  getHighlightedObjectIndex(tile) {\n    const {hoveredFeatureId} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId} = this.props;\n    const {data} = tile;\n\n    const isFeatureIdPresent =\n      isFeatureIdDefined(hoveredFeatureId) || isFeatureIdDefined(highlightedFeatureId);\n\n    if (!isFeatureIdPresent || !Array.isArray(data)) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isFeatureIdDefined(highlightedFeatureId)\n      ? highlightedFeatureId\n      : hoveredFeatureId;\n\n    return data.findIndex(\n      feature => getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight\n    );\n  }\n\n  _pickObjects(maxObjects) {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  getRenderedFeatures(maxFeatures = null) {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === -1) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  _onViewportChange() {\n    const {onViewportChange} = this.props;\n    if (onViewportChange) {\n      const {viewport} = this.context;\n      onViewportChange({\n        getRenderedFeatures: this.getRenderedFeatures.bind(this),\n        viewport\n      });\n    }\n  }\n\n  _onViewportLoad() {\n    super._onViewportLoad();\n    this._onViewportChange();\n  }\n}\n\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n  if (uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return -1;\n}\n\nfunction isFeatureIdDefined(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\nMVTLayer.layerName = 'MVTLayer';\nMVTLayer.defaultProps = defaultProps;\n","const defaultCredentials = {\n  username: 'public',\n  apiKey: 'default_public',\n  region: 'us',\n  // Set to null to guess from mapsUrl attribute. Other values are 'v1' or 'v2'\n  mapsVersion: null,\n  // SQL API URL\n  sqlUrl: 'https://{user}.carto.com/api/v2/sql',\n  // Maps API URL\n  mapsUrl: 'https://maps-api-v2.{region}.carto.com/user/{user}'\n};\n\nlet credentials = defaultCredentials;\n\nexport function setDefaultCredentials(opts) {\n  credentials = {\n    ...credentials,\n    ...opts\n  };\n}\n\nexport function getDefaultCredentials() {\n  return credentials;\n}\n\nexport function getMapsVersion(creds) {\n  const localCreds = creds || credentials;\n  if (localCreds.mapsVersion) {\n    return localCreds.mapsVersion;\n  }\n\n  return localCreds.mapsUrl.includes('api/v1/map') ? 'v1' : 'v2';\n}\n","import {getDefaultCredentials, getMapsVersion} from '../config';\n\nconst DEFAULT_USER_COMPONENT_IN_URL = '{user}';\nconst DEFAULT_REGION_COMPONENT_IN_URL = '{region}';\n\n/**\n * Obtain a TileJson from Maps API v1 and v2\n */\nexport async function getTileJSON(mapConfig, credentials) {\n  const creds = {...getDefaultCredentials(), ...credentials};\n  switch (getMapsVersion(creds)) {\n    case 'v1':\n      // Maps API v1\n      const layergroup = await instantiateMap({mapConfig, credentials: creds});\n      return layergroup.metadata.tilejson.vector;\n\n    case 'v2':\n      // Maps API v2\n      return await instantiateMap({mapConfig, credentials: creds});\n\n    default:\n      throw new Error('Invalid maps API version. It shoud be v1 or v2');\n  }\n}\n\n/**\n * Instantiate a map using Maps API\n */\nasync function instantiateMap({mapConfig, credentials}) {\n  const url = buildURL({mapConfig, credentials});\n\n  let response;\n\n  try {\n    /* global fetch */\n    /* eslint no-undef: \"error\" */\n    response = await fetch(url, {\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n  } catch (error) {\n    throw new Error(`Failed to connect to Maps API: ${error}`);\n  }\n\n  const json = await response.json();\n\n  if (!response.ok) {\n    dealWithError({response, json, credentials});\n  }\n\n  return json;\n}\n\n/**\n * Display proper message from Maps API error\n */\nfunction dealWithError({response, json, credentials}) {\n  switch (response.status) {\n    case 401:\n      throw new Error(\n        `Unauthorized access to Maps API: invalid combination of user ('${\n          credentials.username\n        }') and apiKey ('${credentials.apiKey}')`\n      );\n    case 403:\n      throw new Error(\n        `Unauthorized access to dataset: the provided apiKey('${\n          credentials.apiKey\n        }') doesn't provide access to the requested data`\n      );\n\n    default:\n      const e = getMapsVersion() === 'v1' ? JSON.stringify(json.errors) : json.error;\n      throw new Error(e);\n  }\n}\n\n/**\n * Build a URL with all required parameters\n */\nfunction buildURL({mapConfig, credentials}) {\n  const cfg = JSON.stringify(mapConfig);\n  const encodedApiKey = encodeParameter('api_key', credentials.apiKey);\n  const encodedClient = encodeParameter('client', `deck-gl-carto`);\n  const parameters = [encodedApiKey, encodedClient];\n  return `${mapsUrl(credentials)}/tilejson?${parameters.join('&')}&${encodeParameter(\n    'config',\n    cfg\n  )}`;\n}\n\n/**\n * Prepare a url valid for the specified user\n */\nfunction mapsUrl(credentials) {\n  return credentials.mapsUrl\n    .replace(DEFAULT_USER_COMPONENT_IN_URL, credentials.username)\n    .replace(DEFAULT_REGION_COMPONENT_IN_URL, credentials.region);\n}\n\n/**\n * Simple encode parameter\n */\nfunction encodeParameter(name, value) {\n  return `${name}=${encodeURIComponent(value)}`;\n}\n","import {CompositeLayer} from '@deck.gl/core';\nimport {MVTLayer} from '@deck.gl/geo-layers';\nimport {getTileJSON} from '../api/maps-api-client';\n\nconst defaultProps = {\n  data: null,\n  credentials: null,\n  onDataLoad: {type: 'function', value: tilejson => {}, compare: false},\n  // eslint-disable-next-line\n  onDataError: {type: 'function', value: err => console.error(err), compare: false}\n};\n\nexport default class CartoLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      tilejson: null\n    };\n  }\n\n  updateState({changeFlags}) {\n    const {data} = this.props;\n    if (changeFlags.dataChanged && data) {\n      this._updateData();\n    }\n  }\n\n  async _updateData() {\n    try {\n      const tilejson = await this._updateTileJSON();\n      this.setState({tilejson});\n      this.props.onDataLoad(tilejson);\n    } catch (err) {\n      this.props.onDataError(err);\n    }\n  }\n\n  buildMapConfig() {\n    throw new Error('You must use one of the specific carto layers: BQ or SQL type');\n  }\n\n  async _updateTileJSON() {\n    const tilejson = await getTileJSON(this.buildMapConfig(this.props), this.props.credentials);\n    return tilejson;\n  }\n\n  onHover(info, pickingEvent) {\n    const [mvtLayer] = this.getSubLayers();\n    return mvtLayer ? mvtLayer.onHover(info, pickingEvent) : super.onHover(info, pickingEvent);\n  }\n\n  renderLayers() {\n    if (!this.state.tilejson) return null;\n\n    const {updateTriggers} = this.props;\n\n    return new MVTLayer(\n      this.props,\n      this.getSubLayerProps({\n        id: 'mvt',\n        data: this.state.tilejson,\n        updateTriggers\n      })\n    );\n  }\n}\n\nCartoLayer.layerName = 'CartoLayer';\nCartoLayer.defaultProps = defaultProps;\n","import CartoLayer from './carto-layer';\n\nexport default class CartoBQTilerLayer extends CartoLayer {\n  buildMapConfig() {\n    return {\n      version: '2.0.0',\n      layers: [\n        {\n          type: 'tileset',\n          source: 'bigquery',\n          options: {\n            tileset: this.props.data\n          }\n        }\n      ]\n    };\n  }\n}\n\nCartoBQTilerLayer.layerName = 'CartoBQTilerLayer';\n","import CartoLayer from './carto-layer';\nimport {getMapsVersion} from '../config';\n\nconst defaultProps = {\n  bufferSize: 16, // MVT buffersize in pixels,\n  tileExtent: 4096, // Tile extent in tile coordinate space (MVT spec.)\n  uniqueIdProperty: 'cartodb_id'\n};\n\nexport default class CartoSQLLayer extends CartoLayer {\n  buildMapConfig() {\n    const {data, bufferSize, tileExtent} = this.props;\n\n    const version = getMapsVersion(this.props.creds);\n    const isSQL = data.search(' ') > -1;\n    const sql = isSQL ? data : `SELECT * FROM ${data}`;\n\n    switch (version) {\n      case 'v1':\n        // Map config v1\n        return {\n          version: '1.3.1',\n          buffersize: {\n            mvt: bufferSize\n          },\n          layers: [\n            {\n              type: 'mapnik',\n              options: {\n                sql: sql.trim(),\n                vector_extent: tileExtent\n              }\n            }\n          ]\n        };\n\n      case 'v2':\n        // Map config v2\n        return {\n          version: '2.0.0',\n          buffer_size: bufferSize,\n          tile_extent: tileExtent,\n          layers: [\n            {\n              type: 'sql',\n              source: 'postgres',\n              options: {\n                sql: sql.trim(),\n                vector_extent: tileExtent\n              }\n            }\n          ]\n        };\n      default:\n        throw new Error(`Cannot build MapConfig for unmatching version ${version}`);\n    }\n  }\n}\n\nCartoSQLLayer.layerName = 'CartoSQLLayer';\nCartoSQLLayer.defaultProps = defaultProps;\n","const base_url = 'https://basemaps.cartocdn.com/gl/{basemap}-gl-style/style.json';\n\nexport default {\n  VOYAGER: base_url.replace('{basemap}', 'voyager'),\n  POSITRON: base_url.replace('{basemap}', 'positron'),\n  DARK_MATTER: base_url.replace('{basemap}', 'dark-matter'),\n  VOYAGER_NOLABELS: base_url.replace('{basemap}', 'voyager-nolabels'),\n  POSITRON_NOLABELS: base_url.replace('{basemap}', 'positron-nolabels'),\n  DARK_MATTER_NOLABELS: base_url.replace('{basemap}', 'dark-matter-nolabels')\n};\n","// This configuration object determines which deck.gl classes are accessible in Playground\n\nimport {MapView } from '@deck.gl/core';\n\nimport {CartoSQLLayer, CartoBQTilerLayer, BASEMAP} from '@deck.gl/carto';\n\nconst config = {\n  // Classes that should be instantiatable by JSON converter\n  classes: Object.assign(\n    {MapView},\n    {CartoBQTilerLayer, CartoSQLLayer},\n  ),\n\n  enumerations: {\n    CARTO_BASEMAP: BASEMAP\n  }\n};\n\nexport default config;\n\n\n","import {load} from '@loaders.gl/core';\n\nexport default class Resource {\n  constructor(id, data, context) {\n    this.id = id;\n    this.context = context;\n\n    this._loadCount = 0;\n    this._subscribers = new Set();\n\n    this.setData(data);\n  }\n\n  // consumer: {onChange: Function}\n  subscribe(consumer) {\n    this._subscribers.add(consumer);\n  }\n\n  unsubscribe(consumer) {\n    this._subscribers.delete(consumer);\n  }\n\n  inUse() {\n    return this._subscribers.size > 0;\n  }\n\n  delete() {\n    // Remove any resources created\n  }\n\n  getData() {\n    return this.isLoaded\n      ? this._error\n        ? Promise.reject(this._error)\n        : this._content\n      : this._loader.then(() => this.getData());\n  }\n\n  setData(data, forceUpdate) {\n    if (data === this._data && !forceUpdate) {\n      return;\n    }\n    this._data = data;\n    const loadCount = ++this._loadCount;\n\n    let loader = data;\n    if (typeof data === 'string') {\n      loader = load(data);\n    }\n    if (loader instanceof Promise) {\n      this.isLoaded = false;\n      this._loader = loader\n        .then(result => {\n          // check if source has changed\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = null;\n            this._content = result;\n          }\n        })\n        .catch(error => {\n          if (this._loadCount === loadCount) {\n            this.isLoaded = true;\n            this._error = error || true;\n          }\n        });\n    } else {\n      this.isLoaded = true;\n      this._error = null;\n      this._content = data;\n    }\n\n    for (const subscriber of this._subscribers) {\n      subscriber.onChange(this.getData());\n    }\n  }\n}\n","/* global setTimeout */\nimport Resource from './resource';\n\nexport default class ResourceManager {\n  constructor({gl, protocol}) {\n    this.protocol = protocol || 'resource://';\n\n    this._context = {\n      gl,\n      resourceManager: this\n    };\n    this._resources = {};\n    this._consumers = {};\n\n    this._pruneRequest = null;\n  }\n\n  contains(resourceId) {\n    if (resourceId.startsWith(this.protocol)) {\n      return true;\n    }\n    return resourceId in this._resources;\n  }\n\n  add({resourceId, data, forceUpdate = false, persistent = true}) {\n    let res = this._resources[resourceId];\n\n    if (res) {\n      res.setData(data, forceUpdate);\n    } else {\n      res = new Resource(resourceId, data, this._context);\n      this._resources[resourceId] = res;\n    }\n    // persistent resources can only be removed by calling `remove`\n    // non-persistent resources may be released when there are no more consumers\n    res.persistent = persistent;\n  }\n\n  remove(resourceId) {\n    const res = this._resources[resourceId];\n\n    if (res) {\n      res.delete();\n      delete this._resources[resourceId];\n    }\n  }\n\n  unsubscribe({consumerId}) {\n    const consumer = this._consumers[consumerId];\n    if (consumer) {\n      for (const requestId in consumer) {\n        const request = consumer[requestId];\n        if (request.resource) {\n          request.resource.unsubscribe(request);\n        }\n      }\n      delete this._consumers[consumerId];\n      this.prune();\n    }\n  }\n\n  subscribe({resourceId, onChange, consumerId, requestId = 'default'}) {\n    const {_resources: resources, protocol} = this;\n    if (resourceId.startsWith(protocol)) {\n      resourceId = resourceId.replace(protocol, '');\n      if (!resources[resourceId]) {\n        // Add placeholder. When this resource becomes available, the consumer will be notified.\n        this.add({resourceId, data: null, persistent: false});\n      }\n    }\n    const res = resources[resourceId];\n    this._track(consumerId, requestId, res, onChange);\n    if (res) {\n      return res.getData();\n    }\n\n    return undefined;\n  }\n\n  prune() {\n    if (!this._pruneRequest) {\n      // prune() may be called multiple times in the same animation frame.\n      // Batch multiple requests together\n      this._pruneRequest = setTimeout(() => this._prune(), 0);\n    }\n  }\n\n  finalize() {\n    for (const key in this._resources) {\n      this._resources[key].delete();\n    }\n  }\n\n  _track(consumerId, requestId, resource, onChange) {\n    const consumers = this._consumers;\n    const consumer = (consumers[consumerId] = consumers[consumerId] || {});\n    const request = consumer[requestId] || {};\n\n    if (request.resource) {\n      request.resource.unsubscribe(request);\n      request.resource = null;\n      this.prune();\n    }\n    if (resource) {\n      consumer[requestId] = request;\n      request.onChange = onChange;\n      request.resource = resource;\n      resource.subscribe(request);\n    }\n  }\n\n  _prune() {\n    this._pruneRequest = null;\n\n    for (const key of Object.keys(this._resources)) {\n      const res = this._resources[key];\n      if (!res.persistent && !res.inUse()) {\n        res.delete();\n        delete this._resources[key];\n      }\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {ProgramManager} from '@luma.gl/core';\nimport {gouraudLighting, phongLighting} from '@luma.gl/core';\nimport geometry from './misc/geometry';\nimport project from './project/project';\nimport project32 from './project32/project32';\nimport shadow from './shadow/shadow';\nimport picking from './picking/picking';\n\nconst DEFAULT_MODULES = [geometry, project];\n\nconst SHADER_HOOKS = [\n  'vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)',\n  'fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)'\n];\n\nexport function createProgramManager(gl) {\n  const programManager = ProgramManager.getDefaultProgramManager(gl);\n\n  for (const shaderModule of DEFAULT_MODULES) {\n    programManager.addDefaultModule(shaderModule);\n  }\n  for (const shaderHook of SHADER_HOOKS) {\n    programManager.addShaderHook(shaderHook);\n  }\n\n  return programManager;\n}\n\nexport {picking, project, project32, gouraudLighting, phongLighting, shadow};\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst vs = `\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry;\n`;\n\nconst fs = `\n#define SMOOTH_EDGE_RADIUS 0.5\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n`;\n\nexport default {name: 'geometry', vs, fs};\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Timeline} from '@luma.gl/core';\nimport Layer from './layer';\nimport {LIFECYCLE} from '../lifecycle/constants';\nimport log from '../utils/log';\nimport debug from '../debug';\nimport {flatten} from '../utils/flatten';\nimport {Stats} from 'probe.gl';\nimport ResourceManager from './resource/resource-manager';\n\nimport Viewport from '../viewports/viewport';\nimport {createProgramManager} from '../shaderlib';\n\nconst TRACE_SET_LAYERS = 'layerManager.setLayers';\nconst TRACE_ACTIVATE_VIEWPORT = 'layerManager.activateViewport';\n\n// CONTEXT IS EXPOSED TO LAYERS\nconst INITIAL_CONTEXT = Object.seal({\n  layerManager: null,\n  resourceManager: null,\n  deck: null,\n  gl: null,\n\n  // General resources\n  stats: null, // for tracking lifecycle performance\n\n  // GL Resources\n  shaderCache: null,\n  pickingFBO: null, // Screen-size framebuffer that layers can reuse\n\n  mousePosition: null,\n\n  userData: {} // Place for any custom app `context`\n});\n\nconst layerName = layer => (layer instanceof Layer ? `${layer}` : !layer ? 'null' : 'invalid');\n\nexport default class LayerManager {\n  // eslint-disable-next-line\n  constructor(gl, {deck, stats, viewport, timeline} = {}) {\n    // Currently deck.gl expects the DeckGL.layers array to be different\n    // whenever React rerenders. If the same layers array is used, the\n    // LayerManager's diffing algorithm will generate a fatal error and\n    // break the rendering.\n\n    // `this.lastRenderedLayers` stores the UNFILTERED layers sent\n    // down to LayerManager, so that `layers` reference can be compared.\n    // If it's the same across two React render calls, the diffing logic\n    // will be skipped.\n    this.lastRenderedLayers = [];\n    this.layers = [];\n    this.resourceManager = new ResourceManager({gl, protocol: 'deck://'});\n\n    this.context = Object.assign({}, INITIAL_CONTEXT, {\n      layerManager: this,\n      gl,\n      deck,\n      // Enabling luma.gl Program caching using private API (_cachePrograms)\n      programManager: gl && createProgramManager(gl),\n      stats: stats || new Stats({id: 'deck.gl'}),\n      // Make sure context.viewport is not empty on the first layer initialization\n      viewport: viewport || new Viewport({id: 'DEFAULT-INITIAL-VIEWPORT'}), // Current viewport, exposed to layers for project* function\n      timeline: timeline || new Timeline(),\n      resourceManager: this.resourceManager\n    });\n\n    this._needsRedraw = 'Initial render';\n    this._needsUpdate = false;\n    this._debug = false;\n    this._onError = null;\n\n    this.activateViewport = this.activateViewport.bind(this);\n\n    Object.seal(this);\n  }\n\n  // Method to call when the layer manager is not needed anymore.\n  finalize() {\n    this.resourceManager.finalize();\n    // Finalize all layers\n    for (const layer of this.layers) {\n      this._finalizeLayer(layer);\n    }\n  }\n\n  // Check if a redraw is needed\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    let redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    // This layers list doesn't include sublayers, relying on composite layers\n    for (const layer of this.layers) {\n      // Call every layer to clear their flags\n      const layerNeedsRedraw = layer.getNeedsRedraw(opts);\n      redraw = redraw || layerNeedsRedraw;\n    }\n\n    return redraw;\n  }\n\n  // Check if a deep update of all layers is needed\n  needsUpdate() {\n    return this._needsUpdate;\n  }\n\n  // Layers will be redrawn (in next animation frame)\n  setNeedsRedraw(reason) {\n    this._needsRedraw = this._needsRedraw || reason;\n  }\n\n  // Layers will be updated deeply (in next animation frame)\n  // Potentially regenerating attributes and sub layers\n  setNeedsUpdate(reason) {\n    this._needsUpdate = this._needsUpdate || reason;\n  }\n\n  // Gets an (optionally) filtered list of layers\n  getLayers({layerIds = null} = {}) {\n    // Filtering by layerId compares beginning of strings, so that sublayers will be included\n    // Dependes on the convention of adding suffixes to the parent's layer name\n    return layerIds\n      ? this.layers.filter(layer => layerIds.find(layerId => layer.id.indexOf(layerId) === 0))\n      : this.layers;\n  }\n\n  // Set props needed for layer rendering and picking.\n  setProps(props) {\n    if ('debug' in props) {\n      this._debug = props.debug;\n    }\n\n    // A way for apps to add data to context that can be accessed in layers\n    if ('userData' in props) {\n      this.context.userData = props.userData;\n    }\n\n    // TODO - For now we set layers before viewports to preserve changeFlags\n    if ('layers' in props) {\n      this.setLayers(props.layers);\n    }\n\n    if ('onError' in props) {\n      this._onError = props.onError;\n    }\n  }\n\n  // Supply a new layer list, initiating sublayer generation and layer matching\n  setLayers(newLayers, forceUpdate = false) {\n    // TODO - something is generating state updates that cause rerender of the same\n    const shouldUpdate = forceUpdate || newLayers !== this.lastRenderedLayers;\n    debug(TRACE_SET_LAYERS, this, shouldUpdate, newLayers);\n\n    if (!shouldUpdate) {\n      return this;\n    }\n    this.lastRenderedLayers = newLayers;\n\n    newLayers = flatten(newLayers, Boolean);\n\n    for (const layer of newLayers) {\n      layer.context = this.context;\n    }\n\n    this._updateLayers(this.layers, newLayers);\n\n    return this;\n  }\n\n  // Update layers from last cycle if `setNeedsUpdate()` has been called\n  updateLayers() {\n    // NOTE: For now, even if only some layer has changed, we update all layers\n    // to ensure that layer id maps etc remain consistent even if different\n    // sublayers are rendered\n    const reason = this.needsUpdate();\n    if (reason) {\n      this.setNeedsRedraw(`updating layers: ${reason}`);\n      // Force a full update\n      const forceUpdate = true;\n      this.setLayers(this.lastRenderedLayers, forceUpdate);\n    }\n  }\n\n  //\n  // PRIVATE METHODS\n  //\n\n  // Make a viewport \"current\" in layer context, updating viewportChanged flags\n  activateViewport(viewport) {\n    debug(TRACE_ACTIVATE_VIEWPORT, this, viewport);\n    if (viewport) {\n      this.context.viewport = viewport;\n    }\n    return this;\n  }\n\n  _handleError(stage, error, layer) {\n    if (this._onError) {\n      this._onError(error, layer);\n    } else {\n      log.error(`error during ${stage} of ${layerName(layer)}`, error)();\n    }\n  }\n\n  // Match all layers, checking for caught errors\n  // To avoid having an exception in one layer disrupt other layers\n  // TODO - mark layers with exceptions as bad and remove from rendering cycle?\n  _updateLayers(oldLayers, newLayers) {\n    // Create old layer map\n    const oldLayerMap = {};\n    for (const oldLayer of oldLayers) {\n      if (oldLayerMap[oldLayer.id]) {\n        log.warn(`Multiple old layers with same id ${layerName(oldLayer)}`)();\n      } else {\n        oldLayerMap[oldLayer.id] = oldLayer;\n      }\n    }\n\n    // Allocate array for generated layers\n    const generatedLayers = [];\n\n    // Match sublayers\n    this._updateSublayersRecursively(newLayers, oldLayerMap, generatedLayers);\n\n    // Finalize unmatched layers\n    this._finalizeOldLayers(oldLayerMap);\n\n    let needsUpdate = false;\n    for (const layer of generatedLayers) {\n      if (layer.hasUniformTransition()) {\n        needsUpdate = true;\n        break;\n      }\n    }\n\n    this._needsUpdate = needsUpdate;\n    this.layers = generatedLayers;\n  }\n\n  /* eslint-disable complexity,max-statements */\n  // Note: adds generated layers to `generatedLayers` array parameter\n  _updateSublayersRecursively(newLayers, oldLayerMap, generatedLayers) {\n    for (const newLayer of newLayers) {\n      newLayer.context = this.context;\n\n      // Given a new coming layer, find its matching old layer (if any)\n      const oldLayer = oldLayerMap[newLayer.id];\n      if (oldLayer === null) {\n        // null, rather than undefined, means this id was originally there\n        log.warn(`Multiple new layers with same id ${layerName(newLayer)}`)();\n      }\n      // Remove the old layer from candidates, as it has been matched with this layer\n      oldLayerMap[newLayer.id] = null;\n\n      let sublayers = null;\n\n      // We must not generate exceptions until after layer matching is complete\n      try {\n        if (this._debug && oldLayer !== newLayer) {\n          newLayer.validateProps();\n        }\n\n        if (!oldLayer) {\n          this._initializeLayer(newLayer);\n        } else {\n          this._transferLayerState(oldLayer, newLayer);\n          this._updateLayer(newLayer);\n        }\n        generatedLayers.push(newLayer);\n\n        // Call layer lifecycle method: render sublayers\n        sublayers = newLayer.isComposite && newLayer.getSubLayers();\n        // End layer lifecycle method: render sublayers\n      } catch (err) {\n        this._handleError('matching', err, newLayer); // Record first exception\n      }\n\n      if (sublayers) {\n        this._updateSublayersRecursively(sublayers, oldLayerMap, generatedLayers);\n      }\n    }\n  }\n  /* eslint-enable complexity,max-statements */\n\n  // Finalize any old layers that were not matched\n  _finalizeOldLayers(oldLayerMap) {\n    for (const layerId in oldLayerMap) {\n      const layer = oldLayerMap[layerId];\n      if (layer) {\n        this._finalizeLayer(layer);\n      }\n    }\n  }\n\n  // EXCEPTION SAFE LAYER ACCESS\n\n  // Initializes a single layer, calling layer methods\n  _initializeLayer(layer) {\n    try {\n      layer._initialize();\n      layer.lifecycle = LIFECYCLE.INITIALIZED;\n    } catch (err) {\n      this._handleError('initialization', err, layer);\n      // TODO - what should the lifecycle state be here? LIFECYCLE.INITIALIZATION_FAILED?\n    }\n  }\n\n  _transferLayerState(oldLayer, newLayer) {\n    newLayer._transferState(oldLayer);\n    newLayer.lifecycle = LIFECYCLE.MATCHED;\n\n    if (newLayer !== oldLayer) {\n      oldLayer.lifecycle = LIFECYCLE.AWAITING_GC;\n    }\n  }\n\n  // Updates a single layer, cleaning all flags\n  _updateLayer(layer) {\n    try {\n      layer._update();\n    } catch (err) {\n      this._handleError('update', err, layer);\n    }\n  }\n\n  // Finalizes a single layer\n  _finalizeLayer(layer) {\n    this._needsRedraw = this._needsRedraw || `finalized ${layerName(layer)}`;\n\n    layer.lifecycle = LIFECYCLE.AWAITING_FINALIZATION;\n\n    try {\n      layer._finalize();\n      layer.lifecycle = LIFECYCLE.FINALIZED;\n    } catch (err) {\n      this._handleError('finalization', err, layer);\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport assert from '../utils/assert';\nimport {deepEqual} from '../utils/deep-equal';\nimport log from '../utils/log';\nimport {flatten} from '../utils/flatten';\n\nexport default class ViewManager {\n  constructor(props = {}) {\n    // List of view descriptors, gets re-evaluated when width/height changes\n    this.views = [];\n    this.width = 100;\n    this.height = 100;\n    this.viewState = {};\n    this.controllers = {};\n    this.timeline = props.timeline;\n\n    this._viewports = []; // Generated viewports\n    this._viewportMap = {};\n    this._isUpdating = false;\n    this._needsRedraw = 'Initial render';\n    this._needsUpdate = true;\n\n    this._eventManager = props.eventManager;\n    this._eventCallbacks = {\n      onViewStateChange: props.onViewStateChange,\n      onInteractiveStateChange: props.onInteractiveStateChange\n    };\n\n    Object.seal(this);\n\n    // Init with default map viewport\n    this.setProps(props);\n  }\n\n  finalize() {\n    for (const key in this.controllers) {\n      if (this.controllers[key]) {\n        this.controllers[key].finalize();\n      }\n    }\n    this.controllers = {};\n  }\n\n  // Check if a redraw is needed\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  // Layers will be updated deeply (in next animation frame)\n  // Potentially regenerating attributes and sub layers\n  setNeedsUpdate(reason) {\n    this._needsUpdate = this._needsUpdate || reason;\n    this._needsRedraw = this._needsRedraw || reason;\n  }\n\n  // Checks each viewport for transition updates\n  updateViewStates() {\n    for (const viewId in this.controllers) {\n      const controller = this.controllers[viewId];\n      if (controller) {\n        controller.updateTransition();\n      }\n    }\n  }\n\n  /** Get a set of viewports for a given width and height\n   * TODO - Intention is for deck.gl to autodeduce width and height and drop the need for props\n   * @param rect (object, optional) - filter the viewports\n   *   + not provided - return all viewports\n   *   + {x, y} - only return viewports that contain this pixel\n   *   + {x, y, width, height} - only return viewports that overlap with this rectangle\n   */\n  getViewports(rect) {\n    if (rect) {\n      return this._viewports.filter(viewport => viewport.containsPixel(rect));\n    }\n    return this._viewports;\n  }\n\n  getViews() {\n    const viewMap = {};\n    this.views.forEach(view => {\n      viewMap[view.id] = view;\n    });\n    return viewMap;\n  }\n\n  // Resolves a viewId string to a View, if already a View returns it.\n  getView(viewOrViewId) {\n    return typeof viewOrViewId === 'string'\n      ? this.views.find(view => view.id === viewOrViewId)\n      : viewOrViewId;\n  }\n\n  // Returns the viewState for a specific viewId. Matches the viewState by\n  // 1. view.viewStateId\n  // 2. view.id\n  // 3. root viewState\n  // then applies the view's filter if any\n  getViewState(viewId) {\n    const view = this.getView(viewId);\n    // Backward compatibility: view state for single view\n    const viewState = (view && this.viewState[view.getViewStateId()]) || this.viewState;\n    return view ? view.filterViewState(viewState) : viewState;\n  }\n\n  getViewport(viewId) {\n    return this._viewportMap[viewId];\n  }\n\n  /**\n   * Unproject pixel coordinates on screen onto world coordinates,\n   * (possibly [lon, lat]) on map.\n   * - [x, y] => [lng, lat]\n   * - [x, y, z] => [lng, lat, Z]\n   * @param {Array} xyz -\n   * @param {Object} opts - options\n   * @param {Object} opts.topLeft=true - Whether origin is top left\n   * @return {Array|null} - [lng, lat, Z] or [X, Y, Z]\n   */\n  unproject(xyz, opts) {\n    const viewports = this.getViewports();\n    const pixel = {x: xyz[0], y: xyz[1]};\n    for (let i = viewports.length - 1; i >= 0; --i) {\n      const viewport = viewports[i];\n      if (viewport.containsPixel(pixel)) {\n        const p = xyz.slice();\n        p[0] -= viewport.x;\n        p[1] -= viewport.y;\n        return viewport.unproject(p, opts);\n      }\n    }\n    return null;\n  }\n\n  setProps(props) {\n    if ('views' in props) {\n      this._setViews(props.views);\n    }\n\n    // TODO - support multiple view states\n    if ('viewState' in props) {\n      this._setViewState(props.viewState);\n    }\n\n    if ('width' in props || 'height' in props) {\n      this._setSize(props.width, props.height);\n    }\n\n    // Important: avoid invoking _update() inside itself\n    // Nested updates result in unexpected side effects inside _rebuildViewports()\n    // when using auto control in pure-js\n    if (!this._isUpdating) {\n      this._update();\n    }\n  }\n\n  _update() {\n    this._isUpdating = true;\n\n    // Only rebuild viewports if the update flag is set\n    if (this._needsUpdate) {\n      this._needsUpdate = false;\n      this._rebuildViewports();\n    }\n\n    // If viewport transition(s) are triggered during viewports update, controller(s)\n    // will immediately call `onViewStateChange` which calls `viewManager.setProps` again.\n    if (this._needsUpdate) {\n      this._needsUpdate = false;\n      this._rebuildViewports();\n    }\n\n    this._isUpdating = false;\n  }\n\n  _setSize(width, height) {\n    assert(Number.isFinite(width) && Number.isFinite(height));\n    if (width !== this.width || height !== this.height) {\n      this.width = width;\n      this.height = height;\n      this.setNeedsUpdate('Size changed');\n    }\n  }\n\n  // Update the view descriptor list and set change flag if needed\n  // Does not actually rebuild the `Viewport`s until `getViewports` is called\n  _setViews(views) {\n    views = flatten(views, Boolean);\n\n    const viewsChanged = this._diffViews(views, this.views);\n    if (viewsChanged) {\n      this.setNeedsUpdate('views changed');\n    }\n\n    this.views = views;\n  }\n\n  _setViewState(viewState) {\n    if (viewState) {\n      const viewStateChanged = !deepEqual(viewState, this.viewState);\n\n      if (viewStateChanged) {\n        this.setNeedsUpdate('viewState changed');\n      }\n\n      this.viewState = viewState;\n    } else {\n      log.warn('missing `viewState` or `initialViewState`')();\n    }\n  }\n\n  //\n  // PRIVATE METHODS\n  //\n\n  _onViewStateChange(viewId, event) {\n    event.viewId = viewId;\n    this._eventCallbacks.onViewStateChange(event);\n  }\n\n  _createController(view, props) {\n    const Controller = props.type;\n\n    const controller = new Controller({\n      timeline: this.timeline,\n      eventManager: this._eventManager,\n      // Set an internal callback that calls the prop callback if provided\n      onViewStateChange: this._onViewStateChange.bind(this, props.id),\n      onStateChange: this._eventCallbacks.onInteractiveStateChange,\n      makeViewport: view._getViewport.bind(view),\n      ...props\n    });\n\n    return controller;\n  }\n\n  _updateController(view, viewState, viewport, controller) {\n    let controllerProps = view.controller;\n    if (controllerProps) {\n      controllerProps = {\n        ...viewState,\n        ...view.props,\n        ...controllerProps,\n        id: view.id,\n        x: viewport.x,\n        y: viewport.y,\n        width: viewport.width,\n        height: viewport.height\n      };\n\n      // TODO - check if view / controller type has changed, and replace the controller\n      if (controller) {\n        controller.setProps(controllerProps);\n      } else {\n        controller = this._createController(view, controllerProps);\n      }\n      return controller;\n    }\n    return null;\n  }\n\n  // Rebuilds viewports from descriptors towards a certain window size\n  _rebuildViewports() {\n    const {width, height, views} = this;\n\n    const oldControllers = this.controllers;\n    this._viewports = [];\n    this.controllers = {};\n\n    // Create controllers in reverse order, so that views on top receive events first\n    for (let i = views.length; i--; ) {\n      const view = views[i];\n      const viewState = this.getViewState(view);\n      const viewport = view.makeViewport({width, height, viewState});\n\n      // Update the controller\n      this.controllers[view.id] = this._updateController(\n        view,\n        viewState,\n        viewport,\n        oldControllers[view.id]\n      );\n\n      this._viewports.unshift(viewport);\n    }\n\n    // Remove unused controllers\n    for (const id in oldControllers) {\n      if (oldControllers[id] && !this.controllers[id]) {\n        oldControllers[id].finalize();\n      }\n    }\n\n    this._buildViewportMap();\n  }\n\n  _buildViewportMap() {\n    // Build a view id to view index\n    this._viewportMap = {};\n    this._viewports.forEach(viewport => {\n      if (viewport.id) {\n        // TODO - issue warning if multiple viewports use same id\n        this._viewportMap[viewport.id] = this._viewportMap[viewport.id] || viewport;\n      }\n    });\n  }\n\n  // Check if viewport array has changed, returns true if any change\n  // Note that descriptors can be the same\n  _diffViews(newViews, oldViews) {\n    if (newViews.length !== oldViews.length) {\n      return true;\n    }\n\n    return newViews.some((_, i) => !newViews[i].equals(oldViews[i]));\n  }\n}\n","const DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\n\nlet idCount = 0;\n\nexport class AmbientLight {\n  constructor(props = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n\n    this.id = props.id || `ambient-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'ambient';\n  }\n}\n","import {Vector3} from 'math.gl';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_LIGHT_DIRECTION = [0.0, 0.0, -1.0];\n\nlet idCount = 0;\n\nexport class DirectionalLight {\n  constructor(props = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {direction = DEFAULT_LIGHT_DIRECTION} = props;\n    const {_shadow = false} = props;\n\n    this.id = props.id || `directional-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'directional';\n    this.direction = new Vector3(direction).normalize().toArray();\n    this.shadow = _shadow;\n  }\n\n  getProjectedLight() {\n    return this;\n  }\n}\n","export default class Effect {\n  constructor(props = {}) {\n    const {id = 'effect'} = props;\n    this.id = id;\n    this.props = {};\n    Object.assign(this.props, props);\n  }\n\n  preRender() {}\n\n  getModuleParameters() {}\n\n  cleanup() {}\n}\n","export default class Pass {\n  constructor(gl, props = {}) {\n    const {id = 'pass'} = props;\n    this.id = id; // id of this pass\n    this.gl = gl;\n    this.props = {};\n    Object.assign(this.props, props);\n  }\n\n  setProps(props) {\n    Object.assign(this.props, props);\n  }\n\n  render() {}\n\n  cleanup() {}\n}\n","import GL from '@luma.gl/constants';\nimport Pass from './pass';\nimport {clear, setParameters, withParameters, cssToDeviceRatio} from '@luma.gl/core';\nimport log from '../utils/log';\n\nexport default class LayersPass extends Pass {\n  render(props) {\n    const gl = this.gl;\n\n    setParameters(gl, {framebuffer: props.target});\n    return this._drawLayers(props);\n  }\n\n  // PRIVATE\n  // Draw a list of layers in a list of viewports\n  _drawLayers(props) {\n    const {viewports, views, onViewportActive, clearCanvas = true} = props;\n\n    const gl = this.gl;\n    if (clearCanvas) {\n      clearGLCanvas(gl);\n    }\n\n    const renderStats = [];\n\n    for (const viewportOrDescriptor of viewports) {\n      // Get a viewport from a viewport descriptor (which can be a plain viewport)\n      const viewport = viewportOrDescriptor.viewport || viewportOrDescriptor;\n      const view = views && views[viewport.id];\n\n      // Update context to point to this viewport\n      onViewportActive(viewport);\n\n      const drawLayerParams = this._getDrawLayerParams(viewport, props);\n\n      props.view = view;\n\n      // render this viewport\n      const subViewports = viewport.subViewports || [viewport];\n      for (const subViewport of subViewports) {\n        props.viewport = subViewport;\n\n        const stats = this._drawLayersInViewport(gl, props, drawLayerParams);\n        renderStats.push(stats);\n      }\n    }\n    return renderStats;\n  }\n\n  // Resolve the parameters needed to draw each layer\n  // When a viewport contains multiple subviewports (e.g. repeated web mercator map),\n  // this is only done once for the parent viewport\n  _getDrawLayerParams(\n    viewport,\n    {layers, pass = 'unknown', layerFilter, effects, moduleParameters}\n  ) {\n    const drawLayerParams = [];\n    const indexResolver = layerIndexResolver();\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n      const layer = layers[layerIndex];\n      // Check if we should draw layer\n      const shouldDrawLayer = this._shouldDrawLayer(layer, viewport, pass, layerFilter);\n\n      // This is the \"logical\" index for ordering this layer in the stack\n      // used to calculate polygon offsets\n      // It can be the same as another layer\n      const layerRenderIndex = indexResolver(layer, shouldDrawLayer);\n\n      const layerParam = {\n        shouldDrawLayer,\n        layerRenderIndex\n      };\n\n      if (shouldDrawLayer) {\n        layerParam.moduleParameters = this._getModuleParameters(\n          layer,\n          effects,\n          pass,\n          moduleParameters\n        );\n        layerParam.layerParameters = this.getLayerParameters(layer, layerIndex);\n      }\n      drawLayerParams[layerIndex] = layerParam;\n    }\n    return drawLayerParams;\n  }\n\n  // Draws a list of layers in one viewport\n  // TODO - when picking we could completely skip rendering viewports that dont\n  // intersect with the picking rect\n  /* eslint-disable max-depth, max-statements */\n  _drawLayersInViewport(gl, {layers, onError, viewport, view}, drawLayerParams) {\n    const glViewport = getGLViewport(gl, {viewport});\n\n    if (view && view.props.clear) {\n      const clearOpts = view.props.clear === true ? {color: true, depth: true} : view.props.clear;\n      withParameters(\n        gl,\n        {\n          scissorTest: true,\n          scissor: glViewport\n        },\n        () => clear(gl, clearOpts)\n      );\n    }\n\n    // render layers in normal colors\n    const renderStatus = {\n      totalCount: layers.length,\n      visibleCount: 0,\n      compositeCount: 0,\n      pickableCount: 0\n    };\n\n    setParameters(gl, {viewport: glViewport});\n\n    // render layers in normal colors\n    for (let layerIndex = 0; layerIndex < layers.length; layerIndex++) {\n      const layer = layers[layerIndex];\n      const {\n        shouldDrawLayer,\n        layerRenderIndex,\n        moduleParameters,\n        layerParameters\n      } = drawLayerParams[layerIndex];\n\n      // Calculate stats\n      if (shouldDrawLayer && layer.props.pickable) {\n        renderStatus.pickableCount++;\n      }\n      if (layer.isComposite) {\n        renderStatus.compositeCount++;\n      } else if (shouldDrawLayer) {\n        // Draw the layer\n        renderStatus.visibleCount++;\n\n        // overwrite layer.context.viewport with the sub viewport\n        moduleParameters.viewport = viewport;\n\n        try {\n          layer.drawLayer({\n            moduleParameters,\n            uniforms: {layerIndex: layerRenderIndex},\n            parameters: layerParameters\n          });\n        } catch (err) {\n          if (onError) {\n            onError(err, layer);\n          } else {\n            log.error(`error during drawing of ${layer}`, err)();\n          }\n        }\n      }\n    }\n\n    return renderStatus;\n  }\n  /* eslint-enable max-depth, max-statements */\n\n  /* Methods for subclass overrides */\n  shouldDrawLayer(layer) {\n    return true;\n  }\n\n  getModuleParameters(layer, effects) {\n    return null;\n  }\n\n  getLayerParameters(layer, layerIndex) {\n    return layer.props.parameters;\n  }\n\n  /* Private */\n  _shouldDrawLayer(layer, viewport, pass, layerFilter) {\n    let shouldDrawLayer = this.shouldDrawLayer(layer) && layer.props.visible;\n\n    if (shouldDrawLayer && layerFilter) {\n      shouldDrawLayer = layerFilter({\n        layer,\n        viewport,\n        isPicking: pass.startsWith('picking'),\n        renderPass: pass\n      });\n    }\n    if (shouldDrawLayer) {\n      // If a layer is drawn, update its viewportChanged flag\n      layer.activateViewport(viewport);\n    }\n\n    return shouldDrawLayer;\n  }\n\n  _getModuleParameters(layer, effects, pass, overrides) {\n    const moduleParameters = Object.assign(Object.create(layer.props), {\n      autoWrapLongitude: layer.wrapLongitude,\n      viewport: layer.context.viewport,\n      mousePosition: layer.context.mousePosition,\n      pickingActive: 0,\n      devicePixelRatio: cssToDeviceRatio(this.gl)\n    });\n\n    if (effects) {\n      for (const effect of effects) {\n        Object.assign(moduleParameters, effect.getModuleParameters(layer));\n      }\n    }\n\n    return Object.assign(moduleParameters, this.getModuleParameters(layer, effects), overrides);\n  }\n}\n\n// If the _index prop is defined, return a layer index that's relative to its parent\n// Otherwise return the index of the layer among all rendered layers\n// This is done recursively, i.e. if the user overrides a layer's default index,\n// all its descendants will be resolved relative to that index.\n// This implementation assumes that parent layers always appear before its children\n// which is true if the layer array comes from the LayerManager\nexport function layerIndexResolver(startIndex = 0, layerIndices = {}) {\n  const resolvers = {};\n\n  const resolveLayerIndex = (layer, isDrawn) => {\n    const indexOverride = layer.props._offset;\n    const layerId = layer.id;\n    const parentId = layer.parent && layer.parent.id;\n\n    let index;\n\n    if (parentId && !(parentId in layerIndices)) {\n      // Populate layerIndices with the parent layer's index\n      resolveLayerIndex(layer.parent, false);\n    }\n\n    if (parentId in resolvers) {\n      const resolver = (resolvers[parentId] =\n        resolvers[parentId] || layerIndexResolver(layerIndices[parentId], layerIndices));\n      index = resolver(layer, isDrawn);\n      resolvers[layerId] = resolver;\n    } else if (Number.isFinite(indexOverride)) {\n      index = indexOverride + (layerIndices[parentId] || 0);\n      // Mark layer as needing its own resolver\n      // We don't actually create it until it's used for the first time\n      resolvers[layerId] = null;\n    } else {\n      index = startIndex;\n    }\n\n    if (isDrawn && index >= startIndex) {\n      startIndex = index + 1;\n    }\n\n    layerIndices[layerId] = index;\n    return index;\n  };\n  return resolveLayerIndex;\n}\n\n// Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\nfunction getGLViewport(gl, {viewport}) {\n  // TODO - dummy default for node\n  // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n  const height = gl.canvas ? gl.canvas.clientHeight || gl.canvas.height : 100;\n  // Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\n  const dimensions = viewport;\n  const pixelRatio = cssToDeviceRatio(gl);\n  return [\n    dimensions.x * pixelRatio,\n    (height - dimensions.y - dimensions.height) * pixelRatio,\n    dimensions.width * pixelRatio,\n    dimensions.height * pixelRatio\n  ];\n}\n\nfunction clearGLCanvas(gl) {\n  const width = gl.drawingBufferWidth;\n  const height = gl.drawingBufferHeight;\n  // clear depth and color buffers, restoring transparency\n  setParameters(gl, {viewport: [0, 0, width, height]});\n  gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n}\n","import {default as LayersPass} from './layers-pass';\nimport {\n  Framebuffer,\n  Texture2D,\n  Renderbuffer,\n  withParameters,\n  cssToDeviceRatio\n} from '@luma.gl/core';\n\nexport default class ShadowPass extends LayersPass {\n  constructor(gl, props) {\n    super(gl, props);\n\n    // The shadowMap texture\n    this.shadowMap = new Texture2D(gl, {\n      width: 1,\n      height: 1,\n      parameters: {\n        [gl.TEXTURE_MIN_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_MAG_FILTER]: gl.LINEAR,\n        [gl.TEXTURE_WRAP_S]: gl.CLAMP_TO_EDGE,\n        [gl.TEXTURE_WRAP_T]: gl.CLAMP_TO_EDGE\n      }\n    });\n\n    this.depthBuffer = new Renderbuffer(gl, {\n      format: gl.DEPTH_COMPONENT16,\n      width: 1,\n      height: 1\n    });\n\n    this.fbo = new Framebuffer(gl, {\n      id: 'shadowmap',\n      width: 1,\n      height: 1,\n      attachments: {\n        [gl.COLOR_ATTACHMENT0]: this.shadowMap,\n        // Depth attachment has to be specified for depth test to work\n        [gl.DEPTH_ATTACHMENT]: this.depthBuffer\n      }\n    });\n  }\n\n  render(params) {\n    const target = this.fbo;\n\n    withParameters(\n      this.gl,\n      {\n        depthRange: [0, 1],\n        depthTest: true,\n        blend: false,\n        clearColor: [1, 1, 1, 1]\n      },\n      () => {\n        const viewport = params.viewports[0];\n        const pixelRatio = cssToDeviceRatio(this.gl);\n        const width = viewport.width * pixelRatio;\n        const height = viewport.height * pixelRatio;\n        if (width !== target.width || height !== target.height) {\n          target.resize({width, height});\n        }\n\n        super.render({...params, target, pass: 'shadow'});\n      }\n    );\n  }\n\n  shouldDrawLayer(layer) {\n    return layer.props.shadowEnabled !== false;\n  }\n\n  getModuleParameters() {\n    return {\n      drawToShadowMap: true\n    };\n  }\n\n  delete() {\n    if (this.fbo) {\n      this.fbo.delete();\n      this.fbo = null;\n    }\n\n    if (this.shadowMap) {\n      this.shadowMap.delete();\n      this.shadowMap = null;\n    }\n\n    if (this.depthBuffer) {\n      this.depthBuffer.delete();\n      this.depthBuffer = null;\n    }\n  }\n}\n","// Copyright (c) 2015-2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {COORDINATE_SYSTEM, PROJECTION_MODE} from '../../lib/constants';\nimport project from '../project/project';\nimport {Vector3, Matrix4} from 'math.gl';\nimport memoize from '../../utils/memoize';\nimport {pixelsToWorld} from '@math.gl/web-mercator';\n\nconst vs = `\nconst int max_lights = 2;\nuniform mat4 shadow_uViewProjectionMatrices[max_lights];\nuniform vec4 shadow_uProjectCenters[max_lights];\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform int shadow_uLightId;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  if (shadow_uDrawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[shadow_uLightId], shadow_uProjectCenters[shadow_uLightId]);\n  }\n  if (shadow_uUseShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow_uLightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, shadow_uViewProjectionMatrices[i], shadow_uProjectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n`;\n\nconst fs = `\nconst int max_lights = 2;\nuniform bool shadow_uDrawShadowMap;\nuniform bool shadow_uUseShadowMap;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\nuniform vec4 shadow_uColor;\nuniform float shadow_uLightCount;\n\nvarying vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture2D(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow_uDrawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow_uUseShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow_uLightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow_uColor.a / shadow_uLightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow_uColor.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n`;\n\nconst getMemoizedViewportCenterPosition = memoize(getViewportCenterPosition);\nconst getMemoizedViewProjectionMatrices = memoize(getViewProjectionMatrices);\n\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 1.0];\nconst VECTOR_TO_POINT_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0];\n\nfunction screenToCommonSpace(xyz, pixelUnprojectionMatrix) {\n  const [x, y, z] = xyz;\n  const coord = pixelsToWorld([x, y, z], pixelUnprojectionMatrix);\n\n  if (Number.isFinite(z)) {\n    return coord;\n  }\n  return [coord[0], coord[1], 0];\n}\n\nfunction getViewportCenterPosition({viewport, center}) {\n  return new Matrix4(viewport.viewProjectionMatrix).invert().transform(center);\n}\n\nfunction getViewProjectionMatrices({viewport, shadowMatrices}) {\n  const projectionMatrices = [];\n  const pixelUnprojectionMatrix = viewport.pixelUnprojectionMatrix;\n  const farZ = viewport.isGeospatial ? undefined : 1;\n  const corners = [\n    [0, 0, farZ], // top left ground\n    [viewport.width, 0, farZ], // top right ground\n    [0, viewport.height, farZ], // bottom left ground\n    [viewport.width, viewport.height, farZ], // bottom right ground\n    [0, 0, -1], // top left near\n    [viewport.width, 0, -1], // top right near\n    [0, viewport.height, -1], // bottom left near\n    [viewport.width, viewport.height, -1] // bottom right near\n  ].map(pixel => screenToCommonSpace(pixel, pixelUnprojectionMatrix));\n\n  for (const shadowMatrix of shadowMatrices) {\n    const viewMatrix = shadowMatrix.clone().translate(new Vector3(viewport.center).negate());\n    const positions = corners.map(corner => viewMatrix.transform(corner));\n    const projectionMatrix = new Matrix4().ortho({\n      left: Math.min(...positions.map(position => position[0])),\n      right: Math.max(...positions.map(position => position[0])),\n      bottom: Math.min(...positions.map(position => position[1])),\n      top: Math.max(...positions.map(position => position[1])),\n      near: Math.min(...positions.map(position => -position[2])),\n      far: Math.max(...positions.map(position => -position[2]))\n    });\n    projectionMatrices.push(projectionMatrix.multiplyRight(shadowMatrix));\n  }\n  return projectionMatrices;\n}\n\nfunction createShadowUniforms(opts = {}, context = {}) {\n  const uniforms = {\n    shadow_uDrawShadowMap: Boolean(opts.drawToShadowMap),\n    shadow_uUseShadowMap: opts.shadowMaps ? opts.shadowMaps.length > 0 : false,\n    shadow_uColor: opts.shadowColor || DEFAULT_SHADOW_COLOR,\n    shadow_uLightId: opts.shadowLightId || 0,\n    shadow_uLightCount: opts.shadowMatrices.length\n  };\n\n  const center = getMemoizedViewportCenterPosition({\n    viewport: opts.viewport,\n    center: context.project_uCenter\n  });\n\n  const projectCenters = [];\n  const viewProjectionMatrices = getMemoizedViewProjectionMatrices({\n    shadowMatrices: opts.shadowMatrices,\n    viewport: opts.viewport\n  }).slice();\n\n  for (let i = 0; i < opts.shadowMatrices.length; i++) {\n    const viewProjectionMatrix = viewProjectionMatrices[i];\n    const viewProjectionMatrixCentered = viewProjectionMatrix\n      .clone()\n      .translate(new Vector3(opts.viewport.center).negate());\n\n    if (\n      context.project_uCoordinateSystem === COORDINATE_SYSTEM.LNGLAT &&\n      context.project_uProjectionMode === PROJECTION_MODE.WEB_MERCATOR\n    ) {\n      viewProjectionMatrices[i] = viewProjectionMatrixCentered;\n      projectCenters[i] = center;\n    } else {\n      viewProjectionMatrices[i] = viewProjectionMatrix\n        .clone()\n        .multiplyRight(VECTOR_TO_POINT_MATRIX);\n      projectCenters[i] = viewProjectionMatrixCentered.transform(center);\n    }\n  }\n\n  for (let i = 0; i < viewProjectionMatrices.length; i++) {\n    uniforms[`shadow_uViewProjectionMatrices[${i}]`] = viewProjectionMatrices[i];\n    uniforms[`shadow_uProjectCenters[${i}]`] = projectCenters[i];\n\n    if (opts.shadowMaps && opts.shadowMaps.length > 0) {\n      uniforms[`shadow_uShadowMap${i}`] = opts.shadowMaps[i];\n    } else {\n      uniforms[`shadow_uShadowMap${i}`] = opts.dummyShadowMap;\n    }\n  }\n  return uniforms;\n}\n\nexport default {\n  name: 'shadow',\n  dependencies: [project],\n  vs,\n  fs,\n  inject: {\n    'vs:DECKGL_FILTER_GL_POSITION': `\n    position = shadow_setVertexPosition(geometry.position);\n    `,\n    'fs:DECKGL_FILTER_COLOR': `\n    color = shadow_filterShadowColor(color);\n    `\n  },\n  getUniforms: (opts = {}, context = {}) => {\n    if (opts.drawToShadowMap || (opts.shadowMaps && opts.shadowMaps.length > 0)) {\n      const shadowUniforms = {};\n      const {shadowEnabled = true} = opts;\n      if (shadowEnabled && opts.shadowMatrices && opts.shadowMatrices.length > 0) {\n        Object.assign(shadowUniforms, createShadowUniforms(opts, context));\n      } else {\n        Object.assign(shadowUniforms, {\n          shadow_uDrawShadowMap: false,\n          shadow_uUseShadowMap: false\n        });\n      }\n\n      return shadowUniforms;\n    }\n    return {};\n  }\n};\n","import {Texture2D, ProgramManager} from '@luma.gl/core';\nimport {AmbientLight} from './ambient-light';\nimport {DirectionalLight} from './directional-light';\nimport Effect from '../../lib/effect';\nimport {Matrix4, Vector3} from 'math.gl';\nimport ShadowPass from '../../passes/shadow-pass';\nimport {default as shadow} from '../../shaderlib/shadow/shadow';\n\nconst DEFAULT_AMBIENT_LIGHT_PROPS = {color: [255, 255, 255], intensity: 1.0};\nconst DEFAULT_DIRECTIONAL_LIGHT_PROPS = [\n  {\n    color: [255, 255, 255],\n    intensity: 1.0,\n    direction: [-1, 3, -1]\n  },\n  {\n    color: [255, 255, 255],\n    intensity: 0.9,\n    direction: [1, -8, -2.5]\n  }\n];\nconst DEFAULT_SHADOW_COLOR = [0, 0, 0, 200 / 255];\n\n// Class to manage ambient, point and directional light sources in deck\nexport default class LightingEffect extends Effect {\n  constructor(props) {\n    super(props);\n    this.ambientLight = null;\n    this.directionalLights = [];\n    this.pointLights = [];\n\n    this.shadowColor = DEFAULT_SHADOW_COLOR;\n    this.shadowPasses = [];\n    this.shadowMaps = [];\n    this.dummyShadowMap = null;\n    this.shadow = false;\n    this.programManager = null;\n\n    for (const key in props) {\n      const lightSource = props[key];\n\n      switch (lightSource.type) {\n        case 'ambient':\n          this.ambientLight = lightSource;\n          break;\n\n        case 'directional':\n          this.directionalLights.push(lightSource);\n          break;\n\n        case 'point':\n          this.pointLights.push(lightSource);\n          break;\n        default:\n      }\n    }\n    this._applyDefaultLights();\n\n    this.shadow = this.directionalLights.some(light => light.shadow);\n  }\n\n  preRender(gl, {layers, layerFilter, viewports, onViewportActive, views}) {\n    if (!this.shadow) return;\n\n    // create light matrix every frame to make sure always updated from light source\n    this.shadowMatrices = this._createLightMatrix();\n\n    if (this.shadowPasses.length === 0) {\n      this._createShadowPasses(gl);\n    }\n    if (!this.programManager) {\n      // TODO - support multiple contexts\n      this.programManager = ProgramManager.getDefaultProgramManager(gl);\n      if (shadow) {\n        this.programManager.addDefaultModule(shadow);\n      }\n    }\n\n    if (!this.dummyShadowMap) {\n      this.dummyShadowMap = new Texture2D(gl, {\n        width: 1,\n        height: 1\n      });\n    }\n\n    for (let i = 0; i < this.shadowPasses.length; i++) {\n      const shadowPass = this.shadowPasses[i];\n      shadowPass.render({\n        layers,\n        layerFilter,\n        viewports,\n        onViewportActive,\n        views,\n        moduleParameters: {\n          shadowLightId: i,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowMatrices: this.shadowMatrices\n        }\n      });\n    }\n  }\n\n  getModuleParameters(layer) {\n    const parameters = this.shadow\n      ? {\n          shadowMaps: this.shadowMaps,\n          dummyShadowMap: this.dummyShadowMap,\n          shadowColor: this.shadowColor,\n          shadowMatrices: this.shadowMatrices\n        }\n      : {};\n\n    // when not rendering to screen, turn off lighting by adding empty light source object\n    // lights shader module relies on the `lightSources` to turn on/off lighting\n    parameters.lightSources = {\n      ambientLight: this.ambientLight,\n      directionalLights: this.directionalLights.map(directionalLight =>\n        directionalLight.getProjectedLight({layer})\n      ),\n      pointLights: this.pointLights.map(pointLight => pointLight.getProjectedLight({layer}))\n    };\n\n    return parameters;\n  }\n\n  cleanup() {\n    for (const shadowPass of this.shadowPasses) {\n      shadowPass.delete();\n    }\n    this.shadowPasses.length = 0;\n    this.shadowMaps.length = 0;\n\n    if (this.dummyShadowMap) {\n      this.dummyShadowMap.delete();\n      this.dummyShadowMap = null;\n    }\n\n    if (this.shadow && this.programManager) {\n      this.programManager.removeDefaultModule(shadow);\n      this.programManager = null;\n    }\n  }\n\n  _createLightMatrix() {\n    const lightMatrices = [];\n    for (const light of this.directionalLights) {\n      const viewMatrix = new Matrix4().lookAt({\n        eye: new Vector3(light.direction).negate()\n      });\n\n      lightMatrices.push(viewMatrix);\n    }\n    return lightMatrices;\n  }\n\n  _createShadowPasses(gl) {\n    for (let i = 0; i < this.directionalLights.length; i++) {\n      const shadowPass = new ShadowPass(gl);\n      this.shadowPasses[i] = shadowPass;\n      this.shadowMaps[i] = shadowPass.shadowMap;\n    }\n  }\n\n  _applyDefaultLights() {\n    const {ambientLight, pointLights, directionalLights} = this;\n    if (!ambientLight && pointLights.length === 0 && directionalLights.length === 0) {\n      this.ambientLight = new AmbientLight(DEFAULT_AMBIENT_LIGHT_PROPS);\n      this.directionalLights.push(\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[0]),\n        new DirectionalLight(DEFAULT_DIRECTIONAL_LIGHT_PROPS[1])\n      );\n    }\n  }\n}\n","import {deepEqual} from '../utils/deep-equal';\nimport {default as LightingEffect} from '../effects/lighting/lighting-effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\nexport default class EffectManager {\n  constructor() {\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n        this.setEffects(props.effects);\n        this._needsRedraw = 'effects changed';\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._internalEffects;\n  }\n\n  finalize() {\n    this.cleanup();\n  }\n\n  // Private\n  setEffects(effects = []) {\n    this.cleanup();\n    this.effects = effects;\n    this._createInternalEffects();\n  }\n\n  cleanup() {\n    for (const effect of this.effects) {\n      effect.cleanup();\n    }\n\n    for (const effect of this._internalEffects) {\n      effect.cleanup();\n    }\n    this.effects.length = 0;\n    this._internalEffects.length = 0;\n  }\n\n  _createInternalEffects() {\n    this._internalEffects = this.effects.slice();\n    if (!this.effects.some(effect => effect instanceof LightingEffect)) {\n      this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n  }\n}\n","import LayersPass from './layers-pass';\n\nexport default class DrawLayersPass extends LayersPass {}\n","import LayersPass from './layers-pass';\nimport {withParameters} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst PICKING_PARAMETERS = {\n  blendFunc: [GL.ONE, GL.ZERO, GL.CONSTANT_ALPHA, GL.ZERO],\n  blendEquation: GL.FUNC_ADD\n};\n\nexport default class PickLayersPass extends LayersPass {\n  render(props) {\n    if (props.pickingFBO) {\n      this._drawPickingBuffer(props);\n    } else {\n      super.render(props);\n    }\n  }\n\n  // Private\n  // Draws list of layers and viewports into the picking buffer\n  // Note: does not sample the buffer, that has to be done by the caller\n  _drawPickingBuffer({\n    layers,\n    layerFilter,\n    views,\n    viewports,\n    onViewportActive,\n    pickingFBO,\n    deviceRect: {x, y, width, height},\n    pass = 'picking',\n    redrawReason,\n    pickZ\n  }) {\n    const gl = this.gl;\n    this.pickZ = pickZ;\n\n    // Make sure we clear scissor test and fbo bindings in case of exceptions\n    // We are only interested in one pixel, no need to render anything else\n    // Note that the callback here is called synchronously.\n    // Set blend mode for picking\n    // always overwrite existing pixel with [r,g,b,layerIndex]\n    return withParameters(\n      gl,\n      {\n        scissorTest: true,\n        scissor: [x, y, width, height],\n        clearColor: [0, 0, 0, 0],\n        // When used as Mapbox custom layer, the context state may be dirty\n        // TODO - Remove when mapbox fixes this issue\n        // https://github.com/mapbox/mapbox-gl-js/issues/7801\n        depthMask: true,\n        depthTest: true,\n        depthRange: [0, 1],\n        colorMask: [true, true, true, true],\n        // Blending\n        ...PICKING_PARAMETERS,\n        blend: !pickZ\n      },\n      () => {\n        super.render({\n          target: pickingFBO,\n          layers,\n          layerFilter,\n          views,\n          viewports,\n          onViewportActive,\n          pass,\n          redrawReason\n        });\n      }\n    );\n  }\n\n  // PRIVATE\n  shouldDrawLayer(layer) {\n    return layer.props.pickable;\n  }\n\n  getModuleParameters() {\n    return {\n      pickingActive: 1,\n      pickingAttribute: this.pickZ,\n      // turn off lighting by adding empty light source object\n      // lights shader module relies on the `lightSources` to turn on/off lighting\n      lightSources: {}\n    };\n  }\n\n  getLayerParameters(layer, layerIndex) {\n    // These will override any layer parameters\n    const pickParameters = this.pickZ\n      ? {blend: false}\n      : {...PICKING_PARAMETERS, blend: true, blendColor: [0, 0, 0, (layerIndex + 1) / 255]};\n\n    // Override layer parameters with pick parameters\n    return Object.assign({}, layer.props.parameters, pickParameters);\n  }\n}\n","import debug from '../debug';\nimport DrawLayersPass from '../passes/draw-layers-pass';\nimport PickLayersPass from '../passes/pick-layers-pass';\nimport {Framebuffer} from '@luma.gl/core';\n\nconst TRACE_RENDER_LAYERS = 'deckRenderer.renderLayers';\n\nexport default class DeckRenderer {\n  constructor(gl) {\n    this.gl = gl;\n    this.layerFilter = null;\n    this.drawPickingColors = false;\n    this.drawLayersPass = new DrawLayersPass(gl);\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.renderCount = 0;\n    this._needsRedraw = 'Initial render';\n    this.renderBuffers = [];\n    this.lastPostProcessEffect = null;\n    this._onError = null;\n  }\n\n  setProps(props) {\n    if ('layerFilter' in props && this.layerFilter !== props.layerFilter) {\n      this.layerFilter = props.layerFilter;\n      this._needsRedraw = 'layerFilter changed';\n    }\n\n    if ('drawPickingColors' in props && this.drawPickingColors !== props.drawPickingColors) {\n      this.drawPickingColors = props.drawPickingColors;\n      this._needsRedraw = 'drawPickingColors changed';\n    }\n\n    if ('onError' in props) {\n      this._onError = props.onError;\n    }\n  }\n\n  /*\n    target,\n    layers,\n    viewports,\n    onViewportActive,\n    views,\n    redrawReason,\n    clearCanvas,\n    effects,\n    pass,\n    stats\n  */\n  renderLayers(opts) {\n    const layerPass = this.drawPickingColors ? this.pickLayersPass : this.drawLayersPass;\n\n    opts.layerFilter = this.layerFilter;\n    opts.onError = this._onError;\n    opts.effects = opts.effects || [];\n    opts.target = opts.target || Framebuffer.getDefaultFramebuffer(this.gl);\n\n    this._preRender(opts.effects, opts);\n\n    const outputBuffer = this.lastPostProcessEffect ? this.renderBuffers[0] : opts.target;\n    const renderStats = layerPass.render({...opts, target: outputBuffer});\n\n    this._postRender(opts.effects, opts);\n\n    this.renderCount++;\n\n    debug(TRACE_RENDER_LAYERS, this, renderStats, opts);\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  finalize() {\n    const {renderBuffers} = this;\n    for (const buffer of renderBuffers) {\n      buffer.delete();\n    }\n    renderBuffers.length = 0;\n  }\n\n  // Private\n  _preRender(effects, opts) {\n    let lastPostProcessEffect = null;\n\n    for (const effect of effects) {\n      effect.preRender(this.gl, opts);\n      if (effect.postRender) {\n        lastPostProcessEffect = effect;\n      }\n    }\n\n    if (lastPostProcessEffect) {\n      this._resizeRenderBuffers();\n    }\n    this.lastPostProcessEffect = lastPostProcessEffect;\n  }\n\n  _resizeRenderBuffers() {\n    const {renderBuffers} = this;\n    if (renderBuffers.length === 0) {\n      renderBuffers.push(new Framebuffer(this.gl), new Framebuffer(this.gl));\n    }\n    for (const buffer of renderBuffers) {\n      buffer.resize();\n    }\n  }\n\n  _postRender(effects, opts) {\n    const {renderBuffers} = this;\n    const params = {\n      inputBuffer: renderBuffers[0],\n      swapBuffer: renderBuffers[1],\n      target: null\n    };\n    for (const effect of effects) {\n      if (effect.postRender) {\n        if (effect === this.lastPostProcessEffect) {\n          params.target = opts.target;\n          effect.postRender(this.gl, params);\n          break;\n        }\n        const buffer = effect.postRender(this.gl, params);\n        params.inputBuffer = buffer;\n        params.swapBuffer = buffer === renderBuffers[0] ? renderBuffers[1] : renderBuffers[0];\n      }\n    }\n  }\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport log from '../../utils/log';\n\nconst NO_PICKED_OBJECT = {\n  pickedColor: null,\n  pickedLayer: null,\n  pickedObjectIndex: -1\n};\n\n/* eslint-disable max-depth, max-statements */\n/**\n * Pick at a specified pixel with a tolerance radius\n * Returns the closest object to the pixel in shape `{pickedColor, pickedLayer, pickedObjectIndex}`\n */\nexport function getClosestObject({\n  pickedColors,\n  layers,\n  deviceX,\n  deviceY,\n  deviceRadius,\n  deviceRect\n}) {\n  if (pickedColors) {\n    // Traverse all pixels in picking results and find the one closest to the supplied\n    // [deviceX, deviceY]\n    const {x, y, width, height} = deviceRect;\n    let minSquareDistanceToCenter = deviceRadius * deviceRadius;\n    let closestPixelIndex = -1;\n    let i = 0;\n\n    for (let row = 0; row < height; row++) {\n      const dy = row + y - deviceY;\n      const dy2 = dy * dy;\n\n      if (dy2 > minSquareDistanceToCenter) {\n        // skip this row\n        i += 4 * width;\n      } else {\n        for (let col = 0; col < width; col++) {\n          // Decode picked layer from color\n          const pickedLayerIndex = pickedColors[i + 3] - 1;\n\n          if (pickedLayerIndex >= 0) {\n            const dx = col + x - deviceX;\n            const d2 = dx * dx + dy2;\n\n            if (d2 <= minSquareDistanceToCenter) {\n              minSquareDistanceToCenter = d2;\n              closestPixelIndex = i;\n            }\n          }\n          i += 4;\n        }\n      }\n    }\n\n    if (closestPixelIndex >= 0) {\n      // Decode picked object index from color\n      const pickedLayerIndex = pickedColors[closestPixelIndex + 3] - 1;\n      const pickedColor = pickedColors.slice(closestPixelIndex, closestPixelIndex + 4);\n      const pickedLayer = layers[pickedLayerIndex];\n      if (pickedLayer) {\n        const pickedObjectIndex = pickedLayer.decodePickingColor(pickedColor);\n        const dy = Math.floor(closestPixelIndex / 4 / width);\n        const dx = closestPixelIndex / 4 - dy * width;\n        return {pickedColor, pickedLayer, pickedObjectIndex, pickedX: x + dx, pickedY: y + dy};\n      }\n      log.error('Picked non-existent layer. Is picking buffer corrupt?')();\n    }\n  }\n  return NO_PICKED_OBJECT;\n}\n\n/**\n * Examines a picking buffer for unique colors\n * Returns array of unique objects in shape `{x, y, pickedColor, pickedLayer, pickedObjectIndex}`\n */\nexport function getUniqueObjects({pickedColors, layers}) {\n  const uniqueColors = new Map();\n\n  // Traverse all pixels in picking results and get unique colors\n  if (pickedColors) {\n    for (let i = 0; i < pickedColors.length; i += 4) {\n      // Decode picked layer from color\n      const pickedLayerIndex = pickedColors[i + 3] - 1;\n\n      if (pickedLayerIndex >= 0) {\n        const pickedColor = pickedColors.slice(i, i + 4);\n        const colorKey = pickedColor.join(',');\n        // eslint-disable-next-line\n        if (!uniqueColors.has(colorKey)) {\n          const pickedLayer = layers[pickedLayerIndex];\n          // eslint-disable-next-line\n          if (pickedLayer) {\n            uniqueColors.set(colorKey, {\n              pickedColor,\n              pickedLayer,\n              pickedObjectIndex: pickedLayer.decodePickingColor(pickedColor)\n            });\n          } else {\n            log.error('Picked non-existent layer. Is picking buffer corrupt?')();\n          }\n        }\n      }\n    }\n  }\n\n  return Array.from(uniqueColors.values());\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Even if nothing gets picked, we need to expose some information of the picking action:\n// x, y, coordinates etc.\nexport function getEmptyPickingInfo({pickInfo, viewports, pixelRatio, x, y, z}) {\n  const viewport = getViewportFromCoordinates({viewports}); // TODO - add coords\n  const coordinate = viewport && viewport.unproject([x - viewport.x, y - viewport.y], {targetZ: z});\n\n  return {\n    color: null,\n    layer: null,\n    index: -1,\n    picked: false,\n    x,\n    y,\n    pixel: [x, y],\n    coordinate,\n    // TODO remove the lngLat prop after compatibility check\n    lngLat: coordinate,\n    devicePixel: pickInfo && [pickInfo.pickedX, pickInfo.pickedY],\n    pixelRatio\n  };\n}\n\n/* eslint-disable max-depth */\nexport function processPickInfo(opts) {\n  const {pickInfo, lastPickedInfo, mode, layers} = opts;\n  const {pickedColor, pickedLayer, pickedObjectIndex} = pickInfo;\n\n  const affectedLayers = pickedLayer ? [pickedLayer] : [];\n\n  if (mode === 'hover') {\n    // only invoke onHover events if picked object has changed\n    const lastPickedObjectIndex = lastPickedInfo.index;\n    const lastPickedLayerId = lastPickedInfo.layerId;\n    const pickedLayerId = pickedLayer && pickedLayer.props.id;\n\n    // proceed only if picked object changed\n    if (pickedLayerId !== lastPickedLayerId || pickedObjectIndex !== lastPickedObjectIndex) {\n      if (pickedLayerId !== lastPickedLayerId) {\n        // We cannot store a ref to lastPickedLayer in the context because\n        // the state of an outdated layer is no longer valid\n        // and the props may have changed\n        const lastPickedLayer = layers.find(layer => layer.props.id === lastPickedLayerId);\n        if (lastPickedLayer) {\n          // Let leave event fire before enter event\n          affectedLayers.unshift(lastPickedLayer);\n        }\n      }\n\n      // Update layer manager context\n      lastPickedInfo.layerId = pickedLayerId;\n      lastPickedInfo.index = pickedObjectIndex;\n      lastPickedInfo.info = null;\n    }\n  }\n\n  const baseInfo = getEmptyPickingInfo(opts);\n\n  // Use a Map to store all picking infos.\n  // The following two forEach loops are the result of\n  // https://github.com/visgl/deck.gl/issues/443\n  // Please be very careful when changing this pattern\n  const infos = new Map();\n\n  // Make sure infos always contain something even if no layer is affected\n  infos.set(null, baseInfo);\n\n  affectedLayers.forEach(layer => {\n    let info = Object.assign({}, baseInfo);\n\n    if (layer === pickedLayer) {\n      info.color = pickedColor;\n      info.index = pickedObjectIndex;\n      info.picked = true;\n    }\n\n    info = getLayerPickingInfo({layer, info, mode});\n\n    if (layer === pickedLayer && mode === 'hover') {\n      lastPickedInfo.info = info;\n    }\n\n    // This guarantees that there will be only one copy of info for\n    // one composite layer\n    if (info) {\n      infos.set(info.layer.id, info);\n    }\n\n    if (mode === 'hover' && layer.props.autoHighlight) {\n      const pickingModuleParameters = {\n        pickingSelectedColor: pickedLayer === layer ? pickedColor : null\n      };\n      const {highlightColor} = layer.props;\n      if (pickedLayer === layer && typeof highlightColor === 'function') {\n        pickingModuleParameters.pickingHighlightColor = highlightColor(info);\n      }\n      layer.setModuleParameters(pickingModuleParameters);\n      // setModuleParameters does not trigger redraw\n      layer.setNeedsRedraw();\n    }\n  });\n\n  return infos;\n}\n\n// Walk up the layer composite chain to populate the info object\nexport function getLayerPickingInfo({layer, info, mode}) {\n  while (layer && info) {\n    // For a composite layer, sourceLayer will point to the sublayer\n    // where the event originates from.\n    // It provides additional context for the composite layer's\n    // getPickingInfo() method to populate the info object\n    const sourceLayer = info.layer || layer;\n    info.layer = layer;\n    // layer.pickLayer() function requires a non-null ```layer.state```\n    // object to function properly. So the layer referenced here\n    // must be the \"current\" layer, not an \"out-dated\" / \"invalidated\" layer\n    info = layer.getPickingInfo({info, mode, sourceLayer});\n    layer = layer.parent;\n  }\n  return info;\n}\n\n// Indentifies which viewport, if any corresponds to x and y\n// Returns first viewport if no match\n// TODO - need to determine which viewport we are in\n// TODO - document concept of \"primary viewport\" that matches all coords?\n// TODO - static method on Viewport class?\nfunction getViewportFromCoordinates({viewports}) {\n  const viewport = viewports[0];\n  return viewport;\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {\n  Framebuffer,\n  Texture2D,\n  isWebGL2,\n  readPixelsToArray,\n  cssToDeviceRatio,\n  cssToDevicePixels\n} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\nimport assert from '../utils/assert';\nimport log from '../utils/log';\nimport PickLayersPass from '../passes/pick-layers-pass';\nimport {getClosestObject, getUniqueObjects} from './picking/query-object';\nimport {processPickInfo, getLayerPickingInfo, getEmptyPickingInfo} from './picking/pick-info';\n\nexport default class DeckPicker {\n  constructor(gl) {\n    this.gl = gl;\n    this.pickingFBO = null;\n    this.pickLayersPass = new PickLayersPass(gl);\n    this.layerFilter = null;\n    this.lastPickedInfo = {\n      // For callback tracking and auto highlight\n      index: -1,\n      layerId: null,\n      info: null\n    };\n    this._onError = null;\n  }\n\n  setProps(props) {\n    if ('layerFilter' in props) {\n      this.layerFilter = props.layerFilter;\n    }\n\n    if ('onError' in props) {\n      this._onError = props.onError;\n    }\n\n    if ('_pickable' in props) {\n      this._pickable = props._pickable;\n    }\n  }\n\n  finalize() {\n    if (this.pickingFBO) {\n      this.pickingFBO.delete();\n    }\n    if (this.depthFBO) {\n      this.depthFBO.color.delete();\n      this.depthFBO.delete();\n    }\n  }\n\n  // Pick the closest info at given coordinate\n  pickObject(opts) {\n    return this._pickClosestObject(opts);\n  }\n\n  // Get all unique infos within a bounding box\n  pickObjects(opts) {\n    return this._pickVisibleObjects(opts);\n  }\n\n  // Returns a new picking info object by assuming the last picked object is still picked\n  getLastPickedObject({x, y, layers, viewports}, lastPickedInfo = this.lastPickedInfo.info) {\n    const lastPickedLayerId = lastPickedInfo && lastPickedInfo.layer && lastPickedInfo.layer.id;\n    const layer = lastPickedLayerId ? layers.find(l => l.id === lastPickedLayerId) : null;\n    const coordinate = viewports[0] && viewports[0].unproject([x, y]);\n\n    const info = {\n      x,\n      y,\n      coordinate,\n      // TODO remove the lngLat prop after compatibility check\n      lngLat: coordinate,\n      layer\n    };\n\n    if (layer) {\n      return Object.assign({}, lastPickedInfo, info);\n    }\n    return Object.assign(info, {color: null, object: null, index: -1});\n  }\n\n  // Private\n  _resizeBuffer() {\n    const {gl} = this;\n\n    // Create a frame buffer if not already available\n    if (!this.pickingFBO) {\n      this.pickingFBO = new Framebuffer(gl);\n      if (Framebuffer.isSupported(gl, {colorBufferFloat: true})) {\n        this.depthFBO = new Framebuffer(gl);\n        this.depthFBO.attach({\n          [GL.COLOR_ATTACHMENT0]: new Texture2D(gl, {\n            format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n            type: GL.FLOAT\n          })\n        });\n      }\n    }\n    // Resize it to current canvas size (this is a noop if size hasn't changed)\n    this.pickingFBO.resize({width: gl.canvas.width, height: gl.canvas.height});\n    if (this.depthFBO) {\n      this.depthFBO.resize({width: gl.canvas.width, height: gl.canvas.height});\n    }\n    return this.pickingFBO;\n  }\n\n  // picking can only handle up to 255 layers. Drop non-pickable/invisible layers from the list.\n  _getPickable(layers) {\n    if (this._pickable === false) {\n      return null;\n    }\n    const pickableLayers = layers.filter(layer => layer.isPickable() && !layer.isComposite);\n    if (pickableLayers.length > 255) {\n      log.warn('Too many pickable layers, only picking the first 255')();\n      return pickableLayers.slice(0, 255);\n    }\n    return pickableLayers.length ? pickableLayers : null;\n  }\n\n  // Pick the closest object at the given (x,y) coordinate\n  // eslint-disable-next-line max-statements,complexity\n  _pickClosestObject({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    radius = 0,\n    depth = 1,\n    mode = 'query',\n    unproject3D,\n    onViewportActive\n  }) {\n    layers = this._getPickable(layers);\n\n    if (!layers) {\n      return {\n        result: [],\n        emptyInfo: getEmptyPickingInfo({viewports, x, y})\n      };\n    }\n\n    this._resizeBuffer();\n\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // Top-left coordinates [x, y] to bottom-left coordinates [deviceX, deviceY]\n    // And compensate for pixelRatio\n    const pixelRatio = cssToDeviceRatio(this.gl);\n    const devicePixelRange = cssToDevicePixels(this.gl, [x, y], true);\n    const devicePixel = [\n      devicePixelRange.x + Math.floor(devicePixelRange.width / 2),\n      devicePixelRange.y + Math.floor(devicePixelRange.height / 2)\n    ];\n\n    const deviceRadius = Math.round(radius * pixelRatio);\n    const {width, height} = this.pickingFBO;\n    const deviceRect = this._getPickingRect({\n      deviceX: devicePixel[0],\n      deviceY: devicePixel[1],\n      deviceRadius,\n      deviceWidth: width,\n      deviceHeight: height\n    });\n\n    let infos;\n    const result = [];\n    const affectedLayers = {};\n\n    for (let i = 0; i < depth; i++) {\n      const pickedColors =\n        deviceRect &&\n        this._drawAndSample({\n          layers,\n          views,\n          viewports,\n          onViewportActive,\n          deviceRect,\n          pass: `picking:${mode}`,\n          redrawReason: mode\n        });\n\n      const pickInfo = getClosestObject({\n        pickedColors,\n        layers,\n        deviceX: devicePixel[0],\n        deviceY: devicePixel[1],\n        deviceRadius,\n        deviceRect\n      });\n\n      let z;\n      if (pickInfo.pickedLayer && unproject3D && this.depthFBO) {\n        const zValues = this._drawAndSample({\n          layers: [pickInfo.pickedLayer],\n          views,\n          viewports,\n          onViewportActive,\n          deviceRect: {x: pickInfo.pickedX, y: pickInfo.pickedY, width: 1, height: 1},\n          pass: `picking:${mode}`,\n          redrawReason: 'pick-z',\n          pickZ: true\n        });\n        // picked value is in common space (pixels) from the camera target (viewport.position)\n        // convert it to meters from the ground\n        z = zValues[0] * viewports[0].distanceScales.metersPerUnit[2] + viewports[0].position[2];\n      }\n\n      // Only exclude if we need to run picking again.\n      // We need to run picking again if an object is detected AND\n      // we have not exhausted the requested depth.\n      if (pickInfo.pickedColor && i + 1 < depth) {\n        const layerId = pickInfo.pickedColor[3] - 1;\n        affectedLayers[layerId] = true;\n        layers[layerId].clearPickingColor(pickInfo.pickedColor);\n      }\n\n      // This logic needs to run even if no object is picked.\n      infos = processPickInfo({\n        pickInfo,\n        lastPickedInfo: this.lastPickedInfo,\n        mode,\n        layers,\n        viewports,\n        x,\n        y,\n        z,\n        pixelRatio\n      });\n\n      for (const info of infos.values()) {\n        if (info.layer) {\n          result.push(info);\n        }\n      }\n\n      // If no object is picked stop.\n      if (!pickInfo.pickedColor) {\n        break;\n      }\n    }\n\n    // reset only affected buffers\n    for (const layerId in affectedLayers) {\n      layers[layerId].restorePickingColors();\n    }\n\n    return {result, emptyInfo: infos && infos.get(null)};\n  }\n\n  // Pick all objects within the given bounding box\n  _pickVisibleObjects({\n    layers,\n    views,\n    viewports,\n    x,\n    y,\n    width = 1,\n    height = 1,\n    mode = 'query',\n    maxObjects = null,\n    onViewportActive\n  }) {\n    layers = this._getPickable(layers);\n\n    if (!layers) {\n      return [];\n    }\n\n    this._resizeBuffer();\n    // Convert from canvas top-left to WebGL bottom-left coordinates\n    // And compensate for pixelRatio\n    const pixelRatio = cssToDeviceRatio(this.gl);\n    const leftTop = cssToDevicePixels(this.gl, [x, y], true);\n\n    // take left and top (y inverted in device pixels) from start location\n    const deviceLeft = leftTop.x;\n    const deviceTop = leftTop.y + leftTop.height;\n\n    // take right and bottom (y inverted in device pixels) from end location\n    const rightBottom = cssToDevicePixels(this.gl, [x + width, y + height], true);\n    const deviceRight = rightBottom.x + rightBottom.width;\n    const deviceBottom = rightBottom.y;\n\n    const deviceRect = {\n      x: deviceLeft,\n      y: deviceBottom,\n      // deviceTop and deviceRight represent the first pixel outside the desired rect\n      width: deviceRight - deviceLeft,\n      height: deviceTop - deviceBottom\n    };\n\n    const pickedColors = this._drawAndSample({\n      layers,\n      views,\n      viewports,\n      onViewportActive,\n      deviceRect,\n      pass: `picking:${mode}`,\n      redrawReason: mode\n    });\n\n    const pickInfos = getUniqueObjects({pickedColors, layers});\n\n    // Only return unique infos, identified by info.object\n    const uniqueInfos = new Map();\n\n    const isMaxObjects = Number.isFinite(maxObjects);\n\n    for (let i = 0; i < pickInfos.length; i++) {\n      if (isMaxObjects && uniqueInfos.size >= maxObjects) {\n        break;\n      }\n      const pickInfo = pickInfos[i];\n      let info = {\n        color: pickInfo.pickedColor,\n        layer: null,\n        index: pickInfo.pickedObjectIndex,\n        picked: true,\n        x,\n        y,\n        width,\n        height,\n        pixelRatio\n      };\n\n      info = getLayerPickingInfo({layer: pickInfo.pickedLayer, info, mode});\n      if (!uniqueInfos.has(info.object)) {\n        uniqueInfos.set(info.object, info);\n      }\n    }\n\n    return Array.from(uniqueInfos.values());\n  }\n\n  // returns pickedColor or null if no pickable layers found.\n  _drawAndSample({\n    layers,\n    views,\n    viewports,\n    onViewportActive,\n    deviceRect,\n    pass,\n    redrawReason,\n    pickZ\n  }) {\n    assert(deviceRect.width > 0 && deviceRect.height > 0);\n\n    if (layers.length < 1) {\n      return null;\n    }\n\n    const pickingFBO = pickZ ? this.depthFBO : this.pickingFBO;\n\n    this.pickLayersPass.render({\n      layers,\n      layerFilter: this.layerFilter,\n      onError: this._onError,\n      views,\n      viewports,\n      onViewportActive,\n      pickingFBO,\n      deviceRect,\n      pass,\n      redrawReason,\n      pickZ\n    });\n\n    // Read from an already rendered picking buffer\n    // Returns an Uint8ClampedArray of picked pixels\n    const {x, y, width, height} = deviceRect;\n    const pickedColors = new (pickZ ? Float32Array : Uint8Array)(width * height * 4);\n    readPixelsToArray(pickingFBO, {\n      sourceX: x,\n      sourceY: y,\n      sourceWidth: width,\n      sourceHeight: height,\n      target: pickedColors\n    });\n\n    return pickedColors;\n  }\n\n  // Calculate a picking rect centered on deviceX and deviceY and clipped to device\n  // Returns null if pixel is outside of device\n  _getPickingRect({deviceX, deviceY, deviceRadius, deviceWidth, deviceHeight}) {\n    // Create a box of size `radius * 2 + 1` centered at [deviceX, deviceY]\n    const x = Math.max(0, deviceX - deviceRadius);\n    const y = Math.max(0, deviceY - deviceRadius);\n    const width = Math.min(deviceWidth, deviceX + deviceRadius + 1) - x;\n    const height = Math.min(deviceHeight, deviceY + deviceRadius + 1) - y;\n\n    // x, y out of bounds.\n    if (width <= 0 || height <= 0) {\n      return null;\n    }\n\n    return {x, y, width, height};\n  }\n}\n","// Copyright (c) 2015 - 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global document */\nconst defaultStyle = {\n  zIndex: 1,\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: 0,\n  left: 0,\n  display: 'none'\n};\n\nexport default class Tooltip {\n  constructor(canvas) {\n    const canvasParent = canvas.parentElement;\n\n    if (canvasParent) {\n      this.el = document.createElement('div');\n      this.el.className = 'deck-tooltip';\n      Object.assign(this.el.style, defaultStyle);\n      canvasParent.appendChild(this.el);\n    }\n  }\n\n  setTooltip(displayInfo, x, y) {\n    const el = this.el;\n\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      el.style.display = 'none';\n      return;\n    } else {\n      if ('text' in displayInfo) {\n        el.innerText = displayInfo.text;\n      }\n      if ('html' in displayInfo) {\n        el.innerHTML = displayInfo.html;\n      }\n      if ('className' in displayInfo) {\n        el.className = displayInfo.className;\n      }\n      Object.assign(el.style, displayInfo.style);\n    }\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n  }\n\n  remove() {\n    if (this.el) {\n      this.el.remove();\n    }\n  }\n}\n","function isJSON(text) {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return (firstChar === '{' && lastChar === '}') || (firstChar === '[' && lastChar === ']');\n}\n\n// TODO - replace with the version in loaders.gl\nexport default {\n  name: 'JSON',\n  // TODO - can we stream process geojson?\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n};\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {registerLoaders} from '@loaders.gl/core';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport {global} from 'probe.gl/env';\nimport log from '../utils/log';\nimport {register} from '../debug';\nimport jsonLoader from '../utils/json-loader';\n\n// Version detection using babel plugin\n// Fallback for tests and SSR since global variable is defined by Webpack.\n/* global __VERSION__ */\nconst version =\n  typeof __VERSION__ !== 'undefined' ? __VERSION__ : global.DECK_VERSION || 'untranspiled source';\n\n// Note: a `deck` object not created by deck.gl may exist in the global scope\nconst existingVersion = global.deck && global.deck.VERSION;\n\nif (existingVersion && existingVersion !== version) {\n  throw new Error(`deck.gl - multiple versions detected: ${existingVersion} vs ${version}`);\n}\n\nif (!existingVersion) {\n  // eslint-disable-next-line\n  if (process.env.NODE_ENV !== 'production') {\n    log.log(\n      0,\n      `deck.gl ${version} - set deck.log.level=1 (or higher) to trace attribute updates`\n    )();\n  }\n\n  global.deck = Object.assign(global.deck || {}, {\n    VERSION: version,\n    version,\n    log,\n    // experimental\n    _registerLoggers: register\n  });\n\n  registerLoaders([jsonLoader, [ImageLoader, {imagebitmap: {premultiplyAlpha: 'none'}}]]);\n}\n\nexport default global.deck;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from './effect-manager';\nimport Effect from './effect';\nimport DeckRenderer from './deck-renderer';\nimport DeckPicker from './deck-picker';\nimport Tooltip from './tooltip';\nimport log from '../utils/log';\nimport {deepEqual} from '../utils/deep-equal';\nimport typedArrayManager from '../utils/typed-array-manager';\nimport deckGlobal from './init';\n\nimport {getBrowser} from 'probe.gl/env';\nimport GL from '@luma.gl/constants';\nimport {\n  AnimationLoop,\n  createGLContext,\n  instrumentGLContext,\n  setParameters,\n  Timeline,\n  lumaStats\n} from '@luma.gl/core';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    touchAction: PropTypes.string,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLoad: PropTypes.func,\n    onError: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n    _framebuffer: PropTypes.object,\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool,\n\n    // UNSAFE options - not exhaustively tested, not guaranteed to work in all cases, use at your own risk\n\n    // Set to false to disable picking - avoiding picking buffer creation can save memory for mobile web browsers\n    _pickable: PropTypes.bool,\n\n    // Adjust parameters of typed array manager, can save memory e.g. for mobile web browsers\n    _typedArrayManagerProps: PropTypes.object //  {overAlloc: number, poolSize: number}\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  touchAction: 'none',\n  _framebuffer: null,\n  _animate: false,\n  _pickable: true,\n  _typedArrayManagerProps: {},\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLoad: noop,\n  onError: null,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\n/* eslint-disable max-statements */\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n    this.props = {};\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n    this.deckRenderer = null;\n    this.deckPicker = null;\n\n    this._needsRedraw = true;\n    this._pickRequest = {};\n    // Pick and store the object under the pointer on `pointerdown`.\n    // This object is reused for subsequent `onClick` and `onDrag*` callbacks.\n    this._lastPointerDownInfo = null;\n\n    this.viewState = null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onPointerDown = this._onPointerDown.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (props.viewState && props.initialViewState) {\n      log.warn(\n        'View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.'\n      )();\n    }\n    if (getBrowser() === 'IE') {\n      log.warn('IE 11 support will be deprecated in v8.0')();\n    }\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.stats = new Stats({id: 'deck.gl'});\n    this.metrics = {\n      fps: 0,\n      setPropsTime: 0,\n      updateAttributesTime: 0,\n      framesRedrawn: 0,\n      pickTime: 0,\n      pickCount: 0,\n      gpuTime: 0,\n      gpuTimePerFrame: 0,\n      cpuTime: 0,\n      cpuTimePerFrame: 0,\n      bufferMemory: 0,\n      textureMemory: 0,\n      renderbufferMemory: 0,\n      gpuMemory: 0\n    };\n    this._metricsCounter = 0;\n\n    this.setProps(props);\n\n    // UNSAFE/experimental prop: only set at initialization to avoid performance hit\n    if (props._typedArrayManagerProps) {\n      typedArrayManager.setProps(props._typedArrayManagerProps);\n    }\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n    this._lastPointerDownInfo = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n\n      this.viewManager.finalize();\n      this.viewManager = null;\n\n      this.effectManager.finalize();\n      this.effectManager = null;\n\n      this.deckRenderer.finalize();\n      this.deckRenderer = null;\n\n      this.deckPicker.finalize();\n      this.deckPicker = null;\n\n      this.eventManager.destroy();\n      this.eventManager = null;\n\n      this.tooltip.remove();\n      this.tooltip = null;\n    }\n\n    if (!this.props.canvas && !this.props.gl && this.canvas) {\n      // remove internally created canvas\n      this.canvas.parentElement.removeChild(this.canvas);\n      this.canvas = null;\n    }\n  }\n\n  setProps(props) {\n    this.stats.get('setProps Time').timeStart();\n\n    if ('onLayerHover' in props) {\n      log.removed('onLayerHover', 'onHover')();\n    }\n    if ('onLayerClick' in props) {\n      log.removed('onLayerClick', 'onClick')();\n    }\n    if (props.initialViewState && !deepEqual(this.props.initialViewState, props.initialViewState)) {\n      // Overwrite internal view state\n      this.viewState = props.initialViewState;\n    }\n\n    // Merge with existing props\n    Object.assign(this.props, props);\n\n    // Update CSS size of canvas\n    this._setCanvasSize(this.props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const resolvedProps = Object.create(this.props);\n    Object.assign(resolvedProps, {\n      views: this._getViews(),\n      width: this.width,\n      height: this.height,\n      viewState: this._getViewState()\n    });\n\n    // Update the animation loop\n    this.animationLoop.setProps(resolvedProps);\n\n    // If initialized, update sub manager props\n    if (this.layerManager) {\n      this.viewManager.setProps(resolvedProps);\n      // Make sure that any new layer gets initialized with the current viewport\n      this.layerManager.activateViewport(this.getViewports()[0]);\n      this.layerManager.setProps(resolvedProps);\n      this.effectManager.setProps(resolvedProps);\n      this.deckRenderer.setProps(resolvedProps);\n      this.deckPicker.setProps(resolvedProps);\n    }\n\n    this.stats.get('setProps Time').timeEnd();\n  }\n\n  // Public API\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  // opts.clearRedrawFlags (Boolean) - clear the redraw flag. Default `true`\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw(opts);\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw(opts);\n    const effectManagerNeedsRedraw = this.effectManager.needsRedraw(opts);\n    const deckRendererNeedsRedraw = this.deckRenderer.needsRedraw(opts);\n\n    redraw =\n      redraw ||\n      viewManagerNeedsRedraw ||\n      layerManagerNeedsRedraw ||\n      effectManagerNeedsRedraw ||\n      deckRendererNeedsRedraw;\n    return redraw;\n  }\n\n  redraw(force) {\n    if (!this.layerManager) {\n      // Not yet initialized\n      return;\n    }\n    // If force is falsy, check if we need to redraw\n    const redrawReason = force || this.needsRedraw({clearRedrawFlags: true});\n\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.get('Redraw Count').incrementCount();\n    if (this.props._customRender) {\n      this.props._customRender(redrawReason);\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D} */\n  pickObject(opts) {\n    const infos = this._pick('pickObject', 'pickObject Time', opts).result;\n    return infos.length ? infos[0] : null;\n  }\n\n  /* {x, y, radius = 0, layerIds = null, unproject3D, depth = 10} */\n  pickMultipleObjects(opts) {\n    opts.depth = opts.depth || 10;\n    return this._pick('pickObject', 'pickMultipleObjects Time', opts).result;\n  }\n\n  /* {x, y, width = 1, height = 1, layerIds = null} */\n  pickObjects(opts) {\n    return this._pick('pickObjects', 'pickObjects Time', opts);\n  }\n\n  // Experimental\n\n  _addResources(resources, forceUpdate = false) {\n    for (const id in resources) {\n      this.layerManager.resourceManager.add({resourceId: id, data: resources[id], forceUpdate});\n    }\n  }\n\n  _removeResources(resourceIds) {\n    for (const id of resourceIds) {\n      this.layerManager.resourceManager.remove(id);\n    }\n  }\n\n  // Private Methods\n\n  _pick(method, statKey, opts) {\n    const {stats} = this;\n\n    stats.get('Pick Count').incrementCount();\n    stats.get(statKey).timeStart();\n\n    const infos = this.deckPicker[method](\n      Object.assign(\n        {\n          layers: this.layerManager.getLayers(opts),\n          views: this.viewManager.getViews(),\n          viewports: this.getViewports(opts),\n          onViewportActive: this.layerManager.activateViewport\n        },\n        opts\n      )\n    );\n\n    stats.get(statKey).timeEnd();\n\n    return infos;\n  }\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      autoResizeViewport: false,\n      gl,\n      onCreateContext: opts =>\n        createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState() {\n    return this.props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews() {\n    // Default to a full screen map view port\n    let views = this.props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && this.props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = this.props.controller;\n    }\n    return views;\n  }\n\n  // The `pointermove` event may fire multiple times in between two animation frames,\n  // it's a waste of time to run picking without rerender. Instead we save the last pick\n  // request and only do it once on the next animation frame.\n  _onPointerMove(event) {\n    const {_pickRequest} = this;\n    if (event.type === 'pointerleave') {\n      _pickRequest.x = -1;\n      _pickRequest.y = -1;\n      _pickRequest.radius = 0;\n    } else if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    } else {\n      const pos = event.offsetCenter;\n      // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n      // assertion error when attempting to unproject the position.\n      if (!pos) {\n        return;\n      }\n      _pickRequest.x = pos.x;\n      _pickRequest.y = pos.y;\n      _pickRequest.radius = this.props.pickingRadius;\n    }\n\n    if (this.layerManager) {\n      this.layerManager.context.mousePosition = {x: _pickRequest.x, y: _pickRequest.y};\n    }\n\n    _pickRequest.event = event;\n    _pickRequest.mode = 'hover';\n  }\n\n  // Actually run picking\n  _pickAndCallback() {\n    const {_pickRequest} = this;\n\n    if (_pickRequest.event) {\n      // Perform picking\n      const {result, emptyInfo} = this._pick('pickObject', 'pickObject Time', _pickRequest);\n\n      // There are 4 possible scenarios:\n      // result is [outInfo, pickedInfo] (moved from one pickable layer to another)\n      // result is [outInfo] (moved outside of a pickable layer)\n      // result is [pickedInfo] (moved into or over a pickable layer)\n      // result is [] (nothing is or was picked)\n      //\n      // `layer.props.onHover` should be called on all affected layers (out/over)\n      // `deck.props.onHover` should be called with the picked info if any, or empty info otherwise\n      // `deck.props.getTooltip` should be called with the picked info if any, or empty info otherwise\n\n      // Execute callbacks\n      let pickedInfo = emptyInfo;\n      let handled = false;\n      for (const info of result) {\n        pickedInfo = info;\n        handled = info.layer.onHover(info, _pickRequest.event);\n      }\n      if (!handled && this.props.onHover) {\n        this.props.onHover(pickedInfo, _pickRequest.event);\n      }\n\n      // Update tooltip\n      if (this.props.getTooltip) {\n        const displayInfo = this.props.getTooltip(pickedInfo);\n        this.tooltip.setTooltip(displayInfo, pickedInfo.x, pickedInfo.y);\n      }\n\n      // Clear pending pickRequest\n      _pickRequest.event = null;\n    }\n  }\n\n  _updateCursor() {\n    const container = this.props.parent || this.canvas;\n    if (container) {\n      container.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      instrumentGLContext(gl, {enable: true, copyState: true});\n    }\n\n    this.tooltip = new Tooltip(this.canvas);\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    // timeline for transitions\n    const timeline = new Timeline();\n    timeline.play();\n    this.animationLoop.attachTimeline(timeline);\n\n    this.eventManager = new EventManager(this.props.parent || gl.canvas, {\n      touchAction: this.props.touchAction,\n      events: {\n        pointerdown: this._onPointerDown,\n        pointermove: this._onPointerMove,\n        pointerleave: this._onPointerMove\n      }\n    });\n    for (const eventType in EVENTS) {\n      this.eventManager.on(eventType, this._onEvent);\n    }\n\n    this.viewManager = new ViewManager({\n      timeline,\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(),\n      viewState: this._getViewState(),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    const viewport = this.viewManager.getViewports()[0];\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      deck: this,\n      stats: this.stats,\n      viewport,\n      timeline\n    });\n\n    this.effectManager = new EffectManager();\n\n    this.deckRenderer = new DeckRenderer(gl);\n\n    this.deckPicker = new DeckPicker(gl);\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason, renderOptions) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.deckRenderer.renderLayers(\n      Object.assign(\n        {\n          target: this.props._framebuffer,\n          layers: this.layerManager.getLayers(),\n          viewports: this.viewManager.getViewports(),\n          onViewportActive: this.layerManager.activateViewport,\n          views: this.viewManager.getViews(),\n          pass: 'screen',\n          redrawReason,\n          effects: this.effectManager.getEffects()\n        },\n        renderOptions\n      )\n    );\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this._getFrameStats();\n\n    // Log perf stats every second\n    if (this._metricsCounter++ % 60 === 0) {\n      this._getMetrics();\n      this.stats.reset();\n      log.table(4, this.metrics)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        this.props._onMetrics(this.metrics);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    // Perform picking request if any\n    this._pickAndCallback();\n\n    // Redraw if necessary\n    this.redraw(false);\n\n    // Update viewport transition if needed\n    // Note: this can trigger `onViewStateChange`, and affect layers\n    // We want to defer these changes to the next frame\n    if (this.viewManager) {\n      this.viewManager.updateViewStates();\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState = {...this.viewState, [params.viewId]: viewState};\n      if (!this.props.viewState) {\n        // Apply internal view state\n        this.viewManager.setProps({viewState: this.viewState});\n      }\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const layers = this.layerManager.getLayers();\n    const info = this.deckPicker.getLastPickedObject(\n      {\n        x: pos.x,\n        y: pos.y,\n        layers,\n        viewports: this.getViewports(pos)\n      },\n      this._lastPointerDownInfo\n    );\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerDown(event) {\n    const pos = event.offsetCenter;\n    this._lastPointerDownInfo = this.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius: this.props.pickingRadius\n    });\n  }\n\n  _getFrameStats() {\n    const {stats} = this;\n    stats.get('frameRate').timeEnd();\n    stats.get('frameRate').timeStart();\n\n    // Get individual stats from luma.gl so reset works\n    const animationLoopStats = this.animationLoop.stats;\n    stats.get('GPU Time').addTime(animationLoopStats.get('GPU Time').lastTiming);\n    stats.get('CPU Time').addTime(animationLoopStats.get('CPU Time').lastTiming);\n  }\n\n  _getMetrics() {\n    const {metrics, stats} = this;\n    metrics.fps = stats.get('frameRate').getHz();\n    metrics.setPropsTime = stats.get('setProps Time').time;\n    metrics.updateAttributesTime = stats.get('Update Attributes').time;\n    metrics.framesRedrawn = stats.get('Redraw Count').count;\n    metrics.pickTime =\n      stats.get('pickObject Time').time +\n      stats.get('pickMultipleObjects Time').time +\n      stats.get('pickObjects Time').time;\n    metrics.pickCount = stats.get('Pick Count').count;\n\n    // Luma stats\n    metrics.gpuTime = stats.get('GPU Time').time;\n    metrics.cpuTime = stats.get('CPU Time').time;\n    metrics.gpuTimePerFrame = stats.get('GPU Time').getAverageTime();\n    metrics.cpuTimePerFrame = stats.get('CPU Time').getAverageTime();\n\n    const memoryStats = lumaStats.get('Memory Usage');\n    metrics.bufferMemory = memoryStats.get('Buffer Memory').count;\n    metrics.textureMemory = memoryStats.get('Texture Memory').count;\n    metrics.renderbufferMemory = memoryStats.get('Renderbuffer Memory').count;\n    metrics.gpuMemory = memoryStats.get('GPU Memory').count;\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n\n// This is used to defeat tree shaking of init.js\n// https://github.com/visgl/deck.gl/issues/3213\nDeck.VERSION = deckGlobal.VERSION;\n","// Check if one JavaScript class inherits from another\nexport function inheritsFrom(Type, ParentType) {\n  while (Type) {\n    if (Type === ParentType) {\n      return true;\n    }\n    Type = Object.getPrototypeOf(Type);\n  }\n  return false;\n}\n","import React, {createElement} from 'react';\nimport {inheritsFrom} from './inherits-from';\nimport {Layer, View} from '@deck.gl/core';\n\n// recursively wrap render callbacks in `View`\nfunction wrapInView(node) {\n  if (!node) {\n    return node;\n  }\n  if (typeof node === 'function') {\n    // React.Children does not traverse functions.\n    // All render callbacks must be protected under a <View>\n    return createElement(View, {}, node);\n  }\n  if (Array.isArray(node)) {\n    return node.map(wrapInView);\n  }\n  if (node.type === React.Fragment) {\n    return wrapInView(node.props.children);\n  }\n  if (inheritsFrom(node.type, View)) {\n    return node;\n  }\n  return node;\n}\n\n// extracts any deck.gl layers masquerading as react elements from props.children\nexport default function extractJSXLayers({children, layers, views}) {\n  const reactChildren = []; // extract real react elements (i.e. not deck.gl layers)\n  const jsxLayers = []; // extracted layer from react children, will add to deck.gl layer array\n  const jsxViews = {};\n\n  // React.children\n  React.Children.forEach(wrapInView(children), reactElement => {\n    if (reactElement) {\n      // For some reason Children.forEach doesn't filter out `null`s\n      const ElementType = reactElement.type;\n      if (inheritsFrom(ElementType, Layer)) {\n        const layer = createLayer(ElementType, reactElement.props);\n        jsxLayers.push(layer);\n      } else {\n        reactChildren.push(reactElement);\n      }\n\n      // empty id => default view\n      if (ElementType !== View && inheritsFrom(ElementType, View) && reactElement.props.id) {\n        const view = new ElementType(reactElement.props);\n        jsxViews[view.id] = view;\n      }\n    }\n  });\n\n  // Avoid modifying views if no JSX views were found\n  if (Object.keys(jsxViews).length > 0) {\n    // If a view is specified in both views prop and JSX, use the one in views\n    if (Array.isArray(views)) {\n      views.forEach(view => {\n        jsxViews[view.id] = view;\n      });\n    } else if (views) {\n      jsxViews[views.id] = views;\n    }\n    views = Object.values(jsxViews);\n  }\n\n  // Avoid modifying layers array if no JSX layers were found\n  layers = jsxLayers.length > 0 ? [...jsxLayers, ...layers] : layers;\n\n  return {layers, children: reactChildren, views};\n}\n\nfunction createLayer(LayerType, reactProps) {\n  const props = {};\n  // Layer.defaultProps is treated as ReactElement.defaultProps and merged into react props\n  // Remove them\n  const defaultProps = LayerType.defaultProps || {};\n  for (const key in reactProps) {\n    if (defaultProps[key] !== reactProps[key]) {\n      props[key] = reactProps[key];\n    }\n  }\n  return new LayerType(props);\n}\n","import {cloneElement} from 'react';\n\nconst MAP_STYLE = {position: 'absolute', zIndex: -1};\n\nexport default function evaluateChildren(children, childProps) {\n  if (!children) {\n    return children;\n  }\n  if (typeof children === 'function') {\n    return children(childProps);\n  }\n  if (Array.isArray(children)) {\n    return children.map(child => evaluateChildren(child, childProps));\n  }\n\n  // Special treatment for react-map-gl's Map component\n  // to support shorthand use case <DeckGL><StaticMap /></DeckGL>\n  if (isReactMap(children)) {\n    // Place map under the canvas\n    childProps.style = MAP_STYLE;\n    return cloneElement(children, childProps);\n  }\n  if (needsDeckGLViewProps(children)) {\n    return cloneElement(children, childProps);\n  }\n  return children;\n}\n\nfunction isReactMap(child) {\n  const componentClass = child && child.type;\n  const componentProps = componentClass && componentClass.defaultProps;\n  return componentProps && componentProps.mapStyle;\n}\n\nfunction needsDeckGLViewProps(child) {\n  const componentClass = child && child.type;\n  return componentClass && componentClass.deckGLViewProps;\n}\n","import {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren from './evaluate-children';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({children, viewports, deck, ContextProvider}) {\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views = {};\n  const defaultViewId = viewManager.views[0].id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n","const CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\n\nexport default function extractStyles({width, height, style}) {\n  // This styling is enforced for correct positioning with children\n  const containerStyle = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n\n  // Fill the container\n  const canvasStyle = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {containerStyle, canvasStyle};\n}\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport {Deck, _memoize as memoize} from '@deck.gl/core';\n\nimport extractJSXLayers from './utils/extract-jsx-layers';\nimport positionChildrenUnderViews from './utils/position-children-under-views';\nimport extractStyles from './utils/extract-styles';\n\nconst propTypes = Deck.getPropTypes(PropTypes);\n\nconst defaultProps = Deck.defaultProps;\n\nexport default class DeckGL extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.viewports = null;\n    this.children = null;\n\n    // The redraw flag of deck\n    this._needsRedraw = null;\n\n    // Refs\n    this._containerRef = React.createRef();\n    this._canvasRef = React.createRef();\n\n    // Bind public methods\n    this.pickObject = this.pickObject.bind(this);\n    this.pickMultipleObjects = this.pickMultipleObjects.bind(this);\n    this.pickObjects = this.pickObjects.bind(this);\n\n    // Memoized functions\n    this._extractJSXLayers = memoize(extractJSXLayers);\n    this._positionChildrenUnderViews = memoize(positionChildrenUnderViews);\n    this._extractStyles = memoize(extractStyles);\n  }\n\n  componentDidMount() {\n    // Allows a subclass of Deck to be used\n    // TODO - update propTypes / defaultProps?\n    const DeckClass = this.props.Deck || Deck;\n\n    // DEVTOOLS can cause this to be called twice\n    this.deck =\n      this.deck ||\n      new DeckClass(\n        Object.assign({}, this.props, {\n          parent: this._containerRef.current,\n          canvas: this._canvasRef.current,\n          style: null,\n          width: '100%',\n          height: '100%',\n          // The Deck's animation loop is independent from React's render cycle, causing potential\n          // synchronization issues. We provide this custom render function to make sure that React\n          // and Deck update on the same schedule.\n          _customRender: this._customRender.bind(this)\n        })\n      );\n    this._updateFromProps(this.props);\n  }\n\n  // This method checks if React needs to call `render`.\n  // Props changes may lead to 3 types of updates:\n  // 1. Only the WebGL context - updated in Deck's render cycle (next animation frame)\n  // 2. Only the DOM - updated in React's lifecycle (now)\n  // 3. Both the WebGL context and the DOM - defer React rerender to next animation frame just\n  //    before Deck redraw to ensure perfect synchronization & avoid excessive redraw\n  //    This is because multiple changes may happen to Deck between two frames e.g. transition\n  shouldComponentUpdate(nextProps) {\n    // Update Deck's props. If Deck needs redraw, this will trigger a call to `_customRender` in\n    // the next animation frame.\n    this._updateFromProps(nextProps);\n\n    // If the child components have changed, React needs to rerender (case 2 or 3)\n    const childrenChanged = this.children !== this._parseJSX(nextProps).children;\n    // If the views have changed, both React and WebGL context need update (case 3)\n    const viewsChanged = this.deck.viewManager && this.deck.viewManager.needsRedraw();\n\n    // Only call `render` right away in case 2\n    return childrenChanged && !viewsChanged;\n  }\n\n  componentDidUpdate() {\n    // render has just been called. The children are positioned based on the current view state.\n    // Redraw Deck canvas immediately, if necessary, using the current view state, so that it\n    // matches the child components.\n    this._redrawDeck();\n  }\n\n  componentWillUnmount() {\n    this.deck.finalize();\n  }\n\n  // Public API\n\n  pickObject(opts) {\n    return this.deck.pickObject(opts);\n  }\n\n  pickMultipleObjects(opts) {\n    return this.deck.pickMultipleObjects(opts);\n  }\n\n  pickObjects(opts) {\n    return this.deck.pickObjects(opts);\n  }\n\n  // Callbacks\n  _redrawDeck() {\n    if (this._needsRedraw) {\n      // Only redraw it we have received a dirty flag\n      this.deck._drawLayers(this._needsRedraw);\n      this._needsRedraw = null;\n    }\n  }\n\n  _customRender(redrawReason) {\n    // Save the dirty flag for later\n    this._needsRedraw = redrawReason;\n\n    // Viewport/view state is passed to child components as props.\n    // If they have changed, we need to trigger a React rerender to update children props.\n    const viewports = this.deck.viewManager.getViewports();\n    if (viewports !== this.viewports) {\n      // Viewports have changed, update children props first.\n      // This will delay the Deck canvas redraw till after React update (in componentDidUpdate)\n      // so that the canvas does not get rendered before the child components update.\n      this.forceUpdate();\n    } else {\n      this._redrawDeck();\n    }\n  }\n\n  // Private Helpers\n\n  _parseJSX(props) {\n    return this._extractJSXLayers({\n      layers: props.layers,\n      views: props.views,\n      children: props.children\n    });\n  }\n\n  // 1. Extract any JSX layers from the react children\n  // 2. Handle any backwards compatiblity props for React layer\n  // Needs to be called both from initial mount, and when new props are received\n  _updateFromProps(props) {\n    // extract any deck.gl layers masquerading as react elements from props.children\n    const {layers, views} = this._parseJSX(props);\n    const deckProps = Object.assign({}, props, {\n      // Override user styling props. We will set the canvas style in render()\n      style: null,\n      width: '100%',\n      height: '100%',\n      layers,\n      views\n    });\n\n    this.deck.setProps(deckProps);\n  }\n\n  render() {\n    const {ContextProvider, width, height, style} = this.props;\n    // Save the viewports and children used for this render\n    const {viewManager} = this.deck || {};\n    this.viewports = viewManager && viewManager.getViewports();\n    this.children = this._parseJSX(this.props).children;\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const children = this._positionChildrenUnderViews({\n      children: this.children,\n      viewports: this.viewports,\n      deck: this.deck,\n      ContextProvider\n    });\n\n    const {containerStyle, canvasStyle} = this._extractStyles({width, height, style});\n\n    const canvas = createElement('canvas', {\n      key: 'canvas',\n      ref: this._canvasRef,\n      style: canvasStyle\n    });\n\n    // Render deck.gl as the last child\n    return createElement(\n      'div',\n      {id: 'deckgl-wrapper', ref: this._containerRef, style: containerStyle},\n      [canvas, children]\n    );\n  }\n}\n\nDeckGL.propTypes = propTypes;\nDeckGL.defaultProps = defaultProps;\n","import React, {Component} from 'react';\nimport DeckGL from '@deck.gl/react';\nimport {View} from '@deck.gl/core';\n\nexport default class DeckWithMapboxMaps extends Component {\n  render() {\n    const {views = []} = this.props;\n\n    const maps = [];\n    for (const view of views) {\n      if (view.props.map || view.props.mapStyle) {\n        maps.push(\n          <View id={view.props.id} key={view.props.id}>\n            <this.props.Map\n              reuseMap\n              mapStyle={view.props.mapStyle}\n            />\n          </View>\n        );\n      }\n    }\n    return (\n      <div className=\"deck-gl-map-container\">\n        <DeckGL id=\"json-deck\" {...this.props}>\n          {maps}\n        </DeckGL>\n        <div className=\"zoom-control\">\n          <div className=\"zoom-option\" data-type=\"zoom-in\" onClick={this.props.onZoom}>\n            <img src=\"/icons/zoom-in.svg\" alt=\"Zoom In\"/>\n          </div>\n          <div className=\"zoom-option\" data-type=\"zoom-out\" onClick={this.props.onZoom}>\n            <img src=\"/icons/zoom-out.svg\" alt=\"Zoom Out\"/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","/* global google */\nimport {createDeckInstance, destroyDeckInstance, getViewState} from './utils';\n\nconst HIDE_ALL_LAYERS = () => false;\n\nexport default class GoogleMapsOverlay {\n  constructor(props) {\n    this.props = {};\n\n    this._map = null;\n\n    const overlay = new google.maps.OverlayView();\n    overlay.onAdd = this._onAdd.bind(this);\n    overlay.onRemove = this._onRemove.bind(this);\n    overlay.draw = this._draw.bind(this);\n    this._overlay = overlay;\n\n    this.setProps(props);\n  }\n\n  /* Public API */\n\n  setMap(map) {\n    if (map === this._map) {\n      return;\n    }\n    if (this._map) {\n      this._overlay.setMap(null);\n      this._map = null;\n    }\n    if (map) {\n      this._map = map;\n      this._overlay.setMap(map);\n    }\n  }\n\n  setProps(props) {\n    Object.assign(this.props, props);\n    if (this._deck) {\n      if (props.style) {\n        Object.assign(this._deck.canvas.parentElement.style, props.style);\n        props.style = null;\n      }\n      this._deck.setProps(props);\n    }\n  }\n\n  pickObject(params) {\n    return this._deck && this._deck.pickObject(params);\n  }\n\n  pickMultipleObjects(params) {\n    return this._deck && this._deck.pickMultipleObjects(params);\n  }\n\n  pickObjects(params) {\n    return this._deck && this._deck.pickObjects(params);\n  }\n\n  finalize() {\n    this.setMap(null);\n    if (this._deck) {\n      destroyDeckInstance(this._deck);\n      this._deck = null;\n    }\n  }\n\n  /* Private API */\n  _onAdd() {\n    this._deck = createDeckInstance(this._map, this._overlay, this._deck, this.props);\n  }\n\n  _onRemove() {\n    // Clear deck canvas\n    this._deck.setProps({layerFilter: HIDE_ALL_LAYERS});\n  }\n\n  _draw() {\n    const deck = this._deck;\n    const {width, height, left, top, zoom, pitch, latitude, longitude} = getViewState(\n      this._map,\n      this._overlay\n    );\n\n    const canSyncWithGoogleMaps = pitch === 0;\n\n    const parentStyle = deck.canvas.parentElement.style;\n    parentStyle.left = `${left}px`;\n    parentStyle.top = `${top}px`;\n\n    deck.setProps({\n      width,\n      height,\n      viewState: {latitude, longitude, zoom, repeat: true},\n      // deck.gl cannot sync with the base map with zoom < 0 and/or tilt\n      layerFilter: canSyncWithGoogleMaps ? this.props.layerFilter : HIDE_ALL_LAYERS\n    });\n    // Deck is initialized\n    deck.redraw();\n  }\n}\n","import React, {Component} from 'react';\nimport {GoogleMapsOverlay} from '@deck.gl/google-maps';\n\nconst HOST = 'https://maps.googleapis.com/maps/api/js';\nconst LOADING_GIF = 'https://upload.wikimedia.org/wikipedia/commons/d/de/Ajax-loader.gif';\n\nconst style = {\n  height: \"100%\",\n  width: \"100%\"\n};\n\nfunction injectScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = src;\n    script.addEventListener('load', resolve);\n    script.addEventListener('error', e => reject(e.error));\n    document.head.appendChild(script);\n  });\n}\n\nfunction loadGoogleMapApi(apiKey, onComplete) {\n  const url = `${HOST}?key=${apiKey}&libraries=places`;\n  injectScript(url)\n    .then(() => onComplete())\n    // eslint-disable-next-line no-console\n    .catch(e => console.error(e));\n}\n\nexport default class DeckWithGoogleMaps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      googleMapsLoaded: window.google && window.google.maps\n    };\n  }\n\n  componentDidMount() {\n    const {googleMapsToken} = this.props;\n    if (!window.google || (window.google && !window.google.maps)) {\n      loadGoogleMapApi(googleMapsToken, () => {\n        this.setState({googleMapsLoaded: true});\n      });\n    }\n  }\n\n  render() {\n    const {googleMapsLoaded} = this.state;\n    if (!googleMapsLoaded) {\n      return <img src={LOADING_GIF} alt=\"Loading Google Maps overlay...\" />;\n    }\n\n    return <DeckOverlayWrapper {...this.props} />;\n  }\n}\n\nclass DeckOverlayWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOverlayConfigured: false\n    };\n    this.DeckOverlay = new GoogleMapsOverlay({layers: []});\n    this.containerRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {initialViewState} = this.props;\n    const view = {\n      center: {lat: initialViewState.latitude, lng: initialViewState.longitude},\n      mapTypeId: this.props.mapTypeId || 'satellite',\n      zoom: initialViewState.zoom\n    };\n\n    const map = new window.google.maps.Map(this.containerRef.current, view);\n    this.DeckOverlay.setMap(map);\n    this.DeckOverlay.setProps({layers: this.props.layers});\n    // eslint-disable-next-line react/no-did-mount-set-state\n    this.setState({isOverlayConfigured: true});\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.DeckOverlay.setProps({layers: this.props.layers});\n  }\n\n  componentWillUnmount() {\n    delete this.DeckOverlay;\n  }\n\n  render() {\n    return <div ref={this.containerRef} style={style} />;\n  }\n}\n","import DeckWithMapboxMaps from './deck-with-mapbox-maps';\nimport DeckWithGoogleMaps from './deck-with-google-maps';\nimport {StaticMap} from 'react-map-gl';\nimport {BASEMAP} from '@deck.gl/carto';\n\nconst GOOGLE_MAPS_TOKEN = \"AIzaSyCb2CTi3B6uarznVAs33W8VMER-1wz3ZrI\"\n\nexport default function Map(props) {\n  let deckMap;\n  if (props && props && props.google) {\n    deckMap = (\n      <DeckWithGoogleMaps\n        id=\"json-deck\"\n        {...props}\n        googleMapsToken={GOOGLE_MAPS_TOKEN}\n      />\n    );\n  } else {\n    deckMap = (\n      <DeckWithMapboxMaps\n        id=\"json-deck\"\n        {...props}\n        Map={StaticMap}\n        mapStyle={BASEMAP.POSITRON}\n        onZoom={props.onZoom}\n      />\n    );\n  }\n  \n  return deckMap;\n};\n\n","import {useState, useEffect} from 'react';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n\nexport default function JSONEditor(props) {\n  const [text, setText] = useState(JSON.stringify(props.json, null, 2));\n  function handleChange(text, event){\n    // Parse JSON, while capturing and ignoring exceptions\n    try {\n      text && JSON.parse(text);\n      setText(text);\n      if (props.onJsonUpdated) {\n        props.onJsonUpdated(text);\n      }\n    } catch (error) {\n      // ignore error, user is editing and not yet correct JSON\n    }\n  }\n\n  useEffect(() => {\n    setText(JSON.stringify(props.json, null, 2));\n  }, [props.json]);\n\n  return (\n    <div className='json-form'>\n      <AceEditor\n                width=\"100%\"\n                height=\"100%\"\n                mode=\"json\"\n                theme=\"github\"\n                onChange={handleChange}\n                name=\"AceEditorDiv\"\n                editorProps={{$blockScrolling: true}}\n                wrapEnabled={true}\n                value={text}\n              />\n    </div>\n  );\n  \n}","import {useState, useEffect} from 'react';\nimport JSONEditor from '../components/json-editor';\n\n\nfunction ConfigurationSidebar(props) {\n  const [basemap, setBasemap] = useState(\"carto\");\n  const [showBasemapOptions, setBasemapOptions] = useState(true);\n  const [showEditor, setEditorOptions] = useState(true);\n  const [basemapStyle, setBasemapStyle] = useState(null);\n\n  useEffect(() => {\n    setBasemap(props.json[\"google\"] ? 'gmaps' : 'carto')\n  }, [props.json]);\n\n  useEffect(() => {\n    for(var i in props.json[\"views\"]) {\n      if(props.json[\"views\"][i][\"@@type\"] === \"MapView\") {\n        setBasemapStyle(props.json[\"views\"][i][\"mapStyle\"])\n        break;\n      }\n    }\n  }, [props.json]);\n\n  const changeMap = (e) => {\n    props.onBasemapChange(e.currentTarget.value);\n  }\n\n  const toggleBasemapOptions = () => {\n    setBasemapOptions(!showBasemapOptions)\n  }\n\n  const toggleEditor = () => {\n    setEditorOptions(!showEditor);\n  }\n\n  const onStyleChange = (e) => {\n    setBasemapStyle(e.target.value);\n    props.onStyleChange(e);\n  }\n\n  return  <div className=\"configuration-sidebar\">\n            <div className=\"configuration-sidebar__title\">\n              <h2>Configuration</h2>\n              <div className=\"close-button\" onClick={props.onClose}>\n                <img src=\"/icons/close.svg\" alt=\"Close\"/>\n              </div>\n            </div>\n            <div className={`configuration-sidebar__section ${showBasemapOptions? 'open':''}`}>\n              <div className=\"section-title\" onClick={toggleBasemapOptions}>\n                <h3>Basemap</h3>\n              </div>\n              <div className=\"section-content\">\n                <div className=\"section-content__group\">\n                  <input type=\"radio\" id=\"gmaps\" name=\"basemap\" value=\"gmaps\" onChange={changeMap} checked={basemap === 'gmaps'}/>\n                  <label htmlFor=\"gmaps\">Google Maps</label>\n                </div>\n                <div className=\"section-content__group\">\n                  <input type=\"radio\" id=\"carto\" name=\"basemap\" value=\"carto\" onChange={changeMap} checked={basemap === 'carto'}/>\n                  <label htmlFor=\"carto\">CARTO</label>\n                </div>\n                {basemap === 'carto' &&\n                  <div className=\"section-content__selector\">\n                    <label htmlFor=\"basemapStyle\">Style</label>\n                    <select id=\"basemapStyle\" name=\"basemapStyle\" value={basemapStyle} onChange={onStyleChange}>\n                      <option value=\"@@#CARTO_BASEMAP.POSITRON\">Positron</option>\n                      <option value=\"@@#CARTO_BASEMAP.DARK_MATTER\">Dark Matter</option>\n                      <option value=\"@@#CARTO_BASEMAP.VOYAGER\">Voyager</option>\n                    </select>\n                  </div>\n                }\n              </div>\n            </div>\n\n            <div className={`configuration-sidebar__section configuration-sidebar__section--editor ${showEditor? 'open':''}`}>\n              <div className=\"section-title\" onClick={toggleEditor}>\n                <h3>Editor</h3>\n              </div>\n              <div className=\"section-content no-side-padding\">\n                {props.json && <JSONEditor onJsonUpdated={props.onJsonUpdated} json={props.json}/> }\n              </div>\n            </div>\n          </div>\n}\n\nexport default ConfigurationSidebar;","import {useState, useRef} from 'react';\n\nfunction ShareSidebar(props) {\n  const [showEmbed, setShowEmbed] = useState(true);\n  const [showUrl, setShowUrl] = useState(true);\n\n  const urlShareRef = useRef();\n  const embedCodeRef = useRef();\n\n  const toggleEmbed = () => {\n    setShowEmbed(!showEmbed);\n  }\n\n  const toggleUrl = () => {\n    setShowUrl(!showUrl);\n  }\n\n  const shareUrl = (json, viewState) => {\n    const {origin, pathname} = window.location;\n\n    if(viewState)\n      json.initialViewState = {...viewState};\n    \n    const config = encodeURIComponent(btoa(JSON.stringify(json, null, 0)));\n    return `${origin + pathname}?config=${config}`;\n  }\n\n  const iframeCode = (json, viewState) => {\n    var url = shareUrl(json, viewState);\n    var iframeUrl = `<iframe src=\"${url}&embed=true\" title=\"Deck.gl Playground\"/>`;\n    return iframeUrl;\n  }\n\n  const copyTextarea = (e, reference) => {\n    reference.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n  };\n\n  return  <div className=\"configuration-sidebar\">\n            <div className=\"configuration-sidebar__title\">\n              <h2>Share</h2>\n              <div className=\"close-button\" onClick={props.onClose}>\n                <img src=\"/icons/close.svg\" alt=\"Close\"/>\n              </div>\n            </div>\n            <div className={`configuration-sidebar__section ${showUrl? 'open':''}`}>\n              <div className=\"section-title\" onClick={toggleUrl}>\n                <h3>URL</h3>\n              </div>\n              <div className=\"section-content\">\n                <textarea ref={urlShareRef} readOnly value={shareUrl(props.json, props.viewState)}></textarea>\n                <div className=\"button-container\">\n                  <button className=\"button\" onClick={(e) => copyTextarea(e, urlShareRef)}>Copy URL</button>\n                </div>\n              </div>\n            </div>\n\n            <div className={`configuration-sidebar__section ${showEmbed? 'open':''}`}>\n              <div className=\"section-title\" onClick={toggleEmbed}>\n                <h3>Embed map</h3>\n              </div>\n              <div className=\"section-content\">\n                <textarea ref={embedCodeRef} readOnly value={iframeCode(props.json, props.viewState)}></textarea>\n                <div className=\"button-container\">\n                  <button className=\"button\" onClick={(e) => copyTextarea(e, embedCodeRef)}>Copy Code</button>\n                </div>\n              </div>\n            </div>\n          </div>\n}\n\nexport default ShareSidebar;","import {useState} from 'react';\nimport ConfigurationSidebar from '../components/configurationSidebar';\nimport ShareSidebar from '../components/shareSidebar';\n\nfunction Sidebar(props) {\n  const [configurationSidebarOpen, setConfigurationSidebarOpen] = useState(false);\n  const [shareSidebarOpen, setShareSidebarOpen] = useState(false);\n\n  const closeConfigurationSidebar = () => {\n    props.onMenuCloses();\n    setConfigurationSidebarOpen(false);\n  }\n\n  const openConfigurationSidebar = () => {\n    closeShareSidebar();\n    setConfigurationSidebarOpen(true);\n  }\n\n  const closeShareSidebar = () => {\n    props.onMenuCloses();\n    setShareSidebarOpen(false);\n  }\n\n  const openShareSidebar = () => {\n    closeConfigurationSidebar();\n    setShareSidebarOpen(true);\n  }\n\n  return  <div className=\"sidebar-container\">\n            <div className=\"sidebar\">\n              <div className=\"sidebar__element sidebar__element--logo\">\n                <img src=\"/icons/carto-logo.svg\" alt=\"CARTO\"/>\n              </div>\n              <div className={`sidebar__element ${configurationSidebarOpen? 'is-selected':''}`} onClick={openConfigurationSidebar}>\n                <img src=\"/icons/settings.svg\" alt=\"Settings\"/>\n              </div>\n              <div className={`sidebar__element ${shareSidebarOpen? 'is-selected':''}`} onClick={openShareSidebar}>\n                <img src=\"/icons/share.svg\" alt=\"Share map\"/>\n              </div>\n            </div>\n            {configurationSidebarOpen &&\n              <ConfigurationSidebar\n                  onBasemapChange={props.onBasemapChange}\n                  onStyleChange={props.onStyleChange}\n                  json={props.json}\n                  onJsonUpdated={props.onJsonUpdated}\n                  onClose={closeConfigurationSidebar}/>}\n            {shareSidebarOpen &&\n              <ShareSidebar\n                json={props.jsonMap}\n                viewState={props.viewState}\n                onClose={closeShareSidebar}\n                />}\n          </div>\n}\n\nexport default Sidebar;","import {useState, useEffect} from 'react';\nimport {useLocation, useParams} from \"react-router-dom\";\nimport {JSONConverter, JSONConfiguration} from '@deck.gl/json';\nimport JSON_CONVERTER_CONFIGURATION from '../json/configuration';\nimport Map from '../components/map';\nimport Sidebar from '../components/sidebar';\n\nconst DEFAULT_DATA = {\n  'sql': 'TYPE A SQL QUERY OR A DATASET NAME',\n  'tileset': 'TYPE A TILESET NAME',\n};\nconst configuration = new JSONConfiguration(JSON_CONVERTER_CONFIGURATION);\nconst jsonConverter = new JSONConverter({configuration});\n\nfunction addUpdateTriggersForAccesors(json) {\n  if (!json || !json.layers) return;\n\n  for (const layer of json.layers) {\n    const updateTriggers = {};\n    for (const [key, value] of Object.entries(layer)) {\n      if (key.startsWith('get') && typeof value === 'string') {\n        // it's an accesor and it's a string\n        // we add the value of the accesor to update trigger to refresh when it changes\n        updateTriggers[key] = value;\n      }\n    }\n    if (Object.keys(updateTriggers).length) {\n      layer.updateTriggers = updateTriggers;\n    }\n  }\n}\n\nfunction parseConfig(query, username, type ) {\n  \n  const config = query.get('config');\n  let json;\n  let ready;\n\n  if (!config) {\n    // valid sources are postgres and bigquery\n    let data = query.get('data') || DEFAULT_DATA[type];\n    const apiKey =  query.get('api_key') || 'default_public';\n    const colorByValue = query.get('color_by_value');\n\n    ready = \n      data !== DEFAULT_DATA['sql'] &&\n      data !== DEFAULT_DATA['tileset'];\n      \n    // fetch template and set parameters\n    json = require(`../json/template.${type}.json`);\n    json.layers[0].data = data;\n    json.layers[0].credentials = {username, apiKey}\n    if (colorByValue) {\n      json.layers[0].getFillColor = \n        `@@= properties.${colorByValue} > 1000000 ? [207, 89, 126] : properties.${colorByValue} > 100000 ? [232, 133, 113] : properties.${colorByValue} > 10000 ? [238, 180, 121] : properties.${colorByValue} > 1000 ? [233, 226, 156] : properties.${colorByValue} > 100 ? [156, 203, 134] : properties.${colorByValue} > 10 ? [57, 177, 133] : [0, 147, 146]`;\n    }\n  } else {\n    json = JSON.parse(atob(decodeURIComponent(config)));\n    ready = true;\n  }\n\n  return {json, ready};\n}\n\n\nfunction Home() {\n  const [json, setJSON] = useState();\n  const [jsonMap, setJSONMap] = useState();\n  const [jsonProps, setJSONPros] = useState(null);\n  const [viewState, setViewState] = useState(null);\n  const [embedMode, setEmbedMode] = useState(false);\n  const location = useLocation();\n  const {username, type} = useParams();\n\n  useEffect(() => {\n\n    if (!username) {\n      throw Error(`Unknowm type ${type}`)\n    }\n  \n    if (type!== 'sql' && type!=='bigquery'){\n      throw Error(`Unknowm type ${type}`)\n    }\n  \n    const query = new URLSearchParams(location.search);\n    setEmbedMode(query.get('embed'));\n    const {json, ready} = parseConfig(query, username, type);\n    if (!ready) {\n      setEmbedMode(false);\n    }\n    setJSON(json);\n    setJSONMap(json);\n    // Display config if something is missing and the map is not ready\n  }, [location, username, type]);\n\n  useEffect(() => {\n    addUpdateTriggersForAccesors(jsonMap);\n    const jsonProps = jsonConverter.convert(jsonMap);\n    setJSONPros(jsonProps);\n  }, [jsonMap]);\n\n  const onEditorChange = (jsonText) => {\n    const tempJson = JSON.parse(jsonText)\n    setJSONMap(tempJson);\n    setViewState(tempJson.initialViewState);\n  }\n\n  const onBasemapChange = (newBasemap) => {\n    var currentJson = {...jsonMap};\n    if (newBasemap === 'carto')\n      delete currentJson[\"google\"];\n    else if (newBasemap === 'gmaps')\n      currentJson[\"google\"] = true;\n    currentJson.initialViewState = viewState;\n    setJSON(currentJson);\n    setJSONMap(currentJson);\n  }\n\n  const onMenuCloses = (e) => {\n    setJSON(jsonMap);\n  }\n\n  const onViewStateChange = (e) => {\n    delete e.viewState[\"height\"];\n    delete e.viewState[\"width\"];\n    setViewState(e.viewState);\n  }\n\n  const onStyleChange = (e) => {\n    var newStyle = e.target.value;\n    var newJson = {...jsonMap};\n    var index = -1;\n    for(var i in newJson[\"views\"]) {\n      if(newJson[\"views\"][i][\"@@type\"] === \"MapView\") {\n        index = i;\n        break;\n      }\n    }\n    if(index >= 0)\n      newJson[\"views\"][index][\"mapStyle\"] = newStyle;\n    else {  \n      if(!newJson[\"views\"])\n        newJson[\"views\"] = [];\n      const newObject = {\n        \"@@type\": \"MapView\",\n        \"controller\": true,\n        \"mapStyle\": newStyle\n      }\n      newJson[\"views\"].push(newObject);\n    }\n    setJSON(newJson);\n    setJSONMap(newJson);\n  }\n\n  const onZoom = (e) => {\n    var zoomType = e.target.dataset.type;\n    var newJson = {...jsonMap};\n    if (viewState)\n      newJson[\"initialViewState\"] = {...viewState}\n    if (zoomType === \"zoom-in\"){\n      const currentZoom = newJson[\"initialViewState\"][\"zoom\"];\n      newJson[\"initialViewState\"][\"zoom\"] = currentZoom > 19 ? 20 : currentZoom + 1\n      setViewState(newJson[\"initialViewState\"]);\n      setJSONMap(newJson);\n    }\n    else if (zoomType === \"zoom-out\") {\n      const currentZoom = newJson[\"initialViewState\"][\"zoom\"];\n      newJson[\"initialViewState\"][\"zoom\"] = currentZoom < 2 ? 1 : currentZoom - 1\n      setViewState(newJson[\"initialViewState\"]);\n      setJSONMap(newJson);\n    }\n  }\n\n  return (\n      <div className={`home ${embedMode ? 'home--embed':''}`}>\n        {!embedMode && \n          <Sidebar\n            onBasemapChange={onBasemapChange}\n            onStyleChange={onStyleChange}\n            onMenuCloses={onMenuCloses}\n            onJsonUpdated={onEditorChange}\n            json={json}\n            jsonMap={jsonMap}\n            viewState={viewState}/>\n        }         \n        <div className='map'>\n          {jsonProps && \n            <Map {...jsonProps} onViewStateChange={onViewStateChange} onZoom={onZoom}/>\n          }\n        </div>\n        {embedMode && \n          <div className=\"footer\">\n            <p class=\"footer__text\">\n              <img src=\"/icons/carto-heart.png\" alt=\"\"/>\n              Created with <a href=\"https://carto.com\" target=\"_blank\" rel=\"noreferrer\">CARTO</a>\n            </p>\n            <a class=\"footer__logo\" href=\"https://carto.com\" target=\"_blank\" rel=\"noreferrer\">\n              <img src=\"/icons/carto-full-logo.svg\" alt=\"CARTO\"/>\n            </a>\n          </div>\n          }\n      </div>\n  );\n}\n\nexport default Home;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport './App.css';\n// import logo from './logo.svg';\n\nimport Home from './views/home';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/user/:username/:type\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}